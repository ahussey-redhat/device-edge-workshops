{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Button, ButtonVariant } from '../Button';\nexport const DataListToggle = _a => {\n  var {\n      className = '',\n      isExpanded = false,\n      'aria-controls': ariaControls = '',\n      'aria-label': ariaLabel = 'Details',\n      rowid = '',\n      id,\n      buttonProps\n    } = _a,\n    props = __rest(_a, [\"className\", \"isExpanded\", 'aria-controls', 'aria-label', \"rowid\", \"id\", \"buttonProps\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListItemControl, className)\n  }, props), React.createElement(\"div\", {\n    className: css(styles.dataListToggle)\n  }, React.createElement(Button, Object.assign({\n    id: id,\n    variant: ButtonVariant.plain,\n    \"aria-controls\": ariaControls !== '' && ariaControls,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabel !== 'Details' ? null : `${rowid} ${id}`,\n    \"aria-expanded\": isExpanded\n  }, buttonProps), React.createElement(\"div\", {\n    className: css(styles.dataListToggleIcon)\n  }, React.createElement(AngleRightIcon, null)))));\n};\nDataListToggle.displayName = 'DataListToggle';","map":{"version":3,"names":["React","css","AngleRightIcon","styles","Button","ButtonVariant","DataListToggle","_a","className","isExpanded","ariaControls","ariaLabel","rowid","id","buttonProps","props","__rest","createElement","Object","assign","dataListItemControl","dataListToggle","variant","plain","dataListToggleIcon","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\DataList\\DataListToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Button, ButtonProps, ButtonVariant } from '../Button';\n\nexport interface DataListToggleProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the DataList cell */\n  className?: string;\n  /** Flag to show if the expanded content of the DataList item is visible */\n  isExpanded?: boolean;\n  /** Identify the DataList toggle number */\n  id: string;\n  /** Id for the row */\n  rowid?: string;\n  /** Adds accessible text to the DataList toggle */\n  'aria-labelledby'?: string;\n  /** Adds accessible text to the DataList toggle */\n  'aria-label'?: string;\n  /** Allows users of some screen readers to shift focus to the controlled element. Should be used when the controlled contents are not adjacent to the toggle that controls them. */\n  'aria-controls'?: string;\n  /** Additional properties spread to the toggle button */\n  buttonProps?: ButtonProps;\n}\n\nexport const DataListToggle: React.FunctionComponent<DataListToggleProps> = ({\n  className = '',\n  isExpanded = false,\n  'aria-controls': ariaControls = '',\n  'aria-label': ariaLabel = 'Details',\n  rowid = '',\n  id,\n  buttonProps,\n  ...props\n}: DataListToggleProps) => (\n  <div className={css(styles.dataListItemControl, className)} {...props}>\n    <div className={css(styles.dataListToggle)}>\n      <Button\n        id={id}\n        variant={ButtonVariant.plain}\n        aria-controls={ariaControls !== '' && ariaControls}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabel !== 'Details' ? null : `${rowid} ${id}`}\n        aria-expanded={isExpanded}\n        {...buttonProps}\n      >\n        <div className={css(styles.dataListToggleIcon)}>\n          <AngleRightIcon />\n        </div>\n      </Button>\n    </div>\n  </div>\n);\nDataListToggle.displayName = 'DataListToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,cAAc,MAAM,yDAAyD;AACpF,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,SAASC,MAAM,EAAeC,aAAa,QAAQ,WAAW;AAqB9D,OAAO,MAAMC,cAAc,GAAkDC,EASvD,IAAI;MATmD;MAC3EC,SAAS,GAAG,EAAE;MACdC,UAAU,GAAG,KAAK;MAClB,eAAe,EAAEC,YAAY,GAAG,EAAE;MAClC,YAAY,EAAEC,SAAS,GAAG,SAAS;MACnCC,KAAK,GAAG,EAAE;MACVC,EAAE;MACFC;IAAW,IAAAP,EAES;IADjBQ,KAAK,GAAAC,MAAA,CAAAT,EAAA,EARmE,wFAS5E,CADS;EACiB,OACzBP,KAAA,CAAAiB,aAAA,QAAAC,MAAA,CAAAC,MAAA;IAAKX,SAAS,EAAEP,GAAG,CAACE,MAAM,CAACiB,mBAAmB,EAAEZ,SAAS;EAAC,GAAMO,KAAK,GACnEf,KAAA,CAAAiB,aAAA;IAAKT,SAAS,EAAEP,GAAG,CAACE,MAAM,CAACkB,cAAc;EAAC,GACxCrB,KAAA,CAAAiB,aAAA,CAACb,MAAM,EAAAc,MAAA,CAAAC,MAAA;IACLN,EAAE,EAAEA,EAAE;IACNS,OAAO,EAAEjB,aAAa,CAACkB,KAAK;IAAA,iBACbb,YAAY,KAAK,EAAE,IAAIA,YAAY;IAAA,cACtCC,SAAS;IAAA,mBACJA,SAAS,KAAK,SAAS,GAAG,IAAI,GAAG,GAAGC,KAAK,IAAIC,EAAE,EAAE;IAAA,iBACnDJ;EAAU,GACrBK,WAAW,GAEfd,KAAA,CAAAiB,aAAA;IAAKT,SAAS,EAAEP,GAAG,CAACE,MAAM,CAACqB,kBAAkB;EAAC,GAC5CxB,KAAA,CAAAiB,aAAA,CAACf,cAAc,OAAG,CACd,CACC,CACL,CACF;CACP;AACDI,cAAc,CAACmB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}