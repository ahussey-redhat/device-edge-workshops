{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { isElementInView } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport class NavList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      scrollViewAtStart: false,\n      scrollViewAtEnd: false\n    };\n    this.navList = React.createRef();\n    this.observer = () => {};\n    this.handleScrollButtons = () => {\n      const container = this.navList.current;\n      if (container) {\n        // check if it elements are in view\n        const scrollViewAtStart = isElementInView(container, container.firstChild, false);\n        const scrollViewAtEnd = isElementInView(container, container.lastChild, false);\n        this.setState({\n          scrollViewAtStart,\n          scrollViewAtEnd\n        });\n        this.context.updateIsScrollable(!scrollViewAtStart || !scrollViewAtEnd);\n      }\n    };\n    this.scrollLeft = () => {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      const container = this.navList.current;\n      if (container) {\n        const childrenArr = Array.from(container.children);\n        let firstElementInView;\n        let lastElementOutOfView;\n        for (let i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n        if (lastElementOutOfView) {\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        }\n        this.handleScrollButtons();\n      }\n    };\n    this.scrollRight = () => {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      const container = this.navList.current;\n      if (container) {\n        const childrenArr = Array.from(container.children);\n        let lastElementInView;\n        let firstElementOutOfView;\n        for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n        if (firstElementOutOfView) {\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        }\n        this.handleScrollButtons();\n      }\n    };\n  }\n  componentDidMount() {\n    this.observer = getResizeObserver(this.navList.current, this.handleScrollButtons);\n    this.handleScrollButtons();\n  }\n  componentWillUnmount() {\n    this.observer();\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        className,\n        ariaLeftScroll,\n        ariaRightScroll\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"ariaLeftScroll\", \"ariaRightScroll\"]);\n    const {\n      scrollViewAtStart,\n      scrollViewAtEnd\n    } = this.state;\n    return React.createElement(NavContext.Consumer, null, _ref => {\n      let {\n        isHorizontal\n      } = _ref;\n      return React.createElement(PageSidebarContext.Consumer, null, _ref2 => {\n        let {\n          isNavOpen\n        } = _ref2;\n        return React.createElement(React.Fragment, null, isHorizontal && React.createElement(\"button\", {\n          className: css(styles.navScrollButton),\n          \"aria-label\": ariaLeftScroll,\n          onClick: this.scrollLeft,\n          disabled: scrollViewAtStart,\n          tabIndex: isNavOpen ? null : -1\n        }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", Object.assign({\n          ref: this.navList,\n          className: css(styles.navList, className),\n          onScroll: this.handleScrollButtons\n        }, props), children), isHorizontal && React.createElement(\"button\", {\n          className: css(styles.navScrollButton),\n          \"aria-label\": ariaRightScroll,\n          onClick: this.scrollRight,\n          disabled: scrollViewAtEnd,\n          tabIndex: isNavOpen ? null : -1\n        }, React.createElement(AngleRightIcon, null)));\n      });\n    });\n  }\n}\nNavList.displayName = 'NavList';\nNavList.contextType = NavContext;\nNavList.defaultProps = {\n  ariaLeftScroll: 'Scroll left',\n  ariaRightScroll: 'Scroll right'\n};","map":{"version":3,"names":["React","styles","css","AngleLeftIcon","AngleRightIcon","isElementInView","NavContext","PageSidebarContext","getResizeObserver","NavList","Component","constructor","state","scrollViewAtStart","scrollViewAtEnd","navList","createRef","observer","handleScrollButtons","container","current","firstChild","lastChild","setState","context","updateIsScrollable","scrollLeft","childrenArr","Array","from","children","firstElementInView","lastElementOutOfView","i","length","scrollWidth","scrollRight","lastElementInView","firstElementOutOfView","componentDidMount","componentWillUnmount","render","_a","props","className","ariaLeftScroll","ariaRightScroll","__rest","createElement","Consumer","_ref","isHorizontal","_ref2","isNavOpen","Fragment","navScrollButton","onClick","disabled","tabIndex","Object","assign","ref","onScroll","displayName","contextType","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Nav\\NavList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { isElementInView } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\n\nexport interface NavListProps\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement> {\n  /** Children nodes */\n  children?: React.ReactNode;\n  /** Additional classes added to the list */\n  className?: string;\n  /** Aria-label for the left scroll button */\n  ariaLeftScroll?: string;\n  /** Aria-label for the right scroll button */\n  ariaRightScroll?: string;\n}\n\nexport class NavList extends React.Component<NavListProps> {\n  static displayName = 'NavList';\n  static contextType = NavContext;\n  context!: React.ContextType<typeof NavContext>;\n  static defaultProps: NavListProps = {\n    ariaLeftScroll: 'Scroll left',\n    ariaRightScroll: 'Scroll right'\n  };\n\n  state = {\n    scrollViewAtStart: false,\n    scrollViewAtEnd: false\n  };\n\n  navList = React.createRef<HTMLUListElement>();\n  observer: any = () => {};\n\n  handleScrollButtons = () => {\n    const container = this.navList.current;\n    if (container) {\n      // check if it elements are in view\n      const scrollViewAtStart = isElementInView(container, container.firstChild as HTMLElement, false);\n      const scrollViewAtEnd = isElementInView(container, container.lastChild as HTMLElement, false);\n      this.setState({\n        scrollViewAtStart,\n        scrollViewAtEnd\n      });\n      this.context.updateIsScrollable(!scrollViewAtStart || !scrollViewAtEnd);\n    }\n  };\n\n  scrollLeft = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    const container = this.navList.current;\n    if (container) {\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: Element;\n      let lastElementOutOfView: Element;\n      for (let i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        container.scrollLeft -= lastElementOutOfView.scrollWidth;\n      }\n      this.handleScrollButtons();\n    }\n  };\n\n  scrollRight = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    const container = this.navList.current;\n    if (container) {\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: Element;\n      let firstElementOutOfView: Element;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        container.scrollLeft += firstElementOutOfView.scrollWidth;\n      }\n      this.handleScrollButtons();\n    }\n  };\n\n  componentDidMount() {\n    this.observer = getResizeObserver(this.navList.current, this.handleScrollButtons);\n    this.handleScrollButtons();\n  }\n\n  componentWillUnmount() {\n    this.observer();\n  }\n\n  render() {\n    const { children, className, ariaLeftScroll, ariaRightScroll, ...props } = this.props;\n    const { scrollViewAtStart, scrollViewAtEnd } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {({ isHorizontal }) => (\n          <PageSidebarContext.Consumer>\n            {({ isNavOpen }) => (\n              <React.Fragment>\n                {isHorizontal && (\n                  <button\n                    className={css(styles.navScrollButton)}\n                    aria-label={ariaLeftScroll}\n                    onClick={this.scrollLeft}\n                    disabled={scrollViewAtStart}\n                    tabIndex={isNavOpen ? null : -1}\n                  >\n                    <AngleLeftIcon />\n                  </button>\n                )}\n                <ul\n                  ref={this.navList}\n                  className={css(styles.navList, className)}\n                  onScroll={this.handleScrollButtons}\n                  {...props}\n                >\n                  {children}\n                </ul>\n                {isHorizontal && (\n                  <button\n                    className={css(styles.navScrollButton)}\n                    aria-label={ariaRightScroll}\n                    onClick={this.scrollRight}\n                    disabled={scrollViewAtEnd}\n                    tabIndex={isNavOpen ? null : -1}\n                  >\n                    <AngleRightIcon />\n                  </button>\n                )}\n              </React.Fragment>\n            )}\n          </PageSidebarContext.Consumer>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}