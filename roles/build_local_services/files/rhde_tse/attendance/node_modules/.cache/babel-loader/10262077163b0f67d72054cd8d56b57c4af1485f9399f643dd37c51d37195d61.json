{"ast":null,"code":"import * as React from 'react';\nexport const TabsContext = React.createContext({\n  variant: 'default',\n  mountOnEnter: false,\n  unmountOnExit: false,\n  localActiveKey: '',\n  uniqueId: '',\n  handleTabClick: () => null,\n  handleTabClose: undefined\n});\nexport const TabsContextProvider = TabsContext.Provider;\nexport const TabsContextConsumer = TabsContext.Consumer;","map":{"version":3,"names":["React","TabsContext","createContext","variant","mountOnEnter","unmountOnExit","localActiveKey","uniqueId","handleTabClick","handleTabClose","undefined","TabsContextProvider","Provider","TabsContextConsumer","Consumer"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Tabs\\TabsContext.ts"],"sourcesContent":["import * as React from 'react';\n\nexport interface TabsContextProps {\n  variant: 'default' | 'light300';\n  mountOnEnter: boolean;\n  unmountOnExit: boolean;\n  localActiveKey: string | number;\n  uniqueId: string;\n  handleTabClick: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef: React.RefObject<any>\n  ) => void;\n  handleTabClose?: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef?: React.RefObject<any>\n  ) => void;\n}\n\nexport const TabsContext = React.createContext<TabsContextProps>({\n  variant: 'default',\n  mountOnEnter: false,\n  unmountOnExit: false,\n  localActiveKey: '',\n  uniqueId: '',\n  handleTabClick: () => null,\n  handleTabClose: undefined\n});\n\nexport const TabsContextProvider = TabsContext.Provider;\nexport const TabsContextConsumer = TabsContext.Consumer;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAoB9B,OAAO,MAAMC,WAAW,GAAGD,KAAK,CAACE,aAAa,CAAmB;EAC/DC,OAAO,EAAE,SAAS;EAClBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,EAAE;EAClBC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAEA,CAAA,KAAM,IAAI;EAC1BC,cAAc,EAAEC;CACjB,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGV,WAAW,CAACW,QAAQ;AACvD,OAAO,MAAMC,mBAAmB,GAAGZ,WAAW,CAACa,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}