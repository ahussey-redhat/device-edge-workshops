{"ast":null,"code":"import getWindow from '../dom-utils/getWindow';\nconst passive = {\n  passive: true\n};\n/**\n *\n */\nfunction effect(_ref) {\n  let {\n    state,\n    instance,\n    options\n  } = _ref;\n  const {\n    scroll = true,\n    resize = true\n  } = options;\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n};","map":{"version":3,"names":["getWindow","passive","effect","_ref","state","instance","options","scroll","resize","window","elements","popper","scrollParents","reference","forEach","scrollParent","addEventListener","update","removeEventListener","name","enabled","phase","fn","data"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\helpers\\Popper\\thirdparty\\popper-core\\modifiers\\eventListeners.ts"],"sourcesContent":["// @ts-nocheck\nimport { ModifierArguments, Modifier } from '../types';\nimport getWindow from '../dom-utils/getWindow';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  scroll: boolean;\n  resize: boolean;\n}\n\nconst passive = { passive: true };\n\n/**\n *\n */\nfunction effect({ state, instance, options }: ModifierArguments<Options>) {\n  const { scroll = true, resize = true } = options;\n\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type EventListenersModifier = Modifier<'eventListeners', Options>;\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n} as EventListenersModifier;\n"],"mappings":"AAEA,OAAOA,SAAS,MAAM,wBAAwB;AAQ9C,MAAMC,OAAO,GAAG;EAAEA,OAAO,EAAE;AAAI,CAAE;AAEjC;;;AAGA,SAASC,MAAMA,CAAAC,IAAA,EAAyD;EAAA,IAAxD;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAO,CAA8B,GAAAH,IAAA;EACtE,MAAM;IAAEI,MAAM,GAAG,IAAI;IAAEC,MAAM,GAAG;EAAI,CAAE,GAAGF,OAAO;EAEhD,MAAMG,MAAM,GAAGT,SAAS,CAACI,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC;EAC/C,MAAMC,aAAa,GAAG,CAAC,GAAGR,KAAK,CAACQ,aAAa,CAACC,SAAS,EAAE,GAAGT,KAAK,CAACQ,aAAa,CAACD,MAAM,CAAC;EAEvF,IAAIJ,MAAM,EAAE;IACVK,aAAa,CAACE,OAAO,CAACC,YAAY,IAAG;MACnCA,YAAY,CAACC,gBAAgB,CAAC,QAAQ,EAAEX,QAAQ,CAACY,MAAM,EAAEhB,OAAO,CAAC;IACnE,CAAC,CAAC;;EAGJ,IAAIO,MAAM,EAAE;IACVC,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAEX,QAAQ,CAACY,MAAM,EAAEhB,OAAO,CAAC;;EAG7D,OAAO,MAAK;IACV,IAAIM,MAAM,EAAE;MACVK,aAAa,CAACE,OAAO,CAACC,YAAY,IAAG;QACnCA,YAAY,CAACG,mBAAmB,CAAC,QAAQ,EAAEb,QAAQ,CAACY,MAAM,EAAEhB,OAAO,CAAC;MACtE,CAAC,CAAC;;IAGJ,IAAIO,MAAM,EAAE;MACVC,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEb,QAAQ,CAACY,MAAM,EAAEhB,OAAO,CAAC;;EAElE,CAAC;AACH;AAIA,eAAe;EACbkB,IAAI,EAAE,gBAAgB;EACtBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,OAAO;EACdC,EAAE,EAAEA,CAAA,KAAK,CAAE,CAAC;EACZpB,MAAM;EACNqB,IAAI,EAAE;CACmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}