{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './PageContext';\nexport const PageHeader = _a => {\n  var {\n      className = '',\n      logo = null,\n      logoProps = null,\n      logoComponent = 'a',\n      headerTools = null,\n      topNav = null,\n      isNavOpen = true,\n      isManagedSidebar: deprecatedIsManagedSidebar = undefined,\n      role = undefined,\n      showNavToggle = false,\n      navToggleId = 'nav-toggle',\n      onNavToggle = () => undefined,\n      'aria-label': ariaLabel = 'Global navigation',\n      'aria-controls': ariaControls = null\n    } = _a,\n    props = __rest(_a, [\"className\", \"logo\", \"logoProps\", \"logoComponent\", \"headerTools\", \"topNav\", \"isNavOpen\", \"isManagedSidebar\", \"role\", \"showNavToggle\", \"navToggleId\", \"onNavToggle\", 'aria-label', 'aria-controls']);\n  const LogoComponent = logoComponent;\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn('isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component');\n  }\n  return React.createElement(PageContextConsumer, null, _ref => {\n    let {\n      isManagedSidebar,\n      onNavToggle: managedOnNavToggle,\n      isNavOpen: managedIsNavOpen\n    } = _ref;\n    const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(\"header\", Object.assign({\n      role: role,\n      className: css(styles.pageHeader, className)\n    }, props), (showNavToggle || logo) && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrand)\n    }, showNavToggle && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrandToggle)\n    }, React.createElement(Button, {\n      id: navToggleId,\n      onClick: navToggle,\n      \"aria-label\": ariaLabel,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": navOpen ? 'true' : 'false',\n      variant: ButtonVariant.plain\n    }, React.createElement(BarsIcon, null))), logo && React.createElement(LogoComponent, Object.assign({\n      className: css(styles.pageHeaderBrandLink)\n    }, logoProps), logo)), topNav && React.createElement(\"div\", {\n      className: css(styles.pageHeaderNav)\n    }, topNav), headerTools);\n  });\n};\nPageHeader.displayName = 'PageHeader';","map":{"version":3,"names":["React","styles","css","BarsIcon","Button","ButtonVariant","PageContextConsumer","PageHeader","_a","className","logo","logoProps","logoComponent","headerTools","topNav","isNavOpen","isManagedSidebar","deprecatedIsManagedSidebar","undefined","role","showNavToggle","navToggleId","onNavToggle","ariaLabel","ariaControls","props","__rest","LogoComponent","includes","console","warn","createElement","_ref","managedOnNavToggle","managedIsNavOpen","navToggle","navOpen","Object","assign","pageHeader","pageHeaderBrand","pageHeaderBrandToggle","id","onClick","variant","plain","pageHeaderBrandLink","pageHeaderNav","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Page\\PageHeader.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer, PageContextProps } from './PageContext';\n\nexport interface PageHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the page header */\n  className?: string;\n  /** Component to render the logo/brand, use <Brand /> */\n  logo?: React.ReactNode;\n  /** Additional props passed to the logo anchor container */\n  logoProps?: object;\n  /** Component to use to wrap the passed <logo> */\n  logoComponent?: React.ReactNode;\n  /** Component to render the header tools, use <PageHeaderTools />  */\n  headerTools?: React.ReactNode;\n  /** Component to render navigation within the header, use <Nav /> */\n  topNav?: React.ReactNode;\n  /** True to show the nav toggle button (toggles side nav) */\n  showNavToggle?: boolean;\n  /** Id for the nav toggle button */\n  navToggleId?: string;\n  /** True if the side nav is shown  */\n  isNavOpen?: boolean;\n  /** This prop is no longer managed through PageHeader but in the Page component. */\n  isManagedSidebar?: boolean;\n  /** Sets the value for role on the <main> element */\n  role?: string;\n  /** Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true */\n  onNavToggle?: () => void;\n  /** Aria Label for the nav toggle button */\n  'aria-label'?: string;\n}\n\nexport const PageHeader: React.FunctionComponent<PageHeaderProps> = ({\n  className = '',\n  logo = null as React.ReactNode,\n  logoProps = null as object,\n  logoComponent = 'a',\n  headerTools = null as React.ReactNode,\n  topNav = null as React.ReactNode,\n  isNavOpen = true,\n  isManagedSidebar: deprecatedIsManagedSidebar = undefined,\n  role = undefined as string,\n  showNavToggle = false,\n  navToggleId = 'nav-toggle',\n  onNavToggle = () => undefined as any,\n  'aria-label': ariaLabel = 'Global navigation',\n  'aria-controls': ariaControls = null,\n  ...props\n}: PageHeaderProps) => {\n  const LogoComponent = logoComponent as any;\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn(\n      'isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component'\n    );\n  }\n  return (\n    <PageContextConsumer>\n      {({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }: PageContextProps) => {\n        const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n        const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n        return (\n          <header role={role} className={css(styles.pageHeader, className)} {...props}>\n            {(showNavToggle || logo) && (\n              <div className={css(styles.pageHeaderBrand)}>\n                {showNavToggle && (\n                  <div className={css(styles.pageHeaderBrandToggle)}>\n                    <Button\n                      id={navToggleId}\n                      onClick={navToggle}\n                      aria-label={ariaLabel}\n                      aria-controls={ariaControls}\n                      aria-expanded={navOpen ? 'true' : 'false'}\n                      variant={ButtonVariant.plain}\n                    >\n                      <BarsIcon />\n                    </Button>\n                  </div>\n                )}\n                {logo && (\n                  <LogoComponent className={css(styles.pageHeaderBrandLink)} {...logoProps}>\n                    {logo}\n                  </LogoComponent>\n                )}\n              </div>\n            )}\n            {topNav && <div className={css(styles.pageHeaderNav)}>{topNav}</div>}\n            {headerTools}\n          </header>\n        );\n      }}\n    </PageContextConsumer>\n  );\n};\nPageHeader.displayName = 'PageHeader';\n"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,QAAQ,MAAM,kDAAkD;AACvE,SAASC,MAAM,EAAEC,aAAa,QAAQ,yBAAyB;AAC/D,SAASC,mBAAmB,QAA0B,eAAe;AA+BrE,OAAO,MAAMC,UAAU,GAA8CC,EAgBnD,IAAI;MAhB+C;MACnEC,SAAS,GAAG,EAAE;MACdC,IAAI,GAAG,IAAuB;MAC9BC,SAAS,GAAG,IAAc;MAC1BC,aAAa,GAAG,GAAG;MACnBC,WAAW,GAAG,IAAuB;MACrCC,MAAM,GAAG,IAAuB;MAChCC,SAAS,GAAG,IAAI;MAChBC,gBAAgB,EAAEC,0BAA0B,GAAGC,SAAS;MACxDC,IAAI,GAAGD,SAAmB;MAC1BE,aAAa,GAAG,KAAK;MACrBC,WAAW,GAAG,YAAY;MAC1BC,WAAW,GAAGA,CAAA,KAAMJ,SAAgB;MACpC,YAAY,EAAEK,SAAS,GAAG,mBAAmB;MAC7C,eAAe,EAAEC,YAAY,GAAG;IAAI,IAAAhB,EAEpB;IADbiB,KAAK,GAAAC,MAAA,CAAAlB,EAAA,EAf2D,mMAgBpE,CADS;EAER,MAAMmB,aAAa,GAAGf,aAAoB;EAC1C,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAACgB,QAAQ,CAACX,0BAA0B,CAAC,EAAE;IACtDY,OAAO,CAACC,IAAI,CACV,2IAA2I,CAC5I;;EAEH,OACE9B,KAAA,CAAA+B,aAAA,CAACzB,mBAAmB,QACjB0B,IAAA,IAAyG;IAAA,IAAxG;MAAEhB,gBAAgB;MAAEM,WAAW,EAAEW,kBAAkB;MAAElB,SAAS,EAAEmB;IAAgB,CAAoB,GAAAF,IAAA;IACpG,MAAMG,SAAS,GAAGnB,gBAAgB,GAAGiB,kBAAkB,GAAGX,WAAW;IACrE,MAAMc,OAAO,GAAGpB,gBAAgB,GAAGkB,gBAAgB,GAAGnB,SAAS;IAE/D,OACEf,KAAA,CAAA+B,aAAA,WAAAM,MAAA,CAAAC,MAAA;MAAQnB,IAAI,EAAEA,IAAI;MAAEV,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACsC,UAAU,EAAE9B,SAAS;IAAC,GAAMgB,KAAK,GACxE,CAACL,aAAa,IAAIV,IAAI,KACrBV,KAAA,CAAA+B,aAAA;MAAKtB,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACuC,eAAe;IAAC,GACxCpB,aAAa,IACZpB,KAAA,CAAA+B,aAAA;MAAKtB,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACwC,qBAAqB;IAAC,GAC/CzC,KAAA,CAAA+B,aAAA,CAAC3B,MAAM;MACLsC,EAAE,EAAErB,WAAW;MACfsB,OAAO,EAAER,SAAS;MAAA,cACNZ,SAAS;MAAA,iBACNC,YAAY;MAAA,iBACZY,OAAO,GAAG,MAAM,GAAG,OAAO;MACzCQ,OAAO,EAAEvC,aAAa,CAACwC;IAAK,GAE5B7C,KAAA,CAAA+B,aAAA,CAAC5B,QAAQ,OAAG,CACL,CAEZ,EACAO,IAAI,IACHV,KAAA,CAAA+B,aAAA,CAACJ,aAAa,EAAAU,MAAA,CAAAC,MAAA;MAAC7B,SAAS,EAAEP,GAAG,CAACD,MAAM,CAAC6C,mBAAmB;IAAC,GAAMnC,SAAS,GACrED,IAAI,CAER,CAEJ,EACAI,MAAM,IAAId,KAAA,CAAA+B,aAAA;MAAKtB,SAAS,EAAEP,GAAG,CAACD,MAAM,CAAC8C,aAAa;IAAC,GAAGjC,MAAM,CAAO,EACnED,WAAW,CACL;EAEb,CAAC,CACmB;AAE1B,CAAC;AACDN,UAAU,CAACyC,WAAW,GAAG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}