{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n  DrawerColorVariant[\"default\"] = \"default\";\n  DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n  isExpanded: false,\n  isStatic: false,\n  onExpand: () => {},\n  position: 'right',\n  drawerRef: null,\n  drawerContentRef: null,\n  isInline: false\n});\nexport const Drawer = _a => {\n  var {\n      className = '',\n      children,\n      isExpanded = false,\n      isInline = false,\n      isStatic = false,\n      position = 'right',\n      onExpand = () => {}\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n  const drawerRef = React.useRef();\n  const drawerContentRef = React.useRef();\n  return React.createElement(DrawerContext.Provider, {\n    value: {\n      isExpanded,\n      isStatic,\n      onExpand,\n      position,\n      drawerRef,\n      drawerContentRef,\n      isInline\n    }\n  }, React.createElement(\"div\", Object.assign({\n    className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className),\n    ref: drawerRef\n  }, props), children));\n};\nDrawer.displayName = 'Drawer';","map":{"version":3,"names":["React","styles","css","DrawerColorVariant","DrawerContext","createContext","isExpanded","isStatic","onExpand","position","drawerRef","drawerContentRef","isInline","Drawer","_a","className","children","props","__rest","useRef","createElement","Provider","value","Object","assign","drawer","modifiers","expanded","inline","static","panelLeft","panelBottom","ref","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Drawer\\Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\n\nexport enum DrawerColorVariant {\n  default = 'default',\n  light200 = 'light-200'\n}\n\nexport interface DrawerProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the Drawer. */\n  className?: string;\n  /** Content rendered in the left hand panel */\n  children?: React.ReactNode;\n  /** Indicates if the drawer is expanded */\n  isExpanded?: boolean;\n  /** Indicates if the content element and panel element are displayed side by side. */\n  isInline?: boolean;\n  /** Indicates if the drawer will always show both content and panel. */\n  isStatic?: boolean;\n  /** Position of the drawer panel */\n  position?: 'left' | 'right' | 'bottom';\n  /** Callback when drawer panel is expanded after waiting 250ms for animation to complete. */\n  onExpand?: () => void;\n}\n\nexport interface DrawerContextProps {\n  isExpanded: boolean;\n  isStatic: boolean;\n  onExpand?: () => void;\n  position?: string;\n  drawerRef?: React.RefObject<HTMLDivElement>;\n  drawerContentRef?: React.RefObject<HTMLDivElement>;\n  isInline: boolean;\n}\n\nexport const DrawerContext = React.createContext<Partial<DrawerContextProps>>({\n  isExpanded: false,\n  isStatic: false,\n  onExpand: () => {},\n  position: 'right',\n  drawerRef: null,\n  drawerContentRef: null,\n  isInline: false\n});\n\nexport const Drawer: React.FunctionComponent<DrawerProps> = ({\n  className = '',\n  children,\n  isExpanded = false,\n  isInline = false,\n  isStatic = false,\n  position = 'right',\n  onExpand = () => {},\n  ...props\n}: DrawerProps) => {\n  const drawerRef = React.useRef<HTMLDivElement>();\n  const drawerContentRef = React.useRef<HTMLDivElement>();\n\n  return (\n    <DrawerContext.Provider value={{ isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline }}>\n      <div\n        className={css(\n          styles.drawer,\n          isExpanded && styles.modifiers.expanded,\n          isInline && styles.modifiers.inline,\n          isStatic && styles.modifiers.static,\n          position === 'left' && styles.modifiers.panelLeft,\n          position === 'bottom' && styles.modifiers.panelBottom,\n          className\n        )}\n        ref={drawerRef}\n        {...props}\n      >\n        {children}\n      </div>\n    </DrawerContext.Provider>\n  );\n};\nDrawer.displayName = 'Drawer';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,WAAYC,kBAGX;AAHD,WAAYA,kBAAkB;EAC5BA,kBAAA,uBAAmB;EACnBA,kBAAA,0BAAsB;AACxB,CAAC,EAHWA,kBAAkB,KAAlBA,kBAAkB;AAgC9B,OAAO,MAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAa,CAA8B;EAC5EC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAEA,CAAA,KAAK,CAAE,CAAC;EAClBC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE,IAAI;EACfC,gBAAgB,EAAE,IAAI;EACtBC,QAAQ,EAAE;CACX,CAAC;AAEF,OAAO,MAAMC,MAAM,GAA0CC,EAS/C,IAAI;MAT2C;MAC3DC,SAAS,GAAG,EAAE;MACdC,QAAQ;MACRV,UAAU,GAAG,KAAK;MAClBM,QAAQ,GAAG,KAAK;MAChBL,QAAQ,GAAG,KAAK;MAChBE,QAAQ,GAAG,OAAO;MAClBD,QAAQ,GAAGA,CAAA,KAAK,CAAE;IAAC,IAAAM,EAEP;IADTG,KAAK,GAAAC,MAAA,CAAAJ,EAAA,EARmD,uFAS5D,CADS;EAER,MAAMJ,SAAS,GAAGV,KAAK,CAACmB,MAAM,EAAkB;EAChD,MAAMR,gBAAgB,GAAGX,KAAK,CAACmB,MAAM,EAAkB;EAEvD,OACEnB,KAAA,CAAAoB,aAAA,CAAChB,aAAa,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,UAAU;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,gBAAgB;MAAEC;IAAQ;EAAE,GAChHZ,KAAA,CAAAoB,aAAA,QAAAG,MAAA,CAAAC,MAAA;IACET,SAAS,EAAEb,GAAG,CACZD,MAAM,CAACwB,MAAM,EACbnB,UAAU,IAAIL,MAAM,CAACyB,SAAS,CAACC,QAAQ,EACvCf,QAAQ,IAAIX,MAAM,CAACyB,SAAS,CAACE,MAAM,EACnCrB,QAAQ,IAAIN,MAAM,CAACyB,SAAS,CAACG,MAAM,EACnCpB,QAAQ,KAAK,MAAM,IAAIR,MAAM,CAACyB,SAAS,CAACI,SAAS,EACjDrB,QAAQ,KAAK,QAAQ,IAAIR,MAAM,CAACyB,SAAS,CAACK,WAAW,EACrDhB,SAAS,CACV;IACDiB,GAAG,EAAEtB;EAAS,GACVO,KAAK,GAERD,QAAQ,CACL,CACiB;AAE7B,CAAC;AACDH,MAAM,CAACoB,WAAW,GAAG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}