{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Chip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.span = React.createRef();\n    this.setChipStyle = () => ({\n      '--pf-c-chip__text--MaxWidth': this.props.textMaxWidth\n    });\n    this.renderOverflowChip = () => {\n      const _a = this.props,\n        {\n          children,\n          className,\n          onClick,\n          ouiaId,\n          textMaxWidth,\n          style,\n          component,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          tooltipPosition,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          isOverflowChip,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          closeBtnAriaLabel,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          isReadOnly\n        } = _a,\n        props = __rest(_a, [\"children\", \"className\", \"onClick\", \"ouiaId\", \"textMaxWidth\", \"style\", \"component\", \"tooltipPosition\", \"isOverflowChip\", \"closeBtnAriaLabel\", \"isReadOnly\"]);\n      const Component = component;\n      return React.createElement(Component, Object.assign({\n        onClick: onClick\n      }, textMaxWidth && Object.assign({\n        style: this.setChipStyle()\n      }, style), {\n        className: css(styles.chip, styles.modifiers.overflow, className)\n      }, component === 'button' ? {\n        type: 'button'\n      } : {}, getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props), React.createElement(\"span\", {\n        className: css(styles.chipText)\n      }, children));\n    };\n    this.renderChip = randomId => {\n      const {\n        children,\n        tooltipPosition\n      } = this.props;\n      if (this.state.isTooltipVisible) {\n        return React.createElement(Tooltip, {\n          position: tooltipPosition,\n          content: children\n        }, this.renderInnerChip(randomId));\n      }\n      return this.renderInnerChip(randomId);\n    };\n    this.state = {\n      isTooltipVisible: false,\n      ouiaStateId: getDefaultOUIAId(Chip.displayName)\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n    });\n  }\n  renderInnerChip(id) {\n    const _a = this.props,\n      {\n        children,\n        className,\n        onClick,\n        closeBtnAriaLabel,\n        isReadOnly,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isOverflowChip,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        tooltipPosition,\n        component,\n        ouiaId\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"onClick\", \"closeBtnAriaLabel\", \"isReadOnly\", \"isOverflowChip\", \"tooltipPosition\", \"component\", \"ouiaId\"]);\n    const Component = component;\n    return React.createElement(Component, Object.assign({}, this.props.textMaxWidth && {\n      style: this.setChipStyle()\n    }, {\n      className: css(styles.chip, className)\n    }, this.state.isTooltipVisible && {\n      tabIndex: 0\n    }, getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props), React.createElement(\"span\", {\n      ref: this.span,\n      className: css(styles.chipText),\n      id: id\n    }, children), !isReadOnly && React.createElement(Button, {\n      onClick: onClick,\n      variant: \"plain\",\n      \"aria-label\": closeBtnAriaLabel,\n      id: `remove_${id}`,\n      \"aria-labelledby\": `remove_${id} ${id}`,\n      ouiaId: ouiaId || closeBtnAriaLabel\n    }, React.createElement(TimesIcon, {\n      \"aria-hidden\": \"true\"\n    })));\n  }\n  render() {\n    const {\n      isOverflowChip\n    } = this.props;\n    return React.createElement(GenerateId, null, randomId => isOverflowChip ? this.renderOverflowChip() : this.renderChip(this.props.id || randomId));\n  }\n}\nChip.displayName = 'Chip';\nChip.defaultProps = {\n  closeBtnAriaLabel: 'close',\n  className: '',\n  isOverflowChip: false,\n  isReadOnly: false,\n  tooltipPosition: 'top',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick: _e => undefined,\n  component: 'div'\n};","map":{"version":3,"names":["React","css","Button","Tooltip","TimesIcon","styles","GenerateId","getOUIAProps","getDefaultOUIAId","Chip","Component","constructor","props","span","createRef","setChipStyle","textMaxWidth","renderOverflowChip","_a","children","className","onClick","ouiaId","style","component","tooltipPosition","isOverflowChip","closeBtnAriaLabel","isReadOnly","__rest","createElement","Object","assign","chip","modifiers","overflow","type","undefined","state","ouiaStateId","chipText","renderChip","randomId","isTooltipVisible","position","content","renderInnerChip","displayName","componentDidMount","setState","Boolean","current","offsetWidth","scrollWidth","id","tabIndex","ref","variant","render","defaultProps","_e"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Chip\\Chip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface ChipProps extends React.HTMLProps<HTMLDivElement>, OUIAProps {\n  /** Content rendered inside the chip text */\n  children?: React.ReactNode;\n  /** Aria Label for close button */\n  closeBtnAriaLabel?: string;\n  /** Additional classes added to the chip item */\n  className?: string;\n  /** Flag indicating if the chip is an overflow chip */\n  isOverflowChip?: boolean;\n  /** Flag indicating if chip is read only */\n  isReadOnly?: boolean;\n  /** Function that is called when clicking on the chip close button */\n  onClick?: (event: React.MouseEvent) => void;\n  /** Component that will be used for chip. It is recommended that <button> or <li>  are used when the chip is an overflow chip. */\n  component?: React.ReactNode;\n  /** Position of the tooltip which is displayed if text is longer */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n\n  /** Css property expressed in percentage or any css unit that overrides the default value of the max-width of the chip's text */\n  textMaxWidth?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n}\n\ninterface ChipState {\n  isTooltipVisible: boolean;\n  ouiaStateId: string;\n}\n\nexport class Chip extends React.Component<ChipProps, ChipState> {\n  static displayName = 'Chip';\n  constructor(props: ChipProps) {\n    super(props);\n    this.state = {\n      isTooltipVisible: false,\n      ouiaStateId: getDefaultOUIAId(Chip.displayName)\n    };\n  }\n  span = React.createRef<HTMLSpanElement>();\n\n  static defaultProps: ChipProps = {\n    closeBtnAriaLabel: 'close',\n    className: '',\n    isOverflowChip: false,\n    isReadOnly: false,\n    tooltipPosition: 'top' as 'auto' | 'top' | 'bottom' | 'left' | 'right',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e: React.MouseEvent) => undefined as any,\n    component: 'div' as React.ReactNode\n  };\n\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n    });\n  }\n\n  setChipStyle = () => ({\n    '--pf-c-chip__text--MaxWidth': this.props.textMaxWidth\n  });\n\n  renderOverflowChip = () => {\n    const {\n      children,\n      className,\n      onClick,\n      ouiaId,\n      textMaxWidth,\n      style,\n      component,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      tooltipPosition,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isOverflowChip,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      closeBtnAriaLabel,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isReadOnly,\n      ...props\n    } = this.props;\n    const Component = component as any;\n    return (\n      <Component\n        onClick={onClick}\n        {...(textMaxWidth && {\n          style: this.setChipStyle(),\n          ...style\n        })}\n        className={css(styles.chip, styles.modifiers.overflow, className)}\n        {...(component === 'button' ? { type: 'button' } : {})}\n        {...getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : this.state.ouiaStateId)}\n        {...props}\n      >\n        <span className={css(styles.chipText)}>{children}</span>\n      </Component>\n    );\n  };\n\n  renderInnerChip(id: string) {\n    const {\n      children,\n      className,\n      onClick,\n      closeBtnAriaLabel,\n      isReadOnly,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isOverflowChip,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      tooltipPosition,\n      component,\n      ouiaId,\n      ...props\n    } = this.props;\n    const Component = component as any;\n    return (\n      <Component\n        {...(this.props.textMaxWidth && {\n          style: this.setChipStyle()\n        })}\n        className={css(styles.chip, className)}\n        {...(this.state.isTooltipVisible && { tabIndex: 0 })}\n        {...getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId)}\n        {...props}\n      >\n        <span ref={this.span} className={css(styles.chipText)} id={id}>\n          {children}\n        </span>\n        {!isReadOnly && (\n          <Button\n            onClick={onClick}\n            variant=\"plain\"\n            aria-label={closeBtnAriaLabel}\n            id={`remove_${id}`}\n            aria-labelledby={`remove_${id} ${id}`}\n            ouiaId={ouiaId || closeBtnAriaLabel}\n          >\n            <TimesIcon aria-hidden=\"true\" />\n          </Button>\n        )}\n      </Component>\n    );\n  }\n\n  renderChip = (randomId: string) => {\n    const { children, tooltipPosition } = this.props;\n    if (this.state.isTooltipVisible) {\n      return (\n        <Tooltip position={tooltipPosition} content={children}>\n          {this.renderInnerChip(randomId)}\n        </Tooltip>\n      );\n    }\n    return this.renderInnerChip(randomId);\n  };\n\n  render() {\n    const { isOverflowChip } = this.props;\n    return (\n      <GenerateId>\n        {randomId => (isOverflowChip ? this.renderOverflowChip() : this.renderChip(this.props.id || randomId))}\n      </GenerateId>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}