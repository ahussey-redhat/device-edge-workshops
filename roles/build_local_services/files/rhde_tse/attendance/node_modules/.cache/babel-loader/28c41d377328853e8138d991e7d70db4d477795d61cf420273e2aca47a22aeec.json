{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openedOnEnter = false;\n    this.baseComponentRef = React.createRef();\n    this.menuComponentRef = React.createRef();\n    this.onEnter = () => {\n      this.openedOnEnter = true;\n    };\n    this.setMenuComponentRef = element => {\n      this.menuComponentRef = element;\n    };\n    this.getMenuComponentRef = () => this.menuComponentRef;\n    if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n      // eslint-disable-next-line no-console\n      console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n    }\n  }\n  componentDidUpdate() {\n    if (!this.props.isOpen) {\n      this.openedOnEnter = false;\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        className,\n        direction,\n        dropdownItems,\n        isOpen,\n        isPlain,\n        isText,\n        isGrouped,\n        isFullHeight,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSelect,\n        position,\n        toggle,\n        autoFocus,\n        menuAppendTo,\n        isFlipEnabled,\n        removeFindDomNode,\n        zIndex\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isText\", \"isGrouped\", \"isFullHeight\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\", \"isFlipEnabled\", \"removeFindDomNode\", \"zIndex\"]);\n    const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n    let component;\n    let renderedContent;\n    let ariaHasPopup = false;\n    if (dropdownItems && dropdownItems.length > 0) {\n      component = 'ul';\n      renderedContent = dropdownItems;\n      ariaHasPopup = true;\n    } else {\n      component = 'div';\n      renderedContent = React.Children.toArray(children);\n    }\n    const openedOnEnter = this.openedOnEnter;\n    const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n    return React.createElement(DropdownContext.Consumer, null, _ref => {\n      let {\n        baseClass,\n        baseComponent,\n        id: contextId,\n        ouiaId,\n        ouiaComponentType,\n        ouiaSafe,\n        alignments\n      } = _ref;\n      const BaseComponent = baseComponent;\n      const menuContainer = React.createElement(DropdownMenu, {\n        className: css(isStatic && styles.modifiers.static),\n        setMenuComponentRef: this.setMenuComponentRef,\n        component: component,\n        isOpen: isOpen,\n        position: position,\n        \"aria-labelledby\": contextId ? `${contextId}-toggle` : id,\n        isGrouped: isGrouped,\n        autoFocus: openedOnEnter && autoFocus,\n        alignments: alignments\n      }, renderedContent);\n      const popperContainer = React.createElement(\"div\", {\n        className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className)\n      }, isOpen && menuContainer);\n      const mainContainer = React.createElement(BaseComponent, Object.assign({}, props, {\n        className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className),\n        ref: this.baseComponentRef\n      }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)), React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n        parentRef: this.baseComponentRef,\n        getMenuRef: this.getMenuComponentRef,\n        isOpen,\n        id,\n        isPlain,\n        isText,\n        'aria-haspopup': ariaHasPopup,\n        onEnter: () => {\n          this.onEnter();\n          oneToggle.props.onEnter && oneToggle.props.onEnter();\n        }\n      })), menuAppendTo === 'inline' && isOpen && menuContainer);\n      const getParentElement = () => {\n        if (this.baseComponentRef && this.baseComponentRef.current) {\n          return this.baseComponentRef.current.parentElement;\n        }\n        return null;\n      };\n      return menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n        trigger: mainContainer,\n        popper: popperContainer,\n        direction: direction,\n        position: position,\n        appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n        isVisible: isOpen,\n        removeFindDomNode: removeFindDomNode,\n        zIndex: zIndex,\n        popperMatchesTriggerWidth: false\n      });\n    });\n  }\n}\nDropdownWithContext.displayName = 'DropdownWithContext';\n// seed for the aria-labelledby ID\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n  className: '',\n  dropdownItems: [],\n  isOpen: false,\n  isPlain: false,\n  isText: false,\n  isGrouped: false,\n  position: DropdownPosition.left,\n  direction: DropdownDirection.down,\n  onSelect: () => undefined,\n  autoFocus: true,\n  menuAppendTo: 'inline',\n  isFlipEnabled: true\n};","map":{"version":3,"names":["React","styles","css","DropdownMenu","DropdownContext","DropdownDirection","DropdownPosition","getOUIAProps","Popper","DropdownWithContext","Component","constructor","props","openedOnEnter","baseComponentRef","createRef","menuComponentRef","onEnter","setMenuComponentRef","element","getMenuComponentRef","dropdownItems","length","children","console","error","componentDidUpdate","isOpen","render","_a","className","direction","isPlain","isText","isGrouped","isFullHeight","onSelect","position","toggle","autoFocus","menuAppendTo","isFlipEnabled","removeFindDomNode","zIndex","__rest","id","currentId","component","renderedContent","ariaHasPopup","Children","toArray","isStatic","createElement","Consumer","_ref","baseClass","baseComponent","contextId","ouiaId","ouiaComponentType","ouiaSafe","alignments","BaseComponent","menuContainer","modifiers","static","popperContainer","up","top","right","alignRight","expanded","mainContainer","Object","assign","fullHeight","ref","map","oneToggle","cloneElement","parentRef","getMenuRef","getParentElement","current","parentElement","trigger","popper","appendTo","isVisible","popperMatchesTriggerWidth","displayName","defaultProps","left","down","undefined"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Dropdown\\DropdownWithContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownProps } from './Dropdown';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { Popper } from '../../helpers/Popper/Popper';\n\nexport class DropdownWithContext extends React.Component<DropdownProps & OUIAProps> {\n  static displayName = 'DropdownWithContext';\n\n  openedOnEnter = false;\n  baseComponentRef = React.createRef<any>();\n  menuComponentRef = React.createRef<any>();\n\n  // seed for the aria-labelledby ID\n  static currentId = 0;\n\n  static defaultProps: PickOptional<DropdownProps> = {\n    className: '',\n    dropdownItems: [] as any[],\n    isOpen: false,\n    isPlain: false,\n    isText: false,\n    isGrouped: false,\n    position: DropdownPosition.left,\n    direction: DropdownDirection.down,\n    onSelect: (): void => undefined,\n    autoFocus: true,\n    menuAppendTo: 'inline',\n    isFlipEnabled: true\n  };\n\n  constructor(props: DropdownProps & OUIAProps) {\n    super(props);\n    if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered'\n      );\n    }\n  }\n\n  onEnter = () => {\n    this.openedOnEnter = true;\n  };\n\n  componentDidUpdate() {\n    if (!this.props.isOpen) {\n      this.openedOnEnter = false;\n    }\n  }\n\n  setMenuComponentRef = (element: any) => {\n    this.menuComponentRef = element;\n  };\n\n  getMenuComponentRef = () => this.menuComponentRef;\n\n  render() {\n    const {\n      children,\n      className,\n      direction,\n      dropdownItems,\n      isOpen,\n      isPlain,\n      isText,\n      isGrouped,\n      isFullHeight,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSelect,\n      position,\n      toggle,\n      autoFocus,\n      menuAppendTo,\n      isFlipEnabled,\n      removeFindDomNode,\n      zIndex,\n      ...props\n    } = this.props;\n    const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n    let component: string;\n    let renderedContent: React.ReactNode[];\n    let ariaHasPopup = false;\n    if (dropdownItems && dropdownItems.length > 0) {\n      component = 'ul';\n      renderedContent = dropdownItems;\n      ariaHasPopup = true;\n    } else {\n      component = 'div';\n      renderedContent = React.Children.toArray(children);\n    }\n    const openedOnEnter = this.openedOnEnter;\n    const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n    return (\n      <DropdownContext.Consumer>\n        {({ baseClass, baseComponent, id: contextId, ouiaId, ouiaComponentType, ouiaSafe, alignments }) => {\n          const BaseComponent = baseComponent as any;\n          const menuContainer = (\n            <DropdownMenu\n              className={css(isStatic && styles.modifiers.static)}\n              setMenuComponentRef={this.setMenuComponentRef}\n              component={component}\n              isOpen={isOpen}\n              position={position}\n              aria-labelledby={contextId ? `${contextId}-toggle` : id}\n              isGrouped={isGrouped}\n              autoFocus={openedOnEnter && autoFocus}\n              alignments={alignments}\n            >\n              {renderedContent}\n            </DropdownMenu>\n          );\n          const popperContainer = (\n            <div\n              className={css(\n                baseClass,\n                direction === DropdownDirection.up && styles.modifiers.top,\n                position === DropdownPosition.right && styles.modifiers.alignRight,\n                isOpen && styles.modifiers.expanded,\n                className\n              )}\n            >\n              {isOpen && menuContainer}\n            </div>\n          );\n          const mainContainer = (\n            <BaseComponent\n              {...props}\n              className={css(\n                baseClass,\n                direction === DropdownDirection.up && styles.modifiers.top,\n                position === DropdownPosition.right && styles.modifiers.alignRight,\n                isOpen && styles.modifiers.expanded,\n                isFullHeight && styles.modifiers.fullHeight,\n                className\n              )}\n              ref={this.baseComponentRef}\n              {...getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)}\n            >\n              {React.Children.map(toggle, oneToggle =>\n                React.cloneElement(oneToggle, {\n                  parentRef: this.baseComponentRef,\n                  getMenuRef: this.getMenuComponentRef,\n                  isOpen,\n                  id,\n                  isPlain,\n                  isText,\n                  'aria-haspopup': ariaHasPopup,\n                  onEnter: () => {\n                    this.onEnter();\n                    oneToggle.props.onEnter && oneToggle.props.onEnter();\n                  }\n                })\n              )}\n              {menuAppendTo === 'inline' && isOpen && menuContainer}\n            </BaseComponent>\n          );\n          const getParentElement = () => {\n            if (this.baseComponentRef && this.baseComponentRef.current) {\n              return this.baseComponentRef.current.parentElement;\n            }\n            return null;\n          };\n          return menuAppendTo === 'inline' ? (\n            mainContainer\n          ) : (\n            <Popper\n              trigger={mainContainer}\n              popper={popperContainer}\n              direction={direction}\n              position={position}\n              appendTo={menuAppendTo === 'parent' ? getParentElement() : menuAppendTo}\n              isVisible={isOpen}\n              removeFindDomNode={removeFindDomNode}\n              zIndex={zIndex}\n              popperMatchesTriggerWidth={false}\n            />\n          );\n        }}\n      </DropdownContext.Consumer>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}