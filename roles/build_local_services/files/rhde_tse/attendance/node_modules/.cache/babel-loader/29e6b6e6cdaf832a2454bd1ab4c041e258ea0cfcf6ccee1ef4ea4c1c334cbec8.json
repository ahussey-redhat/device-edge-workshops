{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\nexport const ToggleGroup = _a => {\n  var {\n      className,\n      children,\n      isCompact = false,\n      areAllGroupsDisabled = false,\n      'aria-label': ariaLabel\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"isCompact\", \"areAllGroupsDisabled\", 'aria-label']);\n  const toggleGroupItemList = React.Children.map(children, child => {\n    const childCompName = child.type.name;\n    return childCompName !== ToggleGroupItem.name ? child : React.cloneElement(child, areAllGroupsDisabled ? {\n      isDisabled: true\n    } : {});\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.toggleGroup, isCompact && styles.modifiers.compact, className),\n    role: \"group\",\n    \"aria-label\": ariaLabel\n  }, props), toggleGroupItemList);\n};\nToggleGroup.displayName = 'ToggleGroup';","map":{"version":3,"names":["React","css","styles","ToggleGroupItem","ToggleGroup","_a","className","children","isCompact","areAllGroupsDisabled","ariaLabel","props","__rest","toggleGroupItemList","Children","map","child","childCompName","type","name","cloneElement","isDisabled","createElement","Object","assign","toggleGroup","modifiers","compact","role","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\ToggleGroup\\ToggleGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\n\nexport interface ToggleGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the toggle group */\n  children?: React.ReactNode;\n  /** Additional classes added to the toggle group */\n  className?: string;\n  /** Modifies the toggle group to include compact styling. */\n  isCompact?: boolean;\n  /** Disable all toggle group items under this component. */\n  areAllGroupsDisabled?: boolean;\n  /** Accessible label for the toggle group */\n  'aria-label'?: string;\n}\n\nexport const ToggleGroup: React.FunctionComponent<ToggleGroupProps> = ({\n  className,\n  children,\n  isCompact = false,\n  areAllGroupsDisabled = false,\n  'aria-label': ariaLabel,\n  ...props\n}: ToggleGroupProps) => {\n  const toggleGroupItemList = React.Children.map(children, child => {\n    const childCompName = (child as any).type.name;\n    return childCompName !== ToggleGroupItem.name\n      ? child\n      : React.cloneElement(child as React.ReactElement, areAllGroupsDisabled ? { isDisabled: true } : {});\n  });\n\n  return (\n    <div\n      className={css(styles.toggleGroup, isCompact && styles.modifiers.compact, className)}\n      role=\"group\"\n      aria-label={ariaLabel}\n      {...props}\n    >\n      {toggleGroupItemList}\n    </div>\n  );\n};\nToggleGroup.displayName = 'ToggleGroup';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,kEAAkE;AACrF,SAASC,eAAe,QAAQ,mBAAmB;AAenD,OAAO,MAAMC,WAAW,GAA+CC,EAOpD,IAAI;MAPgD;MACrEC,SAAS;MACTC,QAAQ;MACRC,SAAS,GAAG,KAAK;MACjBC,oBAAoB,GAAG,KAAK;MAC5B,YAAY,EAAEC;IAAS,IAAAL,EAEN;IADdM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EAN6D,4EAOtE,CADS;EAER,MAAMQ,mBAAmB,GAAGb,KAAK,CAACc,QAAQ,CAACC,GAAG,CAACR,QAAQ,EAAES,KAAK,IAAG;IAC/D,MAAMC,aAAa,GAAID,KAAa,CAACE,IAAI,CAACC,IAAI;IAC9C,OAAOF,aAAa,KAAKd,eAAe,CAACgB,IAAI,GACzCH,KAAK,GACLhB,KAAK,CAACoB,YAAY,CAACJ,KAA2B,EAAEP,oBAAoB,GAAG;MAAEY,UAAU,EAAE;IAAI,CAAE,GAAG,EAAE,CAAC;EACvG,CAAC,CAAC;EAEF,OACErB,KAAA,CAAAsB,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACElB,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACuB,WAAW,EAAEjB,SAAS,IAAIN,MAAM,CAACwB,SAAS,CAACC,OAAO,EAAErB,SAAS,CAAC;IACpFsB,IAAI,EAAC,OAAO;IAAA,cACAlB;EAAS,GACjBC,KAAK,GAERE,mBAAmB,CAChB;AAEV,CAAC;AACDT,WAAW,CAACyB,WAAW,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}