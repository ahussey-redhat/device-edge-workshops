{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\nexport const NavGroup = _a => {\n  var {\n      title,\n      children = null,\n      className = '',\n      id = getUniqueId()\n    } = _a,\n    props = __rest(_a, [\"title\", \"children\", \"className\", \"id\"]);\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n  const labelledBy = title ? id : undefined;\n  return React.createElement(\"section\", Object.assign({\n    className: css(styles.navSection, className),\n    \"aria-labelledby\": labelledBy\n  }, props), title && React.createElement(\"h2\", {\n    className: css(styles.navSectionTitle),\n    id: id\n  }, title), React.createElement(\"ul\", {\n    className: css(styles.navList, className)\n  }, children));\n};\nNavGroup.displayName = 'NavGroup';","map":{"version":3,"names":["React","styles","css","getUniqueId","NavGroup","_a","title","children","className","id","props","__rest","console","warn","labelledBy","undefined","createElement","Object","assign","navSection","navSectionTitle","navList","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Nav\\NavGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\n\nexport interface NavGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Title shown for the group */\n  title?: string;\n  /** Anything that can be rendered inside of the group */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Identifier to use for the section aria label */\n  id?: string;\n}\n\nexport const NavGroup: React.FunctionComponent<NavGroupProps> = ({\n  title,\n  children = null,\n  className = '',\n  id = getUniqueId(),\n  ...props\n}: NavGroupProps) => {\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n\n  const labelledBy = title ? id : undefined;\n\n  return (\n    <section className={css(styles.navSection, className)} aria-labelledby={labelledBy} {...props}>\n      {title && (\n        <h2 className={css(styles.navSectionTitle)} id={id}>\n          {title}\n        </h2>\n      )}\n      <ul className={css(styles.navList, className)}>{children}</ul>\n    </section>\n  );\n};\nNavGroup.displayName = 'NavGroup';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,iDAAiD;AACpE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,WAAW,QAAQ,oBAAoB;AAahD,OAAO,MAAMC,QAAQ,GAA4CC,EAMjD,IAAI;MAN6C;MAC/DC,KAAK;MACLC,QAAQ,GAAG,IAAI;MACfC,SAAS,GAAG,EAAE;MACdC,EAAE,GAAGN,WAAW;IAAE,IAAAE,EAEJ;IADXK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EALuD,wCAMhE,CADS;EAER,IAAI,CAACC,KAAK,IAAI,CAACI,KAAK,CAAC,YAAY,CAAC,EAAE;IAClC;IACAE,OAAO,CAACC,IAAI,CAAC,4FAA4F,CAAC;;EAG5G,MAAMC,UAAU,GAAGR,KAAK,GAAGG,EAAE,GAAGM,SAAS;EAEzC,OACEf,KAAA,CAAAgB,aAAA,YAAAC,MAAA,CAAAC,MAAA;IAASV,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACkB,UAAU,EAAEX,SAAS,CAAC;IAAA,mBAAmBM;EAAU,GAAMJ,KAAK,GAC1FJ,KAAK,IACJN,KAAA,CAAAgB,aAAA;IAAIR,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACmB,eAAe,CAAC;IAAEX,EAAE,EAAEA;EAAE,GAC/CH,KAAK,CAET,EACDN,KAAA,CAAAgB,aAAA;IAAIR,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACoB,OAAO,EAAEb,SAAS;EAAC,GAAGD,QAAQ,CAAM,CACtD;AAEd,CAAC;AACDH,QAAQ,CAACkB,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}