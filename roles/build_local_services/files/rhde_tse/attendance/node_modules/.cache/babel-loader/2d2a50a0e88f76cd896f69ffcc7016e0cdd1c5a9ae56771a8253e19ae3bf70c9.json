{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { DualListSelectorListContext } from './DualListSelectorContext';\nexport const DualListSelectorListItemBase = _a => {\n  var {\n      onOptionSelect,\n      orderIndex,\n      children,\n      className,\n      id = getUniqueId('dual-list-selector-list-item'),\n      isSelected,\n      innerRef,\n      isDraggable = false,\n      isDisabled,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      draggableButtonAriaLabel = 'Reorder option'\n    } = _a,\n    props = __rest(_a, [\"onOptionSelect\", \"orderIndex\", \"children\", \"className\", \"id\", \"isSelected\", \"innerRef\", \"isDraggable\", \"isDisabled\", \"draggableButtonAriaLabel\"]);\n  const privateRef = React.useRef(null);\n  const ref = innerRef || privateRef;\n  const {\n    setFocusedOption\n  } = React.useContext(DualListSelectorListContext);\n  return React.createElement(\"li\", Object.assign({\n    className: css(styles.dualListSelectorListItem, className, isDisabled && styles.modifiers.disabled),\n    key: orderIndex,\n    onClick: isDisabled ? undefined : e => {\n      setFocusedOption(id);\n      onOptionSelect(e, id);\n    },\n    onKeyDown: e => {\n      if (e.key === ' ' || e.key === 'Enter') {\n        document.activeElement.click();\n        e.preventDefault();\n      }\n    },\n    \"aria-selected\": isSelected,\n    id: id,\n    ref: ref,\n    role: \"option\",\n    tabIndex: -1\n  }, props), React.createElement(\"div\", {\n    className: css(styles.dualListSelectorListItemRow, isSelected && styles.modifiers.selected)\n  }, isDraggable && !isDisabled && React.createElement(\"div\", {\n    className: css(styles.dualListSelectorDraggable)\n  }, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    component: \"span\"\n  }, React.createElement(GripVerticalIcon, {\n    style: {\n      verticalAlign: '-0.3em'\n    }\n  }))), React.createElement(\"span\", {\n    className: css(styles.dualListSelectorItem)\n  }, React.createElement(\"span\", {\n    className: css(styles.dualListSelectorItemMain)\n  }, React.createElement(\"span\", {\n    className: css(styles.dualListSelectorItemText)\n  }, children)))));\n};\nDualListSelectorListItemBase.displayName = 'DualListSelectorListItemBase';\nexport const DualListSelectorListItem = React.forwardRef((props, ref) => React.createElement(DualListSelectorListItemBase, Object.assign({\n  innerRef: ref\n}, props)));\nDualListSelectorListItem.displayName = 'DualListSelectorListItem';","map":{"version":3,"names":["React","styles","css","getUniqueId","GripVerticalIcon","Button","ButtonVariant","DualListSelectorListContext","DualListSelectorListItemBase","_a","onOptionSelect","orderIndex","children","className","id","isSelected","innerRef","isDraggable","isDisabled","draggableButtonAriaLabel","props","__rest","privateRef","useRef","ref","setFocusedOption","useContext","createElement","Object","assign","dualListSelectorListItem","modifiers","disabled","key","onClick","undefined","e","onKeyDown","document","activeElement","click","preventDefault","role","tabIndex","dualListSelectorListItemRow","selected","dualListSelectorDraggable","variant","plain","component","style","verticalAlign","dualListSelectorItem","dualListSelectorItemMain","dualListSelectorItemText","displayName","DualListSelectorListItem","forwardRef"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\DualListSelector\\DualListSelectorListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { DualListSelectorListContext } from './DualListSelectorContext';\n\n/** Creates an individual option that can be selected and moved between the\n * dual list selector panes. This is contained within the DualListSelectorList sub-component.\n */\n\nexport interface DualListSelectorListItemProps extends React.HTMLProps<HTMLLIElement> {\n  /** Content rendered inside the dual list selector. */\n  children?: React.ReactNode;\n  /** Additional classes applied to the dual list selector. */\n  className?: string;\n  /** Flag indicating the list item is currently selected. */\n  isSelected?: boolean;\n  /** Callback fired when an option is selected.  */\n  onOptionSelect?: (e: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent, id?: string) => void;\n  /** ID of the option. */\n  id?: string;\n  /** @hide Internal field used to keep track of order of unfiltered options. */\n  orderIndex?: number;\n  /** @hide Forwarded ref */\n  innerRef?: React.RefObject<HTMLLIElement>;\n  /** Flag indicating this item is draggable for reordring */\n  isDraggable?: boolean;\n  /** Accessible label for the draggable button on draggable list items */\n  draggableButtonAriaLabel?: string;\n  /** Flag indicating if the dual list selector is in a disabled state */\n  isDisabled?: boolean;\n}\n\nexport const DualListSelectorListItemBase: React.FunctionComponent<DualListSelectorListItemProps> = ({\n  onOptionSelect,\n  orderIndex,\n  children,\n  className,\n  id = getUniqueId('dual-list-selector-list-item'),\n  isSelected,\n  innerRef,\n  isDraggable = false,\n  isDisabled,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  draggableButtonAriaLabel = 'Reorder option',\n  ...props\n}: DualListSelectorListItemProps) => {\n  const privateRef = React.useRef<HTMLLIElement>(null);\n  const ref = innerRef || privateRef;\n  const { setFocusedOption } = React.useContext(DualListSelectorListContext);\n\n  return (\n    <li\n      className={css(styles.dualListSelectorListItem, className, isDisabled && styles.modifiers.disabled)}\n      key={orderIndex}\n      onClick={\n        isDisabled\n          ? undefined\n          : (e: React.MouseEvent) => {\n              setFocusedOption(id);\n              onOptionSelect(e, id);\n            }\n      }\n      onKeyDown={(e: React.KeyboardEvent) => {\n        if (e.key === ' ' || e.key === 'Enter') {\n          (document.activeElement as HTMLElement).click();\n          e.preventDefault();\n        }\n      }}\n      aria-selected={isSelected}\n      id={id}\n      ref={ref}\n      role=\"option\"\n      tabIndex={-1}\n      {...props}\n    >\n      <div className={css(styles.dualListSelectorListItemRow, isSelected && styles.modifiers.selected)}>\n        {isDraggable && !isDisabled && (\n          <div className={css(styles.dualListSelectorDraggable)}>\n            {/** TODO once keyboard accessibility is enabled, remove `component=span`\n             and add `aria-label={draggableButtonAriaLabel}` */}\n            <Button variant={ButtonVariant.plain} component=\"span\">\n              <GripVerticalIcon style={{ verticalAlign: '-0.3em' }} />\n            </Button>\n          </div>\n        )}\n        <span className={css(styles.dualListSelectorItem)}>\n          <span className={css(styles.dualListSelectorItemMain)}>\n            <span className={css(styles.dualListSelectorItemText)}>{children}</span>\n          </span>\n        </span>\n      </div>\n    </li>\n  );\n};\nDualListSelectorListItemBase.displayName = 'DualListSelectorListItemBase';\n\nexport const DualListSelectorListItem = React.forwardRef(\n  (props: DualListSelectorListItemProps, ref: React.Ref<HTMLLIElement>) => (\n    <DualListSelectorListItemBase innerRef={ref as React.MutableRefObject<any>} {...props} />\n  )\n);\nDualListSelectorListItem.displayName = 'DualListSelectorListItem';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}