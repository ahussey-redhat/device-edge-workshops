{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class MenuToggleCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.props.onChange(event.target.checked, event);\n    };\n    this.calculateChecked = () => {\n      const {\n        isChecked,\n        defaultChecked\n      } = this.props;\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n      return defaultChecked;\n    };\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        isValid,\n        isDisabled,\n        isChecked,\n        children,\n        ouiaId,\n        ouiaSafe,\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange,\n        defaultChecked,\n        id\n      } = _a,\n      props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"defaultChecked\", \"id\"]);\n    const text = children && React.createElement(\"span\", {\n      className: css(styles.checkLabel, className),\n      \"aria-hidden\": \"true\",\n      id: id\n    }, children);\n    return React.createElement(\"label\", {\n      className: css(styles.check, !children && styles.modifiers.standalone, className),\n      htmlFor: id\n    }, React.createElement(\"input\", Object.assign({\n      className: css(styles.checkInput)\n    }, this.calculateChecked() !== undefined && {\n      onChange: this.handleChange\n    }, {\n      name: id,\n      type: \"checkbox\",\n      ref: elem => elem && (elem.indeterminate = isChecked === null),\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled\n    }, defaultChecked !== undefined ? {\n      defaultChecked\n    } : {\n      checked: isChecked\n    }, getOUIAProps(MenuToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props)), text);\n  }\n}\nMenuToggleCheckbox.displayName = 'MenuToggleCheckbox';\nMenuToggleCheckbox.defaultProps = {\n  isValid: true,\n  isDisabled: false,\n  onChange: () => undefined\n};","map":{"version":3,"names":["React","styles","css","getOUIAProps","getDefaultOUIAId","MenuToggleCheckbox","Component","constructor","props","handleChange","event","onChange","target","checked","calculateChecked","isChecked","defaultChecked","undefined","state","ouiaStateId","displayName","render","_a","className","isValid","isDisabled","children","ouiaId","ouiaSafe","id","__rest","text","createElement","checkLabel","check","modifiers","standalone","htmlFor","Object","assign","checkInput","name","type","ref","elem","indeterminate","disabled","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\MenuToggle\\MenuToggleCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface MenuToggleCheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'checked'>,\n    OUIAProps {\n  /** Additional classes added to the MenuToggleCheckbox */\n  className?: string;\n  /** Flag to show if the checkbox selection is valid or invalid */\n  isValid?: boolean;\n  /** Flag to show if the checkbox is disabled */\n  isDisabled?: boolean;\n  /** Flag to show if the checkbox is checked when it is controlled by React state.\n   * To make the checkbox uncontrolled instead use the defaultChecked prop, but do not use both.\n   */\n  isChecked?: boolean | null;\n  /** Flag to set the default checked value of the checkbox when it is uncontrolled by React state.\n   * To make the checkbox controlled instead use the isChecked prop, but do not use both.\n   */\n  defaultChecked?: boolean | null;\n  /** A callback for when the checkbox selection changes */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Element to be rendered inside the <span> */\n  children?: React.ReactNode;\n  /** Id of the checkbox */\n  id: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport class MenuToggleCheckbox extends React.Component<MenuToggleCheckboxProps, { ouiaStateId: string }> {\n  static displayName = 'MenuToggleCheckbox';\n  static defaultProps: PickOptional<MenuToggleCheckboxProps> = {\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined as any\n  };\n\n  constructor(props: MenuToggleCheckboxProps) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange((event.target as HTMLInputElement).checked, event);\n  };\n\n  calculateChecked = () => {\n    const { isChecked, defaultChecked } = this.props;\n    if (isChecked === null) {\n      // return false here and the indeterminate state will be set to true through the ref\n      return false;\n    } else if (isChecked !== undefined) {\n      return isChecked;\n    }\n    return defaultChecked;\n  };\n\n  render() {\n    const {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      children,\n      ouiaId,\n      ouiaSafe,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      defaultChecked,\n      id,\n      ...props\n    } = this.props;\n    const text = children && (\n      <span className={css(styles.checkLabel, className)} aria-hidden=\"true\" id={id}>\n        {children}\n      </span>\n    );\n    return (\n      <label className={css(styles.check, !children && styles.modifiers.standalone, className)} htmlFor={id}>\n        <input\n          className={css(styles.checkInput)}\n          {...(this.calculateChecked() !== undefined && { onChange: this.handleChange })}\n          name={id}\n          type=\"checkbox\"\n          ref={elem => elem && (elem.indeterminate = isChecked === null)}\n          aria-invalid={!isValid}\n          disabled={isDisabled}\n          {...(defaultChecked !== undefined ? { defaultChecked } : { checked: isChecked })}\n          {...getOUIAProps(\n            MenuToggleCheckbox.displayName,\n            ouiaId !== undefined ? ouiaId : this.state.ouiaStateId,\n            ouiaSafe\n          )}\n          {...props}\n        />\n        {text}\n      </label>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,qDAAqD;AACxE,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,SAASC,YAAY,EAAaC,gBAAgB,QAAQ,eAAe;AA+BzE,OAAM,MAAOC,kBAAmB,SAAQL,KAAK,CAACM,SAA2D;EAQvGC,YAAYC,KAA8B;IACxC,KAAK,CAACA,KAAK,CAAC;IAMd,KAAAC,YAAY,GAAIC,KAAwC,IAAI;MAC1D,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAED,KAAK,CAACE,MAA2B,CAACC,OAAO,EAAEH,KAAK,CAAC;IACxE,CAAC;IAED,KAAAI,gBAAgB,GAAG,MAAK;MACtB,MAAM;QAAEC,SAAS;QAAEC;MAAc,CAAE,GAAG,IAAI,CAACR,KAAK;MAChD,IAAIO,SAAS,KAAK,IAAI,EAAE;QACtB;QACA,OAAO,KAAK;OACb,MAAM,IAAIA,SAAS,KAAKE,SAAS,EAAE;QAClC,OAAOF,SAAS;;MAElB,OAAOC,cAAc;IACvB,CAAC;IAlBC,IAAI,CAACE,KAAK,GAAG;MACXC,WAAW,EAAEf,gBAAgB,CAACC,kBAAkB,CAACe,WAAW;KAC7D;EACH;EAiBAC,MAAMA,CAAA;IACJ,MAAMC,EAAA,GAaF,IAAI,CAACd,KAAK;MAbR;QACJe,SAAS;QACTC,OAAO;QACPC,UAAU;QACVV,SAAS;QACTW,QAAQ;QACRC,MAAM;QACNC,QAAQ;QACR;QACAjB,QAAQ;QACRK,cAAc;QACda;MAAE,IAAAP,EAEU;MADTd,KAAK,GAAAsB,MAAA,CAAAR,EAAA,EAZJ,yHAaL,CAAa;IACd,MAAMS,IAAI,GAAGL,QAAQ,IACnB1B,KAAA,CAAAgC,aAAA;MAAMT,SAAS,EAAErB,GAAG,CAACD,MAAM,CAACgC,UAAU,EAAEV,SAAS,CAAC;MAAA,eAAc,MAAM;MAACM,EAAE,EAAEA;IAAE,GAC1EH,QAAQ,CAEZ;IACD,OACE1B,KAAA,CAAAgC,aAAA;MAAOT,SAAS,EAAErB,GAAG,CAACD,MAAM,CAACiC,KAAK,EAAE,CAACR,QAAQ,IAAIzB,MAAM,CAACkC,SAAS,CAACC,UAAU,EAAEb,SAAS,CAAC;MAAEc,OAAO,EAAER;IAAE,GACnG7B,KAAA,CAAAgC,aAAA,UAAAM,MAAA,CAAAC,MAAA;MACEhB,SAAS,EAAErB,GAAG,CAACD,MAAM,CAACuC,UAAU;IAAC,GAC5B,IAAI,CAAC1B,gBAAgB,EAAE,KAAKG,SAAS,IAAI;MAAEN,QAAQ,EAAE,IAAI,CAACF;IAAY,CAAE,EAAC;MAC9EgC,IAAI,EAAEZ,EAAE;MACRa,IAAI,EAAC,UAAU;MACfC,GAAG,EAAEC,IAAI,IAAIA,IAAI,KAAKA,IAAI,CAACC,aAAa,GAAG9B,SAAS,KAAK,IAAI,CAAC;MAAA,gBAChD,CAACS,OAAO;MACtBsB,QAAQ,EAAErB;IAAU,GACfT,cAAc,KAAKC,SAAS,GAAG;MAAED;IAAc,CAAE,GAAG;MAAEH,OAAO,EAAEE;IAAS,CAAE,EAC3EZ,YAAY,CACdE,kBAAkB,CAACe,WAAW,EAC9BO,MAAM,KAAKV,SAAS,GAAGU,MAAM,GAAG,IAAI,CAACT,KAAK,CAACC,WAAW,EACtDS,QAAQ,CACT,EACGpB,KAAK,EACT,EACDuB,IAAI,CACC;EAEZ;;AAtEO1B,kBAAA,CAAAe,WAAW,GAAG,oBAAoB;AAClCf,kBAAA,CAAA0C,YAAY,GAA0C;EAC3DvB,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE,KAAK;EACjBd,QAAQ,EAAEA,CAAA,KAAMM;CACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}