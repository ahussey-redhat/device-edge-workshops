{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Radio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.props.onChange(event.currentTarget.checked, event);\n    };\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        'aria-label': ariaLabel,\n        checked,\n        className,\n        defaultChecked,\n        isLabelWrapped,\n        isLabelBeforeButton,\n        isChecked,\n        isDisabled,\n        isValid,\n        label,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onChange,\n        description,\n        body,\n        ouiaId,\n        ouiaSafe = true\n      } = _a,\n      props = __rest(_a, ['aria-label', \"checked\", \"className\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\"]);\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'id is required to make input accessible');\n    }\n    const inputRendered = React.createElement(\"input\", Object.assign({}, props, {\n      className: css(styles.radioInput),\n      type: \"radio\",\n      onChange: this.handleChange,\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: checked || isChecked\n    }, checked === undefined && {\n      defaultChecked\n    }, !label && {\n      'aria-label': ariaLabel\n    }, getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)));\n    let labelRendered = null;\n    if (label && isLabelWrapped) {\n      labelRendered = React.createElement(\"span\", {\n        className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled)\n      }, label);\n    } else if (label) {\n      labelRendered = React.createElement(\"label\", {\n        className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled),\n        htmlFor: props.id\n      }, label);\n    }\n    const descRender = description ? React.createElement(\"span\", {\n      className: css(styles.radioDescription)\n    }, description) : null;\n    const bodyRender = body ? React.createElement(\"span\", {\n      className: css(styles.radioBody)\n    }, body) : null;\n    const childrenRendered = isLabelBeforeButton ? React.createElement(React.Fragment, null, labelRendered, inputRendered, descRender, bodyRender) : React.createElement(React.Fragment, null, inputRendered, labelRendered, descRender, bodyRender);\n    return isLabelWrapped ? React.createElement(\"label\", {\n      className: css(styles.radio, className),\n      htmlFor: props.id\n    }, childrenRendered) : React.createElement(\"div\", {\n      className: css(styles.radio, !label && styles.modifiers.standalone, className)\n    }, childrenRendered);\n  }\n}\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isValid: true,\n  onChange: () => {}\n};","map":{"version":3,"names":["React","styles","css","getOUIAProps","getDefaultOUIAId","Radio","Component","constructor","props","handleChange","event","onChange","currentTarget","checked","label","console","error","state","ouiaStateId","displayName","render","_a","ariaLabel","className","defaultChecked","isLabelWrapped","isLabelBeforeButton","isChecked","isDisabled","isValid","description","body","ouiaId","ouiaSafe","__rest","id","inputRendered","createElement","Object","assign","radioInput","type","disabled","undefined","labelRendered","radioLabel","modifiers","htmlFor","descRender","radioDescription","bodyRender","radioBody","childrenRendered","Fragment","radio","standalone","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Radio\\Radio.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface RadioProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'disabled' | 'label' | 'onChange' | 'type'>,\n    OUIAProps {\n  /** Additional classes added to the radio. */\n  className?: string;\n  /** Id of the radio. */\n  id: string;\n  /** Flag to show if the radio label is wrapped on small screen. */\n  isLabelWrapped?: boolean;\n  /** Flag to show if the radio label is shown before the radio button. */\n  isLabelBeforeButton?: boolean;\n  /** Flag to show if the radio is checked. */\n  checked?: boolean;\n  /** Flag to show if the radio is checked. */\n  isChecked?: boolean;\n  /** Flag to show if the radio is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the radio selection is valid or invalid. */\n  isValid?: boolean;\n  /** Label text of the radio. */\n  label?: React.ReactNode;\n  /** Name for group of radios */\n  name: string;\n  /** A callback for when the radio selection changes. */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Aria label for the radio. */\n  'aria-label'?: string;\n  /** Description text of the radio. */\n  description?: React.ReactNode;\n  /** Body of the radio. */\n  body?: React.ReactNode;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport class Radio extends React.Component<RadioProps, { ouiaStateId: string }> {\n  static displayName = 'Radio';\n  static defaultProps: PickOptional<RadioProps> = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => {}\n  };\n\n  constructor(props: RadioProps) {\n    super(props);\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.checked, event);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      checked,\n      className,\n      defaultChecked,\n      isLabelWrapped,\n      isLabelBeforeButton,\n      isChecked,\n      isDisabled,\n      isValid,\n      label,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe = true,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'id is required to make input accessible');\n    }\n\n    const inputRendered = (\n      <input\n        {...props}\n        className={css(styles.radioInput)}\n        type=\"radio\"\n        onChange={this.handleChange}\n        aria-invalid={!isValid}\n        disabled={isDisabled}\n        checked={checked || isChecked}\n        {...(checked === undefined && { defaultChecked })}\n        {...(!label && { 'aria-label': ariaLabel })}\n        {...getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      />\n    );\n\n    let labelRendered: React.ReactNode = null;\n    if (label && isLabelWrapped) {\n      labelRendered = <span className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)}>{label}</span>;\n    } else if (label) {\n      labelRendered = (\n        <label className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)} htmlFor={props.id}>\n          {label}\n        </label>\n      );\n    }\n\n    const descRender = description ? <span className={css(styles.radioDescription)}>{description}</span> : null;\n    const bodyRender = body ? <span className={css(styles.radioBody)}>{body}</span> : null;\n    const childrenRendered = isLabelBeforeButton ? (\n      <>\n        {labelRendered}\n        {inputRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    ) : (\n      <>\n        {inputRendered}\n        {labelRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    );\n\n    return isLabelWrapped ? (\n      <label className={css(styles.radio, className)} htmlFor={props.id}>\n        {childrenRendered}\n      </label>\n    ) : (\n      <div className={css(styles.radio, !label && styles.modifiers.standalone, className)}>{childrenRendered}</div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}