{"ast":null,"code":"import * as React from 'react';\nexport const DragDropContext = React.createContext({\n  onDrag: _source => true,\n  onDragMove: (_source, _dest) => {},\n  onDrop: (_source, _dest) => false\n});\nexport const DragDrop = _ref => {\n  let {\n    children,\n    onDrag = () => true,\n    onDragMove = () => {},\n    onDrop = () => false\n  } = _ref;\n  return React.createElement(DragDropContext.Provider, {\n    value: {\n      onDrag,\n      onDragMove,\n      onDrop\n    }\n  }, children);\n};\nDragDrop.displayName = 'DragDrop';","map":{"version":3,"names":["React","DragDropContext","createContext","onDrag","_source","onDragMove","_dest","onDrop","DragDrop","_ref","children","createElement","Provider","value","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\DragDrop\\DragDrop.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface DraggableItemPosition {\n  /** Parent droppableId */\n  droppableId: string;\n  /** Index of item in parent Droppable */\n  index: number;\n}\n\nexport const DragDropContext = React.createContext({\n  onDrag: (_source: DraggableItemPosition) => true as boolean,\n  onDragMove: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => {},\n  onDrop: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => false as boolean\n});\n\ninterface DragDropProps {\n  /** Potentially Droppable and Draggable children */\n  children?: React.ReactNode;\n  /** Callback for drag event. Return true to allow drag, false to disallow. */\n  onDrag?: (source: DraggableItemPosition) => boolean;\n  /** Callback on mouse move while dragging. */\n  onDragMove?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => void;\n  /** Callback for drop event. Return true to allow drop, false to disallow. */\n  onDrop?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => boolean;\n}\n\nexport const DragDrop: React.FunctionComponent<DragDropProps> = ({\n  children,\n  onDrag = () => true,\n  onDragMove = () => {},\n  onDrop = () => false\n}: DragDropProps) => (\n  <DragDropContext.Provider value={{ onDrag, onDragMove, onDrop }}>{children}</DragDropContext.Provider>\n);\nDragDrop.displayName = 'DragDrop';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAS9B,OAAO,MAAMC,eAAe,GAAGD,KAAK,CAACE,aAAa,CAAC;EACjDC,MAAM,EAAGC,OAA8B,IAAK,IAAe;EAC3DC,UAAU,EAAEA,CAACD,OAA8B,EAAEE,KAA6B,KAAI,CAAE,CAAC;EACjFC,MAAM,EAAEA,CAACH,OAA8B,EAAEE,KAA6B,KAAK;CAC5E,CAAC;AAaF,OAAO,MAAME,QAAQ,GAA2CC,IAAA;EAAA,IAAC;IAC/DC,QAAQ;IACRP,MAAM,GAAGA,CAAA,KAAM,IAAI;IACnBE,UAAU,GAAGA,CAAA,KAAK,CAAE,CAAC;IACrBE,MAAM,GAAGA,CAAA,KAAM;EAAK,CACN,GAAAE,IAAA;EAAA,OACdT,KAAA,CAAAW,aAAA,CAACV,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEV,MAAM;MAAEE,UAAU;MAAEE;IAAM;EAAE,GAAGG,QAAQ,CAA4B;AAAA,CACvG;AACDF,QAAQ,CAACM,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}