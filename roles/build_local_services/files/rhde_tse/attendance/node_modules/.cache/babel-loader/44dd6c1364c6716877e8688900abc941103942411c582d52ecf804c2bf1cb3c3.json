{"ast":null,"code":"export const WizardDrawerWrapper = _ref => {\n  let {\n    hasDrawer,\n    wrapper,\n    children\n  } = _ref;\n  return hasDrawer ? wrapper(children) : children;\n};\nWizardDrawerWrapper.displayName = 'WizardDrawerWrapper';","map":{"version":3,"names":["WizardDrawerWrapper","_ref","hasDrawer","wrapper","children","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Wizard\\WizardDrawerWrapper.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface WizardDrawerWrapperProps {\n  /** The wizard content  */\n  children: React.ReactElement;\n  /** Flag indicating the wizard has a drawer for at least one of the wizard steps */\n  hasDrawer: boolean;\n  /** The drawer component which wraps the wizard content */\n  wrapper: (children: React.ReactElement) => JSX.Element;\n}\n\nexport const WizardDrawerWrapper: React.FunctionComponent<WizardDrawerWrapperProps> = ({\n  hasDrawer,\n  wrapper,\n  children\n}) => (hasDrawer ? wrapper(children) : children);\n\nWizardDrawerWrapper.displayName = 'WizardDrawerWrapper';\n"],"mappings":"AAWA,OAAO,MAAMA,mBAAmB,GAAsDC,IAAA;EAAA,IAAC;IACrFC,SAAS;IACTC,OAAO;IACPC;EAAQ,CACT,GAAAH,IAAA;EAAA,OAAMC,SAAS,GAAGC,OAAO,CAACC,QAAQ,CAAC,GAAGA,QAAQ;AAAA,CAAC;AAEhDJ,mBAAmB,CAACK,WAAW,GAAG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}