{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/TreeView/tree-view';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nexport const TreeViewSearch = _a => {\n  var {\n      className,\n      onSearch,\n      id,\n      name,\n      'aria-label': ariaLabel\n    } = _a,\n    props = __rest(_a, [\"className\", \"onSearch\", \"id\", \"name\", 'aria-label']);\n  return React.createElement(\"div\", {\n    className: css(styles.treeViewSearch, className)\n  }, React.createElement(\"input\", Object.assign({\n    className: css(formStyles.formControl, formStyles.modifiers.search),\n    onChange: onSearch,\n    id: id,\n    name: name,\n    \"aria-label\": ariaLabel,\n    type: \"search\"\n  }, props)));\n};\nTreeViewSearch.displayName = 'TreeViewSearch';","map":{"version":3,"names":["React","css","styles","formStyles","TreeViewSearch","_a","className","onSearch","id","name","ariaLabel","props","__rest","createElement","treeViewSearch","Object","assign","formControl","modifiers","search","onChange","type","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\TreeView\\TreeViewSearch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/TreeView/tree-view';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\n\n/** Renders a search input for the tree view. This sub-component should be passed into the\n * tree view component's toolbar property.\n */\n\nexport interface TreeViewSearchProps extends React.HTMLProps<HTMLInputElement> {\n  /** Accessible label for the search input. */\n  'aria-label'?: string;\n  /** Classes applied to the wrapper for the search input. */\n  className?: string;\n  /** Id for the search input. */\n  id?: string;\n  /** Name for the search input. */\n  name?: string;\n  /** Callback for search input. */\n  onSearch?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const TreeViewSearch: React.FunctionComponent<TreeViewSearchProps> = ({\n  className,\n  onSearch,\n  id,\n  name,\n  'aria-label': ariaLabel,\n  ...props\n}: TreeViewSearchProps) => (\n  <div className={css(styles.treeViewSearch, className)}>\n    <input\n      className={css(formStyles.formControl, formStyles.modifiers.search)}\n      onChange={onSearch}\n      id={id}\n      name={name}\n      aria-label={ariaLabel}\n      type=\"search\"\n      {...props}\n    />\n  </div>\n);\nTreeViewSearch.displayName = 'TreeViewSearch';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,OAAOC,UAAU,MAAM,kEAAkE;AAmBzF,OAAO,MAAMC,cAAc,GAAkDC,EAOvD,IAAI;MAPmD;MAC3EC,SAAS;MACTC,QAAQ;MACRC,EAAE;MACFC,IAAI;MACJ,YAAY,EAAEC;IAAS,IAAAL,EAEH;IADjBM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EANmE,qDAO5E,CADS;EACiB,OACzBL,KAAA,CAAAa,aAAA;IAAKP,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACY,cAAc,EAAER,SAAS;EAAC,GACnDN,KAAA,CAAAa,aAAA,UAAAE,MAAA,CAAAC,MAAA;IACEV,SAAS,EAAEL,GAAG,CAACE,UAAU,CAACc,WAAW,EAAEd,UAAU,CAACe,SAAS,CAACC,MAAM,CAAC;IACnEC,QAAQ,EAAEb,QAAQ;IAClBC,EAAE,EAAEA,EAAE;IACNC,IAAI,EAAEA,IAAI;IAAA,cACEC,SAAS;IACrBW,IAAI,EAAC;EAAQ,GACTV,KAAK,EACT,CACE;CACP;AACDP,cAAc,CAACkB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}