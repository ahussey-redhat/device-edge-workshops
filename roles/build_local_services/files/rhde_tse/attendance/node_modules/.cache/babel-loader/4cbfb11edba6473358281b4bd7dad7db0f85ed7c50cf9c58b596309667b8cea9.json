{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nexport class DropdownToggleAction extends React.Component {\n  render() {\n    const _a = this.props,\n      {\n        id,\n        className,\n        onClick,\n        isDisabled,\n        children\n      } = _a,\n      props = __rest(_a, [\"id\", \"className\", \"onClick\", \"isDisabled\", \"children\"]);\n    return React.createElement(\"button\", Object.assign({\n      id: id,\n      className: css(styles.dropdownToggleButton, className),\n      onClick: onClick\n    }, isDisabled && {\n      disabled: true,\n      'aria-disabled': true\n    }, props), children);\n  }\n}\nDropdownToggleAction.displayName = 'DropdownToggleAction';\nDropdownToggleAction.defaultProps = {\n  className: '',\n  isDisabled: false,\n  onClick: () => {}\n};","map":{"version":3,"names":["React","styles","css","DropdownToggleAction","Component","render","_a","props","id","className","onClick","isDisabled","children","__rest","createElement","Object","assign","dropdownToggleButton","disabled","displayName","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Dropdown\\DropdownToggleAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\n\nexport interface DropdownToggleActionProps {\n  /** Additional classes added to the DropdownToggleAction */\n  className?: string;\n  /** Flag to show if the action button is disabled */\n  isDisabled?: boolean;\n  /** A callback for when the action button is clicked */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Element to be rendered inside the <button> */\n  children?: React.ReactNode;\n  /** Id of the action button */\n  id?: string;\n  /** Aria-label of the action button */\n  'aria-label'?: string;\n}\n\nexport class DropdownToggleAction extends React.Component<DropdownToggleActionProps> {\n  static displayName = 'DropdownToggleAction';\n  static defaultProps: DropdownToggleActionProps = {\n    className: '',\n    isDisabled: false,\n    onClick: () => {}\n  };\n\n  render() {\n    const { id, className, onClick, isDisabled, children, ...props } = this.props;\n\n    return (\n      <button\n        id={id}\n        className={css(styles.dropdownToggleButton, className)}\n        onClick={onClick}\n        {...(isDisabled && { disabled: true, 'aria-disabled': true })}\n        {...props}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,2DAA2D;AAC9E,SAASC,GAAG,QAAQ,0BAA0B;AAiB9C,OAAM,MAAOC,oBAAqB,SAAQH,KAAK,CAACI,SAAoC;EAQlFC,MAAMA,CAAA;IACJ,MAAMC,EAAA,GAA6D,IAAI,CAACC,KAAK;MAAvE;QAAEC,EAAE;QAAEC,SAAS;QAAEC,OAAO;QAAEC,UAAU;QAAEC;MAAQ,IAAAN,EAAyB;MAApBC,KAAK,GAAAM,MAAA,CAAAP,EAAA,EAAxD,wDAA0D,CAAa;IAE7E,OACEN,KAAA,CAAAc,aAAA,WAAAC,MAAA,CAAAC,MAAA;MACER,EAAE,EAAEA,EAAE;MACNC,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACgB,oBAAoB,EAAER,SAAS,CAAC;MACtDC,OAAO,EAAEA;IAAO,GACXC,UAAU,IAAI;MAAEO,QAAQ,EAAE,IAAI;MAAE,eAAe,EAAE;IAAI,CAAE,EACxDX,KAAK,GAERK,QAAQ,CACF;EAEb;;AArBOT,oBAAA,CAAAgB,WAAW,GAAG,sBAAsB;AACpChB,oBAAA,CAAAiB,YAAY,GAA8B;EAC/CX,SAAS,EAAE,EAAE;EACbE,UAAU,EAAE,KAAK;EACjBD,OAAO,EAAEA,CAAA,KAAK,CAAE;CACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}