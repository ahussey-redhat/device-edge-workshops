{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { css } from '@patternfly/react-styles';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nexport const SelectGroup = _a => {\n  var {\n      children = [],\n      className = '',\n      label = '',\n      titleId = ''\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"label\", \"titleId\"]);\n  return React.createElement(SelectConsumer, null, _ref => {\n    let {\n      variant\n    } = _ref;\n    return React.createElement(\"div\", Object.assign({}, props, {\n      className: css(styles.selectMenuGroup, className)\n    }), React.createElement(\"div\", {\n      className: css(styles.selectMenuGroupTitle),\n      id: titleId,\n      \"aria-hidden\": true\n    }, label), variant === SelectVariant.checkbox ? children : React.createElement(\"ul\", {\n      role: \"listbox\"\n    }, children));\n  });\n};\nSelectGroup.displayName = 'SelectGroup';","map":{"version":3,"names":["React","styles","css","SelectConsumer","SelectVariant","SelectGroup","_a","children","className","label","titleId","props","__rest","createElement","_ref","variant","Object","assign","selectMenuGroup","selectMenuGroupTitle","id","checkbox","role","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Select\\SelectGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { css } from '@patternfly/react-styles';\n\nimport { SelectConsumer, SelectVariant } from './selectConstants';\n\nexport interface SelectGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Checkboxes within group. Must be React.ReactElement<SelectOptionProps>[] */\n  children?: React.ReactNode;\n  /** Additional classes added to the CheckboxSelectGroup control */\n  className?: string;\n  /** Group label */\n  label?: string;\n  /** ID for title label */\n  titleId?: string;\n}\n\nexport const SelectGroup: React.FunctionComponent<SelectGroupProps> = ({\n  children = [],\n  className = '',\n  label = '',\n  titleId = '',\n  ...props\n}: SelectGroupProps) => (\n  <SelectConsumer>\n    {({ variant }) => (\n      <div {...props} className={css(styles.selectMenuGroup, className)}>\n        <div className={css(styles.selectMenuGroupTitle)} id={titleId} aria-hidden>\n          {label}\n        </div>\n        {variant === SelectVariant.checkbox ? children : <ul role=\"listbox\">{children}</ul>}\n      </div>\n    )}\n  </SelectConsumer>\n);\nSelectGroup.displayName = 'SelectGroup';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,SAASC,cAAc,EAAEC,aAAa,QAAQ,mBAAmB;AAajE,OAAO,MAAMC,WAAW,GAA+CC,EAMpD,IAAI;MANgD;MACrEC,QAAQ,GAAG,EAAE;MACbC,SAAS,GAAG,EAAE;MACdC,KAAK,GAAG,EAAE;MACVC,OAAO,GAAG;IAAE,IAAAJ,EAEK;IADdK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EAL6D,6CAMtE,CADS;EACc,OACtBN,KAAA,CAAAa,aAAA,CAACV,cAAc,QACZW,IAAA;IAAA,IAAC;MAAEC;IAAO,CAAE,GAAAD,IAAA;IAAA,OACXd,KAAA,CAAAa,aAAA,QAAAG,MAAA,CAAAC,MAAA,KAASN,KAAK;MAAEH,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACiB,eAAe,EAAEV,SAAS;IAAC,IAC/DR,KAAA,CAAAa,aAAA;MAAKL,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACkB,oBAAoB,CAAC;MAAEC,EAAE,EAAEV,OAAO;MAAA;IAAA,GAC1DD,KAAK,CACF,EACLM,OAAO,KAAKX,aAAa,CAACiB,QAAQ,GAAGd,QAAQ,GAAGP,KAAA,CAAAa,aAAA;MAAIS,IAAI,EAAC;IAAS,GAAEf,QAAQ,CAAM,CAC/E;EAAA,CACP,CACc;CAClB;AACDF,WAAW,CAACkB,WAAW,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}