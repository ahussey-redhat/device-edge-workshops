{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nexport const NotificationDrawerListItem = _a => {\n  var {\n      children = null,\n      className = '',\n      isHoverable = true,\n      isRead = false,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onClick = event => undefined,\n      tabIndex = 0,\n      variant = 'default'\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"isHoverable\", \"isRead\", \"onClick\", \"tabIndex\", \"variant\"]);\n  const onKeyDown = event => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n    }\n  };\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerListItem, isHoverable && styles.modifiers.hoverable, styles.modifiers[variant], isRead && styles.modifiers.read, className),\n    tabIndex: tabIndex,\n    onClick: e => onClick(e),\n    onKeyDown: onKeyDown\n  }), children);\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';","map":{"version":3,"names":["React","css","styles","NotificationDrawerListItem","_a","children","className","isHoverable","isRead","onClick","event","undefined","tabIndex","variant","props","__rest","onKeyDown","key","target","click","createElement","Object","assign","notificationDrawerListItem","modifiers","hoverable","read","e","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\NotificationDrawer\\NotificationDrawerListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\n\nexport interface NotificationDrawerListItemProps extends React.HTMLProps<HTMLLIElement> {\n  /**  Content rendered inside the list item */\n  children?: React.ReactNode;\n  /**  Additional classes added to the list item */\n  className?: string;\n  /**  Modifies the list item to include hover styles on :hover */\n  isHoverable?: boolean;\n  /**  Adds styling to the list item to indicate it has been read */\n  isRead?: boolean;\n  /**  Callback for when a list item is clicked */\n  onClick?: (event: any) => void;\n  /**  Tab index for the list item */\n  tabIndex?: number;\n  /**  Variant indicates the severity level */\n  variant?: 'default' | 'success' | 'danger' | 'warning' | 'info';\n}\n\nexport const NotificationDrawerListItem: React.FunctionComponent<NotificationDrawerListItemProps> = ({\n  children = null,\n  className = '',\n  isHoverable = true,\n  isRead = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick = (event: React.MouseEvent) => undefined as any,\n  tabIndex = 0,\n  variant = 'default',\n  ...props\n}: NotificationDrawerListItemProps) => {\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      (event.target as HTMLElement).click();\n    }\n  };\n  return (\n    <li\n      {...props}\n      className={css(\n        styles.notificationDrawerListItem,\n        isHoverable && styles.modifiers.hoverable,\n        styles.modifiers[variant],\n        isRead && styles.modifiers.read,\n        className\n      )}\n      tabIndex={tabIndex}\n      onClick={e => onClick(e)}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </li>\n  );\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gFAAgF;AAmBnG,OAAO,MAAMC,0BAA0B,GAA8DC,EAUnE,IAAI;MAV+D;MACnGC,QAAQ,GAAG,IAAI;MACfC,SAAS,GAAG,EAAE;MACdC,WAAW,GAAG,IAAI;MAClBC,MAAM,GAAG,KAAK;MACd;MACAC,OAAO,GAAIC,KAAuB,IAAKC,SAAgB;MACvDC,QAAQ,GAAG,CAAC;MACZC,OAAO,GAAG;IAAS,IAAAT,EAEa;IAD7BU,KAAK,GAAAC,MAAA,CAAAX,EAAA,EAT2F,oFAUpG,CADS;EAER,MAAMY,SAAS,GAAIN,KAA0B,IAAI;IAC/C;IACA,IAAIA,KAAK,CAACO,GAAG,KAAK,OAAO,IAAIP,KAAK,CAACO,GAAG,KAAK,GAAG,EAAE;MAC7CP,KAAK,CAACQ,MAAsB,CAACC,KAAK,EAAE;;EAEzC,CAAC;EACD,OACEnB,KAAA,CAAAoB,aAAA,OAAAC,MAAA,CAAAC,MAAA,KACMR,KAAK;IACTR,SAAS,EAAEL,GAAG,CACZC,MAAM,CAACqB,0BAA0B,EACjChB,WAAW,IAAIL,MAAM,CAACsB,SAAS,CAACC,SAAS,EACzCvB,MAAM,CAACsB,SAAS,CAACX,OAAO,CAAC,EACzBL,MAAM,IAAIN,MAAM,CAACsB,SAAS,CAACE,IAAI,EAC/BpB,SAAS,CACV;IACDM,QAAQ,EAAEA,QAAQ;IAClBH,OAAO,EAAEkB,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAAC;IACxBX,SAAS,EAAEA;EAAS,IAEnBX,QAAQ,CACN;AAET,CAAC;AACDF,0BAA0B,CAACyB,WAAW,GAAG,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}