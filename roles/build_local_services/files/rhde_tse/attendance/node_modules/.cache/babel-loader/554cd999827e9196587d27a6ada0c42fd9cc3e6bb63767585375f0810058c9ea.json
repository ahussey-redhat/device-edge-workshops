{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport const AlertToggleExpandButton = _a => {\n  var {\n      'aria-label': ariaLabel = '',\n      variantLabel,\n      onToggleExpand,\n      isExpanded = false\n    } = _a,\n    props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n  const {\n    title,\n    variantLabel: alertVariantLabel\n  } = React.useContext(AlertContext);\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    onClick: onToggleExpand,\n    \"aria-expanded\": isExpanded,\n    \"aria-label\": ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel\n  }, props), React.createElement(\"span\", {\n    className: css(styles.alertToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';","map":{"version":3,"names":["React","Button","ButtonVariant","AlertContext","AngleRightIcon","css","styles","AlertToggleExpandButton","_a","ariaLabel","variantLabel","onToggleExpand","isExpanded","props","__rest","title","alertVariantLabel","useContext","createElement","Object","assign","variant","plain","onClick","className","alertToggleIcon","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Alert\\AlertToggleExpandButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\n\nexport interface AlertToggleExpandButtonProps extends ButtonProps {\n  /** Accessible label for the toggle button. */\n  'aria-label'?: string;\n  /** Flag to indicate if the content is expanded. */\n  isExpanded?: boolean;\n  /** A callback for when the toggle button is clicked. */\n  onToggleExpand?: () => void;\n  /** Variant label for the toggle button. */\n  variantLabel?: string;\n}\n\nexport const AlertToggleExpandButton: React.FunctionComponent<AlertToggleExpandButtonProps> = ({\n  'aria-label': ariaLabel = '',\n  variantLabel,\n  onToggleExpand,\n  isExpanded = false,\n  ...props\n}: AlertToggleExpandButtonProps) => {\n  const { title, variantLabel: alertVariantLabel } = React.useContext(AlertContext);\n  return (\n    <Button\n      variant={ButtonVariant.plain}\n      onClick={onToggleExpand}\n      aria-expanded={isExpanded}\n      aria-label={ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel}\n      {...props}\n    >\n      <span className={css(styles.alertToggleIcon)}>\n        <AngleRightIcon aria-hidden=\"true\" />\n      </span>\n    </Button>\n  );\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAeC,aAAa,QAAQ,WAAW;AAC9D,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,cAAc,MAAM,yDAAyD;AACpF,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,qDAAqD;AAaxE,OAAO,MAAMC,uBAAuB,GAA2DC,EAMhE,IAAI;MAN4D;MAC7F,YAAY,EAAEC,SAAS,GAAG,EAAE;MAC5BC,YAAY;MACZC,cAAc;MACdC,UAAU,GAAG;IAAK,IAAAJ,EAEW;IAD1BK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EALqF,8DAM9F,CADS;EAER,MAAM;IAAEO,KAAK;IAAEL,YAAY,EAAEM;EAAiB,CAAE,GAAGhB,KAAK,CAACiB,UAAU,CAACd,YAAY,CAAC;EACjF,OACEH,KAAA,CAAAkB,aAAA,CAACjB,MAAM,EAAAkB,MAAA,CAAAC,MAAA;IACLC,OAAO,EAAEnB,aAAa,CAACoB,KAAK;IAC5BC,OAAO,EAAEZ,cAAc;IAAA,iBACRC,UAAU;IAAA,cACbH,SAAS,KAAK,EAAE,GAAG,UAAUC,YAAY,IAAIM,iBAAiB,WAAWD,KAAK,EAAE,GAAGN;EAAS,GACpGI,KAAK,GAETb,KAAA,CAAAkB,aAAA;IAAMM,SAAS,EAAEnB,GAAG,CAACC,MAAM,CAACmB,eAAe;EAAC,GAC1CzB,KAAA,CAAAkB,aAAA,CAACd,cAAc;IAAA,eAAa;EAAM,EAAG,CAChC,CACA;AAEb,CAAC;AACDG,uBAAuB,CAACmB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}