{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Panel/panel';\nimport { css } from '@patternfly/react-styles';\nconst PanelBase = _a => {\n  var {\n      className,\n      children,\n      variant,\n      isScrollable,\n      innerRef\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"variant\", \"isScrollable\", \"innerRef\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.panel, variant === 'raised' && styles.modifiers.raised, variant === 'bordered' && styles.modifiers.bordered, isScrollable && styles.modifiers.scrollable, className),\n    ref: innerRef\n  }, props), children);\n};\nexport const Panel = React.forwardRef((props, ref) => React.createElement(PanelBase, Object.assign({\n  innerRef: ref\n}, props)));\nPanel.displayName = 'Panel';","map":{"version":3,"names":["React","styles","css","PanelBase","_a","className","children","variant","isScrollable","innerRef","props","__rest","createElement","Object","assign","panel","modifiers","raised","bordered","scrollable","ref","Panel","forwardRef","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Panel\\Panel.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Panel/panel';\nimport { css } from '@patternfly/react-styles';\n\nexport interface PanelProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the panel */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** Adds panel variant styles */\n  variant?: 'raised' | 'bordered';\n  /** Flag to add scrollable styling to the panel */\n  isScrollable?: boolean;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst PanelBase: React.FunctionComponent<PanelProps> = ({\n  className,\n  children,\n  variant,\n  isScrollable,\n  innerRef,\n  ...props\n}: PanelProps) => (\n  <div\n    className={css(\n      styles.panel,\n      variant === 'raised' && styles.modifiers.raised,\n      variant === 'bordered' && styles.modifiers.bordered,\n      isScrollable && styles.modifiers.scrollable,\n      className\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport const Panel = React.forwardRef((props: PanelProps, ref: React.Ref<any>) => (\n  <PanelBase innerRef={ref} {...props} />\n));\nPanel.displayName = 'Panel';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,qDAAqD;AACxE,SAASC,GAAG,QAAQ,0BAA0B;AAe9C,MAAMC,SAAS,GAAyCC,EAO3C,IAAI;MAPuC;MACtDC,SAAS;MACTC,QAAQ;MACRC,OAAO;MACPC,YAAY;MACZC;IAAQ,IAAAL,EAEG;IADRM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EAN8C,gEAOvD,CADS;EACQ,OAChBJ,KAAA,CAAAY,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACET,SAAS,EAAEH,GAAG,CACZD,MAAM,CAACc,KAAK,EACZR,OAAO,KAAK,QAAQ,IAAIN,MAAM,CAACe,SAAS,CAACC,MAAM,EAC/CV,OAAO,KAAK,UAAU,IAAIN,MAAM,CAACe,SAAS,CAACE,QAAQ,EACnDV,YAAY,IAAIP,MAAM,CAACe,SAAS,CAACG,UAAU,EAC3Cd,SAAS,CACV;IACDe,GAAG,EAAEX;EAAQ,GACTC,KAAK,GAERJ,QAAQ,CACL;CACP;AAED,OAAO,MAAMe,KAAK,GAAGrB,KAAK,CAACsB,UAAU,CAAC,CAACZ,KAAiB,EAAEU,GAAmB,KAC3EpB,KAAA,CAAAY,aAAA,CAACT,SAAS,EAAAU,MAAA,CAAAC,MAAA;EAACL,QAAQ,EAAEW;AAAG,GAAMV,KAAK,EACpC,CAAC;AACFW,KAAK,CAACE,WAAW,GAAG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}