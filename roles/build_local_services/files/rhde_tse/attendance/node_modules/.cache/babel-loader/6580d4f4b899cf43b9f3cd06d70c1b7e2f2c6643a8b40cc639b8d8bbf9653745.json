{"ast":null,"code":"// @ts-nocheck\nimport getComputedStyle from './getComputedStyle';\n/**\n * @param element\n */\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","map":{"version":3,"names":["getComputedStyle","isScrollParent","element","overflow","overflowX","overflowY","test"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\helpers\\Popper\\thirdparty\\popper-core\\dom-utils\\isScrollParent.ts"],"sourcesContent":["// @ts-nocheck\nimport getComputedStyle from './getComputedStyle';\n\n/**\n * @param element\n */\nexport default function isScrollParent(element: HTMLElement): boolean {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n"],"mappings":"AAAA;AACA,OAAOA,gBAAgB,MAAM,oBAAoB;AAEjD;;;AAGA,eAAc,SAAUC,cAAcA,CAACC,OAAoB;EACzD;EACA,MAAM;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAS,CAAE,GAAGL,gBAAgB,CAACE,OAAO,CAAC;EACpE,OAAO,4BAA4B,CAACI,IAAI,CAACH,QAAQ,GAAGE,SAAS,GAAGD,SAAS,CAAC;AAC5E"},"metadata":{},"sourceType":"module","externalDependencies":[]}