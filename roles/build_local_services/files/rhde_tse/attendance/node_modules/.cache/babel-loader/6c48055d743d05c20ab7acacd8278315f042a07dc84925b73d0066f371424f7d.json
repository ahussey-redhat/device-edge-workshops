{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroupExpandable = _a => {\n  var {\n      children,\n      className,\n      header,\n      isExpanded = false,\n      toggleAriaLabel\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n  const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n  return React.createElement(InternalFormFieldGroup, Object.assign({\n    className: className,\n    header: header,\n    isExpandable: true,\n    isExpanded: localIsExpanded,\n    toggleAriaLabel: toggleAriaLabel,\n    onToggle: () => setIsExpanded(!localIsExpanded)\n  }, props), children);\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';","map":{"version":3,"names":["React","useState","InternalFormFieldGroup","FormFieldGroupExpandable","_a","children","className","header","isExpanded","toggleAriaLabel","props","__rest","localIsExpanded","setIsExpanded","createElement","Object","assign","isExpandable","onToggle","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Form\\FormFieldGroupExpandable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\n\nexport interface FormFieldGroupExpandableProps extends React.HTMLProps<HTMLDivElement> {\n  /** Anything that can be rendered as form field group content. */\n  children?: React.ReactNode;\n  /** Additional classes added to the form field group. */\n  className?: string;\n  /** Form field group header */\n  header?: React.ReactNode;\n  /** Flag indicating if the form field group is initially expanded */\n  isExpanded?: boolean;\n  /** Aria-label to use on the form field group toggle button */\n  toggleAriaLabel?: string;\n}\n\nexport const FormFieldGroupExpandable: React.FunctionComponent<FormFieldGroupExpandableProps> = ({\n  children,\n  className,\n  header,\n  isExpanded = false,\n  toggleAriaLabel,\n  ...props\n}: FormFieldGroupExpandableProps) => {\n  const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n\n  return (\n    <InternalFormFieldGroup\n      className={className}\n      header={header}\n      isExpandable\n      isExpanded={localIsExpanded}\n      toggleAriaLabel={toggleAriaLabel}\n      onToggle={() => setIsExpanded(!localIsExpanded)}\n      {...props}\n    >\n      {children}\n    </InternalFormFieldGroup>\n  );\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,sBAAsB,QAAQ,0BAA0B;AAejE,OAAO,MAAMC,wBAAwB,GAA4DC,EAOjE,IAAI;MAP6D;MAC/FC,QAAQ;MACRC,SAAS;MACTC,MAAM;MACNC,UAAU,GAAG,KAAK;MAClBC;IAAe,IAAAL,EAEe;IAD3BM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EANuF,oEAOhG,CADS;EAER,MAAM,CAACQ,eAAe,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACO,UAAU,CAAC;EAE7D,OACER,KAAA,CAAAc,aAAA,CAACZ,sBAAsB,EAAAa,MAAA,CAAAC,MAAA;IACrBV,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA,MAAM;IACdU,YAAY;IACZT,UAAU,EAAEI,eAAe;IAC3BH,eAAe,EAAEA,eAAe;IAChCS,QAAQ,EAAEA,CAAA,KAAML,aAAa,CAAC,CAACD,eAAe;EAAC,GAC3CF,KAAK,GAERL,QAAQ,CACc;AAE7B,CAAC;AACDF,wBAAwB,CAACgB,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}