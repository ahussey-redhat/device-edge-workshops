{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nexport const OptionsMenuItem = _a => {\n  var {\n      children = null,\n      isSelected = false,\n      onSelect = () => null,\n      id = '',\n      isDisabled\n    } = _a,\n    props = __rest(_a, [\"children\", \"isSelected\", \"onSelect\", \"id\", \"isDisabled\"]);\n  return React.createElement(DropdownItem, Object.assign({\n    id: id,\n    component: \"button\",\n    isDisabled: isDisabled,\n    onClick: event => onSelect(event)\n  }, isDisabled && {\n    'aria-disabled': true\n  }, props), children, isSelected && React.createElement(\"span\", {\n    className: css(styles.optionsMenuMenuItemIcon)\n  }, React.createElement(CheckIcon, {\n    \"aria-hidden\": isSelected\n  })));\n};\nOptionsMenuItem.displayName = 'OptionsMenuItem';","map":{"version":3,"names":["React","css","styles","DropdownItem","CheckIcon","OptionsMenuItem","_a","children","isSelected","onSelect","id","isDisabled","props","__rest","createElement","Object","assign","component","onClick","event","className","optionsMenuMenuItemIcon","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\OptionsMenu\\OptionsMenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\n\nexport interface OptionsMenuItemProps\n  extends Omit<React.HTMLProps<HTMLAnchorElement>, 'onSelect' | 'onClick' | 'onKeyDown' | 'type'> {\n  /** Anything which can be rendered as an options menu item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of an options menu item */\n  className?: string;\n  /** Render options menu item as selected */\n  isSelected?: boolean;\n  /** Render options menu item as disabled option */\n  isDisabled?: boolean;\n  /** Callback for when this options menu item is selected */\n  onSelect?: (event?: React.MouseEvent<HTMLAnchorElement> | React.KeyboardEvent) => void;\n  /** Unique id of this options menu item */\n  id?: string;\n}\n\nexport const OptionsMenuItem: React.FunctionComponent<OptionsMenuItemProps> = ({\n  children = null as React.ReactNode,\n  isSelected = false,\n  onSelect = () => null as any,\n  id = '',\n  isDisabled,\n  ...props\n}: OptionsMenuItemProps) => (\n  <DropdownItem\n    id={id}\n    component=\"button\"\n    isDisabled={isDisabled}\n    onClick={(event: any) => onSelect(event)}\n    {...(isDisabled && { 'aria-disabled': true })}\n    {...props}\n  >\n    {children}\n    {isSelected && (\n      <span className={css(styles.optionsMenuMenuItemIcon)}>\n        <CheckIcon aria-hidden={isSelected} />\n      </span>\n    )}\n  </DropdownItem>\n);\nOptionsMenuItem.displayName = 'OptionsMenuItem';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,kEAAkE;AACrF,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,SAAS,MAAM,mDAAmD;AAkBzE,OAAO,MAAMC,eAAe,GAAmDC,EAOxD,IAAI;MAPoD;MAC7EC,QAAQ,GAAG,IAAuB;MAClCC,UAAU,GAAG,KAAK;MAClBC,QAAQ,GAAGA,CAAA,KAAM,IAAW;MAC5BC,EAAE,GAAG,EAAE;MACPC;IAAU,IAAAL,EAEW;IADlBM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EANqE,0DAO9E,CADS;EACkB,OAC1BN,KAAA,CAAAc,aAAA,CAACX,YAAY,EAAAY,MAAA,CAAAC,MAAA;IACXN,EAAE,EAAEA,EAAE;IACNO,SAAS,EAAC,QAAQ;IAClBN,UAAU,EAAEA,UAAU;IACtBO,OAAO,EAAGC,KAAU,IAAKV,QAAQ,CAACU,KAAK;EAAC,GACnCR,UAAU,IAAI;IAAE,eAAe,EAAE;EAAI,CAAE,EACxCC,KAAK,GAERL,QAAQ,EACRC,UAAU,IACTR,KAAA,CAAAc,aAAA;IAAMM,SAAS,EAAEnB,GAAG,CAACC,MAAM,CAACmB,uBAAuB;EAAC,GAClDrB,KAAA,CAAAc,aAAA,CAACV,SAAS;IAAA,eAAcI;EAAU,EAAI,CAEzC,CACY;CAChB;AACDH,eAAe,CAACiB,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}