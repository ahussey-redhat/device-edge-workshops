{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nconst FormBase = _a => {\n  var {\n      children = null,\n      className = '',\n      isHorizontal = false,\n      isWidthLimited = false,\n      maxWidth = '',\n      innerRef\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"isHorizontal\", \"isWidthLimited\", \"maxWidth\", \"innerRef\"]);\n  return React.createElement(\"form\", Object.assign({\n    noValidate: true\n  }, maxWidth && {\n    style: Object.assign({\n      '--pf-c-form--m-limit-width--MaxWidth': maxWidth\n    }, props.style)\n  }, props, {\n    className: css(styles.form, isHorizontal && styles.modifiers.horizontal, (isWidthLimited || maxWidth) && styles.modifiers.limitWidth, className),\n    ref: innerRef\n  }), children);\n};\nexport const Form = React.forwardRef((props, ref) => React.createElement(FormBase, Object.assign({\n  innerRef: ref\n}, props)));\nForm.displayName = 'Form';","map":{"version":3,"names":["React","styles","css","FormBase","_a","children","className","isHorizontal","isWidthLimited","maxWidth","innerRef","props","__rest","createElement","Object","assign","noValidate","style","form","modifiers","horizontal","limitWidth","ref","Form","forwardRef","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Form\\Form.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\n\nexport interface FormProps extends Omit<React.HTMLProps<HTMLFormElement>, 'ref'> {\n  /** Anything that can be rendered as Form content. */\n  children?: React.ReactNode;\n  /** Additional classes added to the Form. */\n  className?: string;\n  /** Sets the Form to horizontal. */\n  isHorizontal?: boolean;\n  /** Limits the max-width of the form. */\n  isWidthLimited?: boolean;\n  /** Sets a custom max-width for the form. */\n  maxWidth?: string;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst FormBase: React.FunctionComponent<FormProps> = ({\n  children = null,\n  className = '',\n  isHorizontal = false,\n  isWidthLimited = false,\n  maxWidth = '',\n  innerRef,\n  ...props\n}: FormProps) => (\n  <form\n    noValidate\n    {...(maxWidth && {\n      style: {\n        '--pf-c-form--m-limit-width--MaxWidth': maxWidth,\n        ...props.style\n      } as React.CSSProperties\n    })}\n    {...props}\n    className={css(\n      styles.form,\n      isHorizontal && styles.modifiers.horizontal,\n      (isWidthLimited || maxWidth) && styles.modifiers.limitWidth,\n      className\n    )}\n    ref={innerRef}\n  >\n    {children}\n  </form>\n);\n\nexport const Form = React.forwardRef((props: FormProps, ref: React.Ref<any>) => <FormBase innerRef={ref} {...props} />);\n\nForm.displayName = 'Form';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,GAAG,QAAQ,0BAA0B;AAiB9C,MAAMC,QAAQ,GAAwCC,EAQ1C,IAAI;MARsC;MACpDC,QAAQ,GAAG,IAAI;MACfC,SAAS,GAAG,EAAE;MACdC,YAAY,GAAG,KAAK;MACpBC,cAAc,GAAG,KAAK;MACtBC,QAAQ,GAAG,EAAE;MACbC;IAAQ,IAAAN,EAEE;IADPO,KAAK,GAAAC,MAAA,CAAAR,EAAA,EAP4C,mFAQrD,CADS;EACO,OACfJ,KAAA,CAAAa,aAAA,SAAAC,MAAA,CAAAC,MAAA;IACEC,UAAU;EAAA,GACLP,QAAQ,IAAI;IACfQ,KAAK,EAAEH,MAAA,CAAAC,MAAA;MACL,sCAAsC,EAAEN;IAAQ,GAC7CE,KAAK,CAACM,KAAK;GAEjB,EACGN,KAAK;IACTL,SAAS,EAAEJ,GAAG,CACZD,MAAM,CAACiB,IAAI,EACXX,YAAY,IAAIN,MAAM,CAACkB,SAAS,CAACC,UAAU,EAC3C,CAACZ,cAAc,IAAIC,QAAQ,KAAKR,MAAM,CAACkB,SAAS,CAACE,UAAU,EAC3Df,SAAS,CACV;IACDgB,GAAG,EAAEZ;EAAQ,IAEZL,QAAQ,CACJ;CACR;AAED,OAAO,MAAMkB,IAAI,GAAGvB,KAAK,CAACwB,UAAU,CAAC,CAACb,KAAgB,EAAEW,GAAmB,KAAKtB,KAAA,CAAAa,aAAA,CAACV,QAAQ,EAAAW,MAAA,CAAAC,MAAA;EAACL,QAAQ,EAAEY;AAAG,GAAMX,KAAK,EAAI,CAAC;AAEvHY,IAAI,CAACE,WAAW,GAAG,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}