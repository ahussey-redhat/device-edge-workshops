{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { useOUIAId } from '../../helpers';\nexport var OptionsMenuPosition;\n(function (OptionsMenuPosition) {\n  OptionsMenuPosition[\"right\"] = \"right\";\n  OptionsMenuPosition[\"left\"] = \"left\";\n})(OptionsMenuPosition || (OptionsMenuPosition = {}));\nexport var OptionsMenuDirection;\n(function (OptionsMenuDirection) {\n  OptionsMenuDirection[\"up\"] = \"up\";\n  OptionsMenuDirection[\"down\"] = \"down\";\n})(OptionsMenuDirection || (OptionsMenuDirection = {}));\nexport const OptionsMenu = _a => {\n  var {\n      className = '',\n      menuItems,\n      toggle,\n      isText = false,\n      isGrouped = false,\n      id,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ref,\n      menuAppendTo = 'inline',\n      ouiaId,\n      ouiaSafe = true,\n      removeFindDomNode = false,\n      zIndex = 9999\n    } = _a,\n    props = __rest(_a, [\"className\", \"menuItems\", \"toggle\", \"isText\", \"isGrouped\", \"id\", \"ref\", \"menuAppendTo\", \"ouiaId\", \"ouiaSafe\", \"removeFindDomNode\", \"zIndex\"]);\n  return React.createElement(DropdownContext.Provider, {\n    value: {\n      id,\n      onSelect: () => undefined,\n      toggleIndicatorClass: styles.optionsMenuToggleIcon,\n      toggleTextClass: styles.optionsMenuToggleText,\n      menuClass: styles.optionsMenuMenu,\n      itemClass: styles.optionsMenuMenuItem,\n      toggleClass: isText ? styles.optionsMenuToggleButton : styles.optionsMenuToggle,\n      baseClass: styles.optionsMenu,\n      disabledClass: styles.modifiers.disabled,\n      menuComponent: isGrouped ? 'div' : 'ul',\n      baseComponent: 'div',\n      ouiaId: useOUIAId(OptionsMenu.displayName, ouiaId),\n      ouiaSafe,\n      ouiaComponentType: OptionsMenu.displayName\n    }\n  }, React.createElement(DropdownWithContext, Object.assign({\n    id: id,\n    dropdownItems: menuItems,\n    className: className,\n    isGrouped: isGrouped,\n    toggle: toggle,\n    menuAppendTo: menuAppendTo,\n    removeFindDomNode: removeFindDomNode,\n    zIndex: zIndex\n  }, props)));\n};\nOptionsMenu.displayName = 'OptionsMenu';","map":{"version":3,"names":["React","styles","DropdownContext","DropdownWithContext","useOUIAId","OptionsMenuPosition","OptionsMenuDirection","OptionsMenu","_a","className","menuItems","toggle","isText","isGrouped","id","ref","menuAppendTo","ouiaId","ouiaSafe","removeFindDomNode","zIndex","props","__rest","createElement","Provider","value","onSelect","undefined","toggleIndicatorClass","optionsMenuToggleIcon","toggleTextClass","optionsMenuToggleText","menuClass","optionsMenuMenu","itemClass","optionsMenuMenuItem","toggleClass","optionsMenuToggleButton","optionsMenuToggle","baseClass","optionsMenu","disabledClass","modifiers","disabled","menuComponent","baseComponent","displayName","ouiaComponentType","Object","assign","dropdownItems"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\OptionsMenu\\OptionsMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { OUIAProps, useOUIAId } from '../../helpers';\nimport { ToggleMenuBaseProps } from '../../helpers/Popper/Popper';\n\nexport enum OptionsMenuPosition {\n  right = 'right',\n  left = 'left'\n}\n\nexport enum OptionsMenuDirection {\n  up = 'up',\n  down = 'down'\n}\n\nexport interface OptionsMenuProps\n  extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>,\n    React.HTMLProps<HTMLDivElement>,\n    OUIAProps {\n  /** Classes applied to root element of the options menu */\n  className?: string;\n  /** Id of the root element of the options menu */\n  id: string;\n  /** Array of OptionsMenuItem and/or OptionMenuGroup nodes that will be rendered in the options menu list */\n  menuItems: React.ReactNode[];\n  /** Either an OptionsMenuToggle or an OptionsMenuToggleWithText to use to toggle the options menu */\n  toggle: React.ReactElement;\n  /** Flag to indicate the toggle has no border or background */\n  isPlain?: boolean;\n  /** Flag to indicate if menu is open */\n  isOpen?: boolean;\n  /** Flag to indicate if toggle is textual toggle */\n  isText?: boolean;\n  /** Flag to indicate if menu is groupped */\n  isGrouped?: boolean;\n  /** Indicates where menu will be aligned horizontally */\n  position?: 'right' | 'left';\n  /** Menu will open up or open down from the options menu toggle */\n  direction?: 'up' | 'down';\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** @beta Opt-in for updated popper that does not use findDOMNode. */\n  removeFindDomNode?: boolean;\n  /** z-index of the options menu when menuAppendTo is not inline. */\n  zIndex?: number;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport const OptionsMenu: React.FunctionComponent<OptionsMenuProps> = ({\n  className = '',\n  menuItems,\n  toggle,\n  isText = false,\n  isGrouped = false,\n  id,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref,\n  menuAppendTo = 'inline',\n  ouiaId,\n  ouiaSafe = true,\n  removeFindDomNode = false,\n  zIndex = 9999,\n  ...props\n}: OptionsMenuProps) => (\n  <DropdownContext.Provider\n    value={{\n      id,\n      onSelect: () => undefined,\n      toggleIndicatorClass: styles.optionsMenuToggleIcon,\n      toggleTextClass: styles.optionsMenuToggleText,\n      menuClass: styles.optionsMenuMenu,\n      itemClass: styles.optionsMenuMenuItem,\n      toggleClass: isText ? styles.optionsMenuToggleButton : styles.optionsMenuToggle,\n      baseClass: styles.optionsMenu,\n      disabledClass: styles.modifiers.disabled,\n      menuComponent: isGrouped ? 'div' : 'ul',\n      baseComponent: 'div',\n      ouiaId: useOUIAId(OptionsMenu.displayName, ouiaId),\n      ouiaSafe,\n      ouiaComponentType: OptionsMenu.displayName\n    }}\n  >\n    <DropdownWithContext\n      id={id}\n      dropdownItems={menuItems}\n      className={className}\n      isGrouped={isGrouped}\n      toggle={toggle}\n      menuAppendTo={menuAppendTo}\n      removeFindDomNode={removeFindDomNode}\n      zIndex={zIndex}\n      {...props}\n    />\n  </DropdownContext.Provider>\n);\nOptionsMenu.displayName = 'OptionsMenu';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,kEAAkE;AACrF,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAAoBC,SAAS,QAAQ,eAAe;AAGpD,WAAYC,mBAGX;AAHD,WAAYA,mBAAmB;EAC7BA,mBAAA,mBAAe;EACfA,mBAAA,iBAAa;AACf,CAAC,EAHWA,mBAAmB,KAAnBA,mBAAmB;AAK/B,WAAYC,oBAGX;AAHD,WAAYA,oBAAoB;EAC9BA,oBAAA,aAAS;EACTA,oBAAA,iBAAa;AACf,CAAC,EAHWA,oBAAoB,KAApBA,oBAAoB;AA+ChC,OAAO,MAAMC,WAAW,GAA+CC,EAepD,IAAI;MAfgD;MACrEC,SAAS,GAAG,EAAE;MACdC,SAAS;MACTC,MAAM;MACNC,MAAM,GAAG,KAAK;MACdC,SAAS,GAAG,KAAK;MACjBC,EAAE;MACF;MACAC,GAAG;MACHC,YAAY,GAAG,QAAQ;MACvBC,MAAM;MACNC,QAAQ,GAAG,IAAI;MACfC,iBAAiB,GAAG,KAAK;MACzBC,MAAM,GAAG;IAAI,IAAAZ,EAEI;IADda,KAAK,GAAAC,MAAA,CAAAd,EAAA,EAd6D,6IAetE,CADS;EACc,OACtBR,KAAA,CAAAuB,aAAA,CAACrB,eAAe,CAACsB,QAAQ;IACvBC,KAAK,EAAE;MACLX,EAAE;MACFY,QAAQ,EAAEA,CAAA,KAAMC,SAAS;MACzBC,oBAAoB,EAAE3B,MAAM,CAAC4B,qBAAqB;MAClDC,eAAe,EAAE7B,MAAM,CAAC8B,qBAAqB;MAC7CC,SAAS,EAAE/B,MAAM,CAACgC,eAAe;MACjCC,SAAS,EAAEjC,MAAM,CAACkC,mBAAmB;MACrCC,WAAW,EAAExB,MAAM,GAAGX,MAAM,CAACoC,uBAAuB,GAAGpC,MAAM,CAACqC,iBAAiB;MAC/EC,SAAS,EAAEtC,MAAM,CAACuC,WAAW;MAC7BC,aAAa,EAAExC,MAAM,CAACyC,SAAS,CAACC,QAAQ;MACxCC,aAAa,EAAE/B,SAAS,GAAG,KAAK,GAAG,IAAI;MACvCgC,aAAa,EAAE,KAAK;MACpB5B,MAAM,EAAEb,SAAS,CAACG,WAAW,CAACuC,WAAW,EAAE7B,MAAM,CAAC;MAClDC,QAAQ;MACR6B,iBAAiB,EAAExC,WAAW,CAACuC;;EAChC,GAED9C,KAAA,CAAAuB,aAAA,CAACpB,mBAAmB,EAAA6C,MAAA,CAAAC,MAAA;IAClBnC,EAAE,EAAEA,EAAE;IACNoC,aAAa,EAAExC,SAAS;IACxBD,SAAS,EAAEA,SAAS;IACpBI,SAAS,EAAEA,SAAS;IACpBF,MAAM,EAAEA,MAAM;IACdK,YAAY,EAAEA,YAAY;IAC1BG,iBAAiB,EAAEA,iBAAiB;IACpCC,MAAM,EAAEA;EAAM,GACVC,KAAK,EACT,CACuB;CAC5B;AACDd,WAAW,CAACuC,WAAW,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}