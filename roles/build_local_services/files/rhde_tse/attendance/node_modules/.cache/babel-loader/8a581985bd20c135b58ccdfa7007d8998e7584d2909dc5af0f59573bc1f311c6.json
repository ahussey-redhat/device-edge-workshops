{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = _a => {\n  var {\n      onClick,\n      id,\n      textId,\n      contentId,\n      isExpanded = false\n    } = _a,\n    props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n  return React.createElement(Button, Object.assign({\n    type: \"button\",\n    variant: \"control\",\n    onClick: onClick,\n    id: id,\n    \"aria-labelledby\": `${id} ${textId}`,\n    \"aria-controls\": `${id} ${contentId}`,\n    \"aria-expanded\": isExpanded\n  }, props), isExpanded ? React.createElement(AngleDownIcon, {\n    \"aria-hidden\": \"true\"\n  }) : React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  }));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';","map":{"version":3,"names":["React","AngleRightIcon","AngleDownIcon","Button","ClipboardCopyToggle","_a","onClick","id","textId","contentId","isExpanded","props","__rest","createElement","Object","assign","type","variant","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\ClipboardCopy\\ClipboardCopyToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\n\nexport interface ClipboardCopyToggleProps\n  extends Omit<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, 'ref'> {\n  onClick: (event: React.MouseEvent) => void;\n  id: string;\n  textId: string;\n  contentId: string;\n  isExpanded?: boolean;\n  className?: string;\n}\n\nexport const ClipboardCopyToggle: React.FunctionComponent<ClipboardCopyToggleProps> = ({\n  onClick,\n  id,\n  textId,\n  contentId,\n  isExpanded = false,\n  ...props\n}: ClipboardCopyToggleProps) => (\n  <Button\n    type=\"button\"\n    variant=\"control\"\n    onClick={onClick}\n    id={id}\n    aria-labelledby={`${id} ${textId}`}\n    aria-controls={`${id} ${contentId}`}\n    aria-expanded={isExpanded}\n    {...props}\n  >\n    {isExpanded ? <AngleDownIcon aria-hidden=\"true\" /> : <AngleRightIcon aria-hidden=\"true\" />}\n  </Button>\n);\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,cAAc,MAAM,yDAAyD;AACpF,OAAOC,aAAa,MAAM,wDAAwD;AAClF,SAASC,MAAM,QAAQ,WAAW;AAYlC,OAAO,MAAMC,mBAAmB,GAAuDC,EAO5D,IAAI;MAPwD;MACrFC,OAAO;MACPC,EAAE;MACFC,MAAM;MACNC,SAAS;MACTC,UAAU,GAAG;IAAK,IAAAL,EAEO;IADtBM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EAN6E,sDAOtF,CADS;EACsB,OAC9BL,KAAA,CAAAa,aAAA,CAACV,MAAM,EAAAW,MAAA,CAAAC,MAAA;IACLC,IAAI,EAAC,QAAQ;IACbC,OAAO,EAAC,SAAS;IACjBX,OAAO,EAAEA,OAAO;IAChBC,EAAE,EAAEA,EAAE;IAAA,mBACW,GAAGA,EAAE,IAAIC,MAAM,EAAE;IAAA,iBACnB,GAAGD,EAAE,IAAIE,SAAS,EAAE;IAAA,iBACpBC;EAAU,GACrBC,KAAK,GAERD,UAAU,GAAGV,KAAA,CAAAa,aAAA,CAACX,aAAa;IAAA,eAAa;EAAM,EAAG,GAAGF,KAAA,CAAAa,aAAA,CAACZ,cAAc;IAAA,eAAa;EAAM,EAAG,CACnF;CACV;AACDG,mBAAmB,CAACc,WAAW,GAAG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}