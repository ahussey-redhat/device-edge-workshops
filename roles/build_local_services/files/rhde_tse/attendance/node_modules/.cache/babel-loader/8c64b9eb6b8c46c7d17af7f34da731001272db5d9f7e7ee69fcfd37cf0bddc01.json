{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { AccordionContext } from './AccordionContext';\nexport const AccordionToggle = _a => {\n  var {\n      className = '',\n      id,\n      isExpanded = false,\n      children = null,\n      component\n    } = _a,\n    props = __rest(_a, [\"className\", \"id\", \"isExpanded\", \"children\", \"component\"]);\n  return React.createElement(AccordionContext.Consumer, null, _ref => {\n    let {\n      ToggleContainer\n    } = _ref;\n    const Container = component || ToggleContainer;\n    return React.createElement(Container, null, React.createElement(\"button\", Object.assign({\n      id: id,\n      className: css(styles.accordionToggle, isExpanded && styles.modifiers.expanded, className),\n      \"aria-expanded\": isExpanded,\n      type: \"button\"\n    }, props), React.createElement(\"span\", {\n      className: css(styles.accordionToggleText)\n    }, children), React.createElement(\"span\", {\n      className: css(styles.accordionToggleIcon)\n    }, React.createElement(AngleRightIcon, null))));\n  });\n};\nAccordionToggle.displayName = 'AccordionToggle';","map":{"version":3,"names":["React","css","styles","AngleRightIcon","AccordionContext","AccordionToggle","_a","className","id","isExpanded","children","component","props","__rest","createElement","Consumer","_ref","ToggleContainer","Container","Object","assign","accordionToggle","modifiers","expanded","type","accordionToggleText","accordionToggleIcon","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Accordion\\AccordionToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { AccordionContext } from './AccordionContext';\n\nexport interface AccordionToggleProps\n  extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  /** Content rendered inside the Accordion toggle  */\n  children?: React.ReactNode;\n  /** Additional classes added to the Accordion Toggle  */\n  className?: string;\n  /** Flag to show if the expanded content of the Accordion item is visible  */\n  isExpanded?: boolean;\n  /** Identify the Accordion toggle number  */\n  id: string;\n  /** Container to override the default for toggle */\n  component?: React.ElementType;\n}\n\nexport const AccordionToggle: React.FunctionComponent<AccordionToggleProps> = ({\n  className = '',\n  id,\n  isExpanded = false,\n  children = null,\n  component,\n  ...props\n}: AccordionToggleProps) => (\n  <AccordionContext.Consumer>\n    {({ ToggleContainer }) => {\n      const Container = component || ToggleContainer;\n      return (\n        <Container>\n          <button\n            id={id}\n            className={css(styles.accordionToggle, isExpanded && styles.modifiers.expanded, className)}\n            aria-expanded={isExpanded}\n            type=\"button\"\n            {...props}\n          >\n            <span className={css(styles.accordionToggleText)}>{children}</span>\n            <span className={css(styles.accordionToggleIcon)}>\n              <AngleRightIcon />\n            </span>\n          </button>\n        </Container>\n      );\n    }}\n  </AccordionContext.Consumer>\n);\nAccordionToggle.displayName = 'AccordionToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,6DAA6D;AAChF,OAAOC,cAAc,MAAM,yDAAyD;AACpF,SAASC,gBAAgB,QAAQ,oBAAoB;AAgBrD,OAAO,MAAMC,eAAe,GAAmDC,EAOxD,IAAI;MAPoD;MAC7EC,SAAS,GAAG,EAAE;MACdC,EAAE;MACFC,UAAU,GAAG,KAAK;MAClBC,QAAQ,GAAG,IAAI;MACfC;IAAS,IAAAL,EAEY;IADlBM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EANqE,0DAO9E,CADS;EACkB,OAC1BN,KAAA,CAAAc,aAAA,CAACV,gBAAgB,CAACW,QAAQ,QACvBC,IAAA,IAAwB;IAAA,IAAvB;MAAEC;IAAe,CAAE,GAAAD,IAAA;IACnB,MAAME,SAAS,GAAGP,SAAS,IAAIM,eAAe;IAC9C,OACEjB,KAAA,CAAAc,aAAA,CAACI,SAAS,QACRlB,KAAA,CAAAc,aAAA,WAAAK,MAAA,CAAAC,MAAA;MACEZ,EAAE,EAAEA,EAAE;MACND,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACmB,eAAe,EAAEZ,UAAU,IAAIP,MAAM,CAACoB,SAAS,CAACC,QAAQ,EAAEhB,SAAS,CAAC;MAAA,iBAC3EE,UAAU;MACzBe,IAAI,EAAC;IAAQ,GACTZ,KAAK,GAETZ,KAAA,CAAAc,aAAA;MAAMP,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACuB,mBAAmB;IAAC,GAAGf,QAAQ,CAAQ,EACnEV,KAAA,CAAAc,aAAA;MAAMP,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACwB,mBAAmB;IAAC,GAC9C1B,KAAA,CAAAc,aAAA,CAACX,cAAc,OAAG,CACb,CACA,CACC;EAEhB,CAAC,CACyB;CAC7B;AACDE,eAAe,CAACsB,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}