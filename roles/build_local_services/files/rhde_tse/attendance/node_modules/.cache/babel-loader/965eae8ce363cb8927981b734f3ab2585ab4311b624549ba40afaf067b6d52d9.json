{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarContentContext, ToolbarContext } from './ToolbarUtils';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { ToolbarExpandableContent } from './ToolbarExpandableContent';\nimport { PageContext } from '../Page/PageContext';\nexport class ToolbarContent extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.expandableContentRef = React.createRef();\n    this.chipContainerRef = React.createRef();\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        children,\n        isExpanded,\n        toolbarId,\n        visibility,\n        visiblity,\n        alignment,\n        clearAllFilters,\n        showClearFiltersButton,\n        clearFiltersButtonText\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"toolbarId\", \"visibility\", \"visiblity\", \"alignment\", \"clearAllFilters\", \"showClearFiltersButton\", \"clearFiltersButtonText\"]);\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('The ToolbarContent visiblity prop has been deprecated. ' + 'Please use the correctly spelled visibility prop instead.');\n    }\n    return React.createElement(PageContext.Consumer, null, _ref => {\n      let {\n        width,\n        getBreakpoint\n      } = _ref;\n      return React.createElement(\"div\", Object.assign({\n        className: css(styles.toolbarContent, formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)), formatBreakpointMods(alignment, styles, '', getBreakpoint(width)), className)\n      }, props), React.createElement(ToolbarContext.Consumer, null, _ref2 => {\n        let {\n          clearAllFilters: clearAllFiltersContext,\n          clearFiltersButtonText: clearFiltersButtonContext,\n          showClearFiltersButton: showClearFiltersButtonContext,\n          toolbarId: toolbarIdContext\n        } = _ref2;\n        const expandableContentId = `${toolbarId || toolbarIdContext}-expandable-content-${ToolbarContent.currentId++}`;\n        return React.createElement(ToolbarContentContext.Provider, {\n          value: {\n            expandableContentRef: this.expandableContentRef,\n            expandableContentId,\n            chipContainerRef: this.chipContainerRef\n          }\n        }, React.createElement(\"div\", {\n          className: css(styles.toolbarContentSection)\n        }, children), React.createElement(ToolbarExpandableContent, {\n          id: expandableContentId,\n          isExpanded: isExpanded,\n          expandableContentRef: this.expandableContentRef,\n          chipContainerRef: this.chipContainerRef,\n          clearAllFilters: clearAllFilters || clearAllFiltersContext,\n          showClearFiltersButton: showClearFiltersButton || showClearFiltersButtonContext,\n          clearFiltersButtonText: clearFiltersButtonText || clearFiltersButtonContext\n        }));\n      }));\n    });\n  }\n}\nToolbarContent.displayName = 'ToolbarContent';\nToolbarContent.currentId = 0;\nToolbarContent.defaultProps = {\n  isExpanded: false,\n  showClearFiltersButton: false\n};","map":{"version":3,"names":["React","styles","css","ToolbarContentContext","ToolbarContext","formatBreakpointMods","ToolbarExpandableContent","PageContext","ToolbarContent","Component","constructor","expandableContentRef","createRef","chipContainerRef","render","_a","props","className","children","isExpanded","toolbarId","visibility","visiblity","alignment","clearAllFilters","showClearFiltersButton","clearFiltersButtonText","__rest","undefined","console","warn","createElement","Consumer","_ref","width","getBreakpoint","Object","assign","toolbarContent","_ref2","clearAllFiltersContext","clearFiltersButtonContext","showClearFiltersButtonContext","toolbarIdContext","expandableContentId","currentId","Provider","value","toolbarContentSection","id","displayName","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Toolbar\\ToolbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarContentContext, ToolbarContext } from './ToolbarUtils';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { ToolbarExpandableContent } from './ToolbarExpandableContent';\nimport { PageContext } from '../Page/PageContext';\n\nexport interface ToolbarContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** Classes applied to root element of the data toolbar content row */\n  className?: string;\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** @deprecated prop misspelled */\n  visiblity?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Alignment at various breakpoints. */\n  alignment?: {\n    default?: 'alignRight' | 'alignLeft';\n    md?: 'alignRight' | 'alignLeft';\n    lg?: 'alignRight' | 'alignLeft';\n    xl?: 'alignRight' | 'alignLeft';\n    '2xl'?: 'alignRight' | 'alignLeft';\n  };\n  /** Content to be rendered as children of the content row */\n  children?: React.ReactNode;\n  /** Flag indicating if a data toolbar toggle group's expandable content is expanded */\n  isExpanded?: boolean;\n  /** Optional callback for clearing all filters in the toolbar */\n  clearAllFilters?: () => void;\n  /** Flag indicating that the clear all filters button should be visible */\n  showClearFiltersButton?: boolean;\n  /** Text to display in the clear all filters button */\n  clearFiltersButtonText?: string;\n  /** Id of the parent Toolbar component */\n  toolbarId?: string;\n}\n\nexport class ToolbarContent extends React.Component<ToolbarContentProps> {\n  static displayName = 'ToolbarContent';\n  private expandableContentRef = React.createRef<HTMLDivElement>();\n  private chipContainerRef = React.createRef<HTMLDivElement>();\n  private static currentId = 0;\n\n  static defaultProps: ToolbarContentProps = {\n    isExpanded: false,\n    showClearFiltersButton: false\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      isExpanded,\n      toolbarId,\n      visibility,\n      visiblity,\n      alignment,\n      clearAllFilters,\n      showClearFiltersButton,\n      clearFiltersButtonText,\n      ...props\n    } = this.props;\n\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The ToolbarContent visiblity prop has been deprecated. ' +\n          'Please use the correctly spelled visibility prop instead.'\n      );\n    }\n\n    return (\n      <PageContext.Consumer>\n        {({ width, getBreakpoint }) => (\n          <div\n            className={css(\n              styles.toolbarContent,\n              formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(alignment, styles, '', getBreakpoint(width)),\n              className\n            )}\n            {...props}\n          >\n            <ToolbarContext.Consumer>\n              {({\n                clearAllFilters: clearAllFiltersContext,\n                clearFiltersButtonText: clearFiltersButtonContext,\n                showClearFiltersButton: showClearFiltersButtonContext,\n                toolbarId: toolbarIdContext\n              }) => {\n                const expandableContentId = `${toolbarId ||\n                  toolbarIdContext}-expandable-content-${ToolbarContent.currentId++}`;\n                return (\n                  <ToolbarContentContext.Provider\n                    value={{\n                      expandableContentRef: this.expandableContentRef,\n                      expandableContentId,\n                      chipContainerRef: this.chipContainerRef\n                    }}\n                  >\n                    <div className={css(styles.toolbarContentSection)}>{children}</div>\n                    <ToolbarExpandableContent\n                      id={expandableContentId}\n                      isExpanded={isExpanded}\n                      expandableContentRef={this.expandableContentRef}\n                      chipContainerRef={this.chipContainerRef}\n                      clearAllFilters={clearAllFilters || clearAllFiltersContext}\n                      showClearFiltersButton={showClearFiltersButton || showClearFiltersButtonContext}\n                      clearFiltersButtonText={clearFiltersButtonText || clearFiltersButtonContext}\n                    />\n                  </ToolbarContentContext.Provider>\n                );\n              }}\n            </ToolbarContext.Consumer>\n          </div>\n        )}\n      </PageContext.Consumer>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}