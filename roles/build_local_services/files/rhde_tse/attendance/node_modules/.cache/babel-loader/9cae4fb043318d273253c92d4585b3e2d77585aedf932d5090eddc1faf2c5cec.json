{"ast":null,"code":"import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { WizardDrawerWrapper } from './WizardDrawerWrapper';\nimport { Drawer, DrawerContent } from '../Drawer';\nexport const WizardBody = _ref => {\n  let {\n    children,\n    hasNoBodyPadding = false,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    mainComponent = 'div',\n    hasDrawer,\n    isDrawerExpanded,\n    onExpandDrawer,\n    activeStep\n  } = _ref;\n  const MainComponent = mainComponent;\n  return React.createElement(MainComponent, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    className: css(styles.wizardMain)\n  }, React.createElement(WizardDrawerWrapper, {\n    hasDrawer: hasDrawer && activeStep.drawerPanelContent,\n    wrapper: children => React.createElement(Drawer, {\n      isInline: true,\n      isExpanded: isDrawerExpanded,\n      onExpand: onExpandDrawer\n    }, React.createElement(DrawerContent, {\n      panelContent: activeStep.drawerPanelContent\n    }, children))\n  }, React.createElement(\"div\", {\n    className: css(styles.wizardMainBody, hasNoBodyPadding && styles.modifiers.noPadding)\n  }, children)));\n};\nWizardBody.displayName = 'WizardBody';","map":{"version":3,"names":["React","styles","css","WizardDrawerWrapper","Drawer","DrawerContent","WizardBody","_ref","children","hasNoBodyPadding","ariaLabel","ariaLabelledBy","mainComponent","hasDrawer","isDrawerExpanded","onExpandDrawer","activeStep","MainComponent","createElement","className","wizardMain","drawerPanelContent","wrapper","isInline","isExpanded","onExpand","panelContent","wizardMainBody","modifiers","noPadding","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Wizard\\WizardBody.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { WizardDrawerWrapper } from './WizardDrawerWrapper';\nimport { Drawer, DrawerContent } from '../Drawer';\nimport { WizardStep } from './Wizard';\n\nexport interface WizardBodyProps {\n  /** Anything that can be rendered in the Wizard body */\n  children: any;\n  /** Set to true to remove the default body padding */\n  hasNoBodyPadding: boolean;\n  /** An aria-label to use for the main element */\n  'aria-label'?: string;\n  /** Sets the aria-labelledby attribute for the main element */\n  'aria-labelledby': string;\n  /** Component used as the primary content container */\n  mainComponent?: React.ElementType;\n  /** The currently active WizardStep */\n  activeStep: WizardStep;\n  hasDrawer?: boolean;\n  /** Flag indicating the wizard drawer is expanded */\n  isDrawerExpanded?: boolean;\n  /** Callback function for when the drawer is toggled */\n  onExpandDrawer?: () => void;\n}\n\nexport const WizardBody: React.FunctionComponent<WizardBodyProps> = ({\n  children,\n  hasNoBodyPadding = false,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  mainComponent = 'div',\n  hasDrawer,\n  isDrawerExpanded,\n  onExpandDrawer,\n  activeStep\n}: WizardBodyProps) => {\n  const MainComponent = mainComponent;\n  return (\n    <MainComponent aria-label={ariaLabel} aria-labelledby={ariaLabelledBy} className={css(styles.wizardMain)}>\n      <WizardDrawerWrapper\n        hasDrawer={hasDrawer && activeStep.drawerPanelContent}\n        wrapper={(children: React.ReactNode) => (\n          <Drawer isInline isExpanded={isDrawerExpanded} onExpand={onExpandDrawer}>\n            <DrawerContent panelContent={activeStep.drawerPanelContent}>{children}</DrawerContent>\n          </Drawer>\n        )}\n      >\n        <div className={css(styles.wizardMainBody, hasNoBodyPadding && styles.modifiers.noPadding)}>{children}</div>\n      </WizardDrawerWrapper>\n    </MainComponent>\n  );\n};\nWizardBody.displayName = 'WizardBody';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,MAAM,EAAEC,aAAa,QAAQ,WAAW;AAuBjD,OAAO,MAAMC,UAAU,GAA6CC,IAAA,IAU9C;EAAA,IAV+C;IACnEC,QAAQ;IACRC,gBAAgB,GAAG,KAAK;IACxB,YAAY,EAAEC,SAAS;IACvB,iBAAiB,EAAEC,cAAc;IACjCC,aAAa,GAAG,KAAK;IACrBC,SAAS;IACTC,gBAAgB;IAChBC,cAAc;IACdC;EAAU,CACM,GAAAT,IAAA;EAChB,MAAMU,aAAa,GAAGL,aAAa;EACnC,OACEZ,KAAA,CAAAkB,aAAA,CAACD,aAAa;IAAA,cAAaP,SAAS;IAAA,mBAAmBC,cAAc;IAAEQ,SAAS,EAAEjB,GAAG,CAACD,MAAM,CAACmB,UAAU;EAAC,GACtGpB,KAAA,CAAAkB,aAAA,CAACf,mBAAmB;IAClBU,SAAS,EAAEA,SAAS,IAAIG,UAAU,CAACK,kBAAkB;IACrDC,OAAO,EAAGd,QAAyB,IACjCR,KAAA,CAAAkB,aAAA,CAACd,MAAM;MAACmB,QAAQ;MAACC,UAAU,EAAEV,gBAAgB;MAAEW,QAAQ,EAAEV;IAAc,GACrEf,KAAA,CAAAkB,aAAA,CAACb,aAAa;MAACqB,YAAY,EAAEV,UAAU,CAACK;IAAkB,GAAGb,QAAQ,CAAiB;EAEzF,GAEDR,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAEjB,GAAG,CAACD,MAAM,CAAC0B,cAAc,EAAElB,gBAAgB,IAAIR,MAAM,CAAC2B,SAAS,CAACC,SAAS;EAAC,GAAGrB,QAAQ,CAAO,CACxF,CACR;AAEpB,CAAC;AACDF,UAAU,CAACwB,WAAW,GAAG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}