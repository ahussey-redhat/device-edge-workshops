{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { Spinner } from '../Spinner';\nexport class DropdownToggleCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      var _a, _b;\n      (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, event.target.checked, event);\n    };\n    this.calculateChecked = () => {\n      const {\n        isChecked,\n        checked\n      } = this.props;\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n      return checked;\n    };\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        isValid,\n        isDisabled,\n        isChecked,\n        isInProgress = false,\n        defaultProgressAriaLabel,\n        defaultProgressAriaValueText = 'Loading...',\n        children,\n        ouiaId,\n        ouiaSafe,\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange,\n        checked\n      } = _a,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"isInProgress\", \"defaultProgressAriaLabel\", \"defaultProgressAriaValueText\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n    const spinner = React.createElement(Spinner, {\n      diameter: \"1em\",\n      isSVG: true,\n      \"aria-valuetext\": defaultProgressAriaValueText,\n      \"aria-live\": \"polite\",\n      \"aria-label\": defaultProgressAriaLabel\n    });\n    const text = children && React.createElement(\"span\", {\n      className: css(styles.dropdownToggleText, className),\n      \"aria-hidden\": \"true\",\n      id: `${props.id}-text`\n    }, children);\n    return React.createElement(\"label\", {\n      className: css(styles.dropdownToggleCheck, isInProgress && styles.modifiers.inProgress, className),\n      htmlFor: props.id\n    }, React.createElement(\"input\", Object.assign({}, props, this.calculateChecked() !== undefined && {\n      onChange: this.handleChange\n    }, {\n      type: \"checkbox\",\n      ref: elem => elem && (elem.indeterminate = isChecked === null),\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: this.calculateChecked()\n    }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), isInProgress && React.createElement(\"span\", {\n      className: css(styles.dropdownToggleProgress, className)\n    }, spinner), text);\n  }\n}\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  onChange: () => undefined\n};","map":{"version":3,"names":["React","styles","css","getOUIAProps","getDefaultOUIAId","Spinner","DropdownToggleCheckbox","Component","constructor","props","handleChange","event","_b","_a","onChange","call","target","checked","calculateChecked","isChecked","undefined","state","ouiaStateId","displayName","render","className","isValid","isDisabled","isInProgress","defaultProgressAriaLabel","defaultProgressAriaValueText","children","ouiaId","ouiaSafe","__rest","spinner","createElement","diameter","isSVG","text","dropdownToggleText","id","dropdownToggleCheck","modifiers","inProgress","htmlFor","Object","assign","type","ref","elem","indeterminate","disabled","dropdownToggleProgress","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Dropdown\\DropdownToggleCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { Spinner } from '../Spinner';\n\nexport interface DropdownToggleCheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'checked'>,\n    OUIAProps {\n  /** Additional classes added to the DropdownToggleCheckbox */\n  className?: string;\n  /** Flag to show if the checkbox selection is valid or invalid */\n  isValid?: boolean;\n  /** Flag to show if the checkbox is disabled */\n  isDisabled?: boolean;\n  /** Flag to show if the checkbox is checked */\n  isChecked?: boolean | null;\n  /** @beta Flag to show if the checkbox is in progress */\n  isInProgress?: boolean | null;\n  /** Alternate Flag to show if the checkbox is checked */\n  checked?: boolean | null;\n  /** A callback for when the checkbox selection changes */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Element to be rendered inside the <span> */\n  children?: React.ReactNode;\n  /** Id of the checkbox */\n  id: string;\n  /** Aria-label of the checkbox */\n  'aria-label': string;\n  /** @beta Text describing current loading status or progress */\n  defaultProgressAriaValueText?: string;\n  /** @beta Aria-label for the default progress icon to describe what is loading */\n  defaultProgressAriaLabel?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport class DropdownToggleCheckbox extends React.Component<DropdownToggleCheckboxProps, { ouiaStateId: string }> {\n  static displayName = 'DropdownToggleCheckbox';\n  static defaultProps: PickOptional<DropdownToggleCheckboxProps> = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined as any\n  };\n\n  constructor(props: DropdownToggleCheckboxProps) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange?.((event.target as HTMLInputElement).checked, event);\n  };\n\n  calculateChecked = () => {\n    const { isChecked, checked } = this.props;\n    if (isChecked === null) {\n      // return false here and the indeterminate state will be set to true through the ref\n      return false;\n    } else if (isChecked !== undefined) {\n      return isChecked;\n    }\n    return checked;\n  };\n\n  render() {\n    const {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      isInProgress = false,\n      defaultProgressAriaLabel,\n      defaultProgressAriaValueText = 'Loading...',\n      children,\n      ouiaId,\n      ouiaSafe,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      checked,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...props\n    } = this.props;\n\n    const spinner = (\n      <Spinner\n        diameter=\"1em\"\n        isSVG\n        aria-valuetext={defaultProgressAriaValueText}\n        aria-live=\"polite\"\n        aria-label={defaultProgressAriaLabel}\n      />\n    );\n\n    const text = children && (\n      <span className={css(styles.dropdownToggleText, className)} aria-hidden=\"true\" id={`${props.id}-text`}>\n        {children}\n      </span>\n    );\n    return (\n      <label\n        className={css(styles.dropdownToggleCheck, isInProgress && styles.modifiers.inProgress, className)}\n        htmlFor={props.id}\n      >\n        <input\n          {...props}\n          {...(this.calculateChecked() !== undefined && { onChange: this.handleChange })}\n          type=\"checkbox\"\n          ref={elem => elem && (elem.indeterminate = isChecked === null)}\n          aria-invalid={!isValid}\n          disabled={isDisabled}\n          checked={this.calculateChecked()}\n          {...getOUIAProps(\n            DropdownToggleCheckbox.displayName,\n            ouiaId !== undefined ? ouiaId : this.state.ouiaStateId,\n            ouiaSafe\n          )}\n        />\n        {isInProgress && <span className={css(styles.dropdownToggleProgress, className)}>{spinner}</span>}\n        {text}\n      </label>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,2DAA2D;AAC9E,SAASC,GAAG,QAAQ,0BAA0B;AAE9C,SAASC,YAAY,EAAaC,gBAAgB,QAAQ,eAAe;AACzE,SAASC,OAAO,QAAQ,YAAY;AAmCpC,OAAM,MAAOC,sBAAuB,SAAQN,KAAK,CAACO,SAA+D;EAS/GC,YAAYC,KAAkC;IAC5C,KAAK,CAACA,KAAK,CAAC;IAMd,KAAAC,YAAY,GAAIC,KAAwC,IAAI;;MAC1D,CAAAC,EAAA,IAAAC,EAAA,OAAI,CAACJ,KAAK,EAACK,QAAQ,cAAAF,EAAA,uBAAAA,EAAA,CAAAG,IAAA,CAAAF,EAAA,EAAIF,KAAK,CAACK,MAA2B,CAACC,OAAO,EAAEN,KAAK,CAAC;IAC1E,CAAC;IAED,KAAAO,gBAAgB,GAAG,MAAK;MACtB,MAAM;QAAEC,SAAS;QAAEF;MAAO,CAAE,GAAG,IAAI,CAACR,KAAK;MACzC,IAAIU,SAAS,KAAK,IAAI,EAAE;QACtB;QACA,OAAO,KAAK;OACb,MAAM,IAAIA,SAAS,KAAKC,SAAS,EAAE;QAClC,OAAOD,SAAS;;MAElB,OAAOF,OAAO;IAChB,CAAC;IAlBC,IAAI,CAACI,KAAK,GAAG;MACXC,WAAW,EAAElB,gBAAgB,CAACE,sBAAsB,CAACiB,WAAW;KACjE;EACH;EAiBAC,MAAMA,CAAA;IACJ,MAAMX,EAAA,GAgBF,IAAI,CAACJ,KAAK;MAhBR;QACJgB,SAAS;QACTC,OAAO;QACPC,UAAU;QACVR,SAAS;QACTS,YAAY,GAAG,KAAK;QACpBC,wBAAwB;QACxBC,4BAA4B,GAAG,YAAY;QAC3CC,QAAQ;QACRC,MAAM;QACNC,QAAQ;QACR;QACAnB,QAAQ;QACRG;MAAO,IAAAJ,EAGK;MAFZ;MACGJ,KAAK,GAAAyB,MAAA,CAAArB,EAAA,EAfJ,wLAgBL,CAAa;IAEd,MAAMsB,OAAO,GACXnC,KAAA,CAAAoC,aAAA,CAAC/B,OAAO;MACNgC,QAAQ,EAAC,KAAK;MACdC,KAAK;MAAA,kBACWR,4BAA4B;MAAA,aAClC,QAAQ;MAAA,cACND;IAAwB,EAEvC;IAED,MAAMU,IAAI,GAAGR,QAAQ,IACnB/B,KAAA,CAAAoC,aAAA;MAAMX,SAAS,EAAEvB,GAAG,CAACD,MAAM,CAACuC,kBAAkB,EAAEf,SAAS,CAAC;MAAA,eAAc,MAAM;MAACgB,EAAE,EAAE,GAAGhC,KAAK,CAACgC,EAAE;IAAO,GAClGV,QAAQ,CAEZ;IACD,OACE/B,KAAA,CAAAoC,aAAA;MACEX,SAAS,EAAEvB,GAAG,CAACD,MAAM,CAACyC,mBAAmB,EAAEd,YAAY,IAAI3B,MAAM,CAAC0C,SAAS,CAACC,UAAU,EAAEnB,SAAS,CAAC;MAClGoB,OAAO,EAAEpC,KAAK,CAACgC;IAAE,GAEjBzC,KAAA,CAAAoC,aAAA,UAAAU,MAAA,CAAAC,MAAA,KACMtC,KAAK,EACJ,IAAI,CAACS,gBAAgB,EAAE,KAAKE,SAAS,IAAI;MAAEN,QAAQ,EAAE,IAAI,CAACJ;IAAY,CAAE,EAAC;MAC9EsC,IAAI,EAAC,UAAU;MACfC,GAAG,EAAEC,IAAI,IAAIA,IAAI,KAAKA,IAAI,CAACC,aAAa,GAAGhC,SAAS,KAAK,IAAI,CAAC;MAAA,gBAChD,CAACO,OAAO;MACtB0B,QAAQ,EAAEzB,UAAU;MACpBV,OAAO,EAAE,IAAI,CAACC,gBAAgB;IAAE,GAC5Bf,YAAY,CACdG,sBAAsB,CAACiB,WAAW,EAClCS,MAAM,KAAKZ,SAAS,GAAGY,MAAM,GAAG,IAAI,CAACX,KAAK,CAACC,WAAW,EACtDW,QAAQ,CACT,EACD,EACDL,YAAY,IAAI5B,KAAA,CAAAoC,aAAA;MAAMX,SAAS,EAAEvB,GAAG,CAACD,MAAM,CAACoD,sBAAsB,EAAE5B,SAAS;IAAC,GAAGU,OAAO,CAAQ,EAChGI,IAAI,CACC;EAEZ;;AAvFOjC,sBAAA,CAAAiB,WAAW,GAAG,wBAAwB;AACtCjB,sBAAA,CAAAgD,YAAY,GAA8C;EAC/D7B,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE,KAAK;EACjBb,QAAQ,EAAEA,CAAA,KAAMM;CACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}