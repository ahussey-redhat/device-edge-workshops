{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_notification_drawer__list_item_header_title_max_lines';\nimport { Tooltip } from '../Tooltip';\nexport const variantIcons = {\n  success: CheckCircleIcon,\n  danger: ExclamationCircleIcon,\n  warning: ExclamationTriangleIcon,\n  info: InfoCircleIcon,\n  default: BellIcon\n};\nexport const NotificationDrawerListItemHeader = _a => {\n  var {\n      children,\n      className = '',\n      icon = null,\n      srTitle,\n      title,\n      variant = 'default',\n      truncateTitle = 0,\n      tooltipPosition,\n      headingLevel: HeadingLevel = 'h2'\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"icon\", \"srTitle\", \"title\", \"variant\", \"truncateTitle\", \"tooltipPosition\", \"headingLevel\"]);\n  const titleRef = React.useRef(null);\n  const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const Icon = variantIcons[variant];\n  const Title = React.createElement(HeadingLevel, Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.notificationDrawerListItemHeaderTitle, truncateTitle && styles.modifiers.truncate)\n  }), srTitle && React.createElement(\"span\", {\n    className: css(a11yStyles.screenReader)\n  }, srTitle), title);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerListItemHeader, className)\n  }), React.createElement(\"span\", {\n    className: css(styles.notificationDrawerListItemHeaderIcon)\n  }, icon ? icon : React.createElement(Icon, null)), isTooltipVisible ? React.createElement(Tooltip, {\n    content: title,\n    position: tooltipPosition\n  }, Title) : Title), children && React.createElement(\"div\", {\n    className: css(styles.notificationDrawerListItemAction)\n  }, children));\n};\nNotificationDrawerListItemHeader.displayName = 'NotificationDrawerListItemHeader';","map":{"version":3,"names":["React","BellIcon","CheckCircleIcon","ExclamationCircleIcon","ExclamationTriangleIcon","InfoCircleIcon","css","styles","a11yStyles","maxLines","Tooltip","variantIcons","success","danger","warning","info","default","NotificationDrawerListItemHeader","_a","children","className","icon","srTitle","title","variant","truncateTitle","tooltipPosition","headingLevel","HeadingLevel","props","__rest","titleRef","useRef","isTooltipVisible","setIsTooltipVisible","useState","useEffect","current","style","setProperty","name","toString","showTooltip","offsetHeight","scrollHeight","Icon","Title","createElement","Object","assign","tabIndex","ref","notificationDrawerListItemHeaderTitle","modifiers","truncate","screenReader","Fragment","notificationDrawerListItemHeader","notificationDrawerListItemHeaderIcon","content","position","notificationDrawerListItemAction","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\NotificationDrawer\\NotificationDrawerListItemHeader.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\n\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_notification_drawer__list_item_header_title_max_lines';\n\nimport { Tooltip, TooltipPosition } from '../Tooltip';\n\nexport const variantIcons = {\n  success: CheckCircleIcon,\n  danger: ExclamationCircleIcon,\n  warning: ExclamationTriangleIcon,\n  info: InfoCircleIcon,\n  default: BellIcon\n};\n\nexport interface NotificationDrawerListItemHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /**  Actions rendered inside the notification drawer list item header */\n  children?: React.ReactNode;\n  /**  Additional classes for notification drawer list item header. */\n  className?: string;\n  /**  Add custom icon for notification drawer list item header */\n  icon?: React.ReactNode;\n  /**  Notification drawer list item header screen reader title */\n  srTitle?: string;\n  /**  Notification drawer list item title */\n  title: string;\n  /**  Variant indicates the severity level */\n  variant?: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  /** Truncate title to number of lines */\n  truncateTitle?: number;\n  /** Position of the tooltip which is displayed if text is truncated */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Sets the heading level to use for the list item header title. Default is h2. */\n  headingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nexport const NotificationDrawerListItemHeader: React.FunctionComponent<NotificationDrawerListItemHeaderProps> = ({\n  children,\n  className = '',\n  icon = null,\n  srTitle,\n  title,\n  variant = 'default',\n  truncateTitle = 0,\n  tooltipPosition,\n  headingLevel: HeadingLevel = 'h2',\n  ...props\n}: NotificationDrawerListItemHeaderProps) => {\n  const titleRef = React.useRef(null);\n  const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const Icon = variantIcons[variant];\n  const Title = (\n    <HeadingLevel\n      {...(isTooltipVisible && { tabIndex: 0 })}\n      ref={titleRef}\n      className={css(styles.notificationDrawerListItemHeaderTitle, truncateTitle && styles.modifiers.truncate)}\n    >\n      {srTitle && <span className={css(a11yStyles.screenReader)}>{srTitle}</span>}\n      {title}\n    </HeadingLevel>\n  );\n\n  return (\n    <React.Fragment>\n      <div {...props} className={css(styles.notificationDrawerListItemHeader, className)}>\n        <span className={css(styles.notificationDrawerListItemHeaderIcon)}>{icon ? icon : <Icon />}</span>\n        {isTooltipVisible ? (\n          <Tooltip content={title} position={tooltipPosition}>\n            {Title}\n          </Tooltip>\n        ) : (\n          Title\n        )}\n      </div>\n      {children && <div className={css(styles.notificationDrawerListItemAction)}>{children}</div>}\n    </React.Fragment>\n  );\n};\nNotificationDrawerListItemHeader.displayName = 'NotificationDrawerListItemHeader';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}