{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport class SimpleListItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        isCurrent,\n        isActive,\n        className,\n        component: Component,\n        componentClassName,\n        componentProps,\n        onClick,\n        type,\n        href,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        itemId\n      } = _a,\n      props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n    return React.createElement(SimpleListContext.Consumer, null, _ref => {\n      let {\n        currentRef,\n        updateCurrentRef,\n        isControlled\n      } = _ref;\n      const isButton = Component === 'button';\n      const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n      const additionalComponentProps = isButton ? {\n        type\n      } : {\n        tabIndex: 0,\n        href\n      };\n      return React.createElement(\"li\", Object.assign({\n        className: css(className)\n      }, props), React.createElement(Component, Object.assign({\n        className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName),\n        onClick: evt => {\n          onClick(evt);\n          updateCurrentRef(this.ref, this.props);\n        },\n        ref: this.ref\n      }, componentProps, additionalComponentProps), children));\n    });\n  }\n}\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n  children: null,\n  className: '',\n  isActive: false,\n  isCurrent: false,\n  component: 'button',\n  componentClassName: '',\n  type: 'button',\n  href: '',\n  onClick: () => {}\n};","map":{"version":3,"names":["React","css","styles","SimpleListContext","SimpleListItem","Component","constructor","ref","createRef","render","_a","props","children","isCurrent","isActive","className","component","componentClassName","componentProps","onClick","type","href","itemId","__rest","createElement","Consumer","_ref","currentRef","updateCurrentRef","isControlled","isButton","isCurrentItem","current","additionalComponentProps","tabIndex","Object","assign","simpleListItemLink","modifiers","evt","displayName","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\SimpleList\\SimpleListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\n\nexport interface SimpleListItemProps {\n  /** id for the item. */\n  itemId?: number | string;\n  /** Content rendered inside the SimpleList item */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList <li> */\n  className?: string;\n  /** Component type of the SimpleList item */\n  component?: 'button' | 'a';\n  /** Additional classes added to the SimpleList <a> or <button> */\n  componentClassName?: string;\n  /** Additional props added to the SimpleList <a> or <button> */\n  componentProps?: any;\n  /** Indicates if the link is current/highlighted */\n  isActive?: boolean;\n  /** @deprecated please use isActive instead */\n  isCurrent?: boolean;\n  /** OnClick callback for the SimpleList item */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n  /** Type of button SimpleList item */\n  type?: 'button' | 'submit' | 'reset';\n  /** Default hyperlink location */\n  href?: string;\n}\n\nexport class SimpleListItem extends React.Component<SimpleListItemProps> {\n  static displayName = 'SimpleListItem';\n  ref = React.createRef<any>();\n  static defaultProps: SimpleListItemProps = {\n    children: null,\n    className: '',\n    isActive: false,\n    isCurrent: false,\n    component: 'button',\n    componentClassName: '',\n    type: 'button',\n    href: '',\n    onClick: () => {}\n  };\n\n  render() {\n    const {\n      children,\n      isCurrent,\n      isActive,\n      className,\n      component: Component,\n      componentClassName,\n      componentProps,\n      onClick,\n      type,\n      href,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      itemId,\n      ...props\n    } = this.props;\n    return (\n      <SimpleListContext.Consumer>\n        {({ currentRef, updateCurrentRef, isControlled }) => {\n          const isButton = Component === 'button';\n          const isCurrentItem =\n            this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n\n          const additionalComponentProps = isButton\n            ? {\n                type\n              }\n            : {\n                tabIndex: 0,\n                href\n              };\n\n          return (\n            <li className={css(className)} {...props}>\n              <Component\n                className={css(\n                  styles.simpleListItemLink,\n                  isCurrentItem && styles.modifiers.current,\n                  componentClassName\n                )}\n                onClick={(evt: React.MouseEvent) => {\n                  onClick(evt);\n                  updateCurrentRef(this.ref, this.props);\n                }}\n                ref={this.ref}\n                {...componentProps}\n                {...additionalComponentProps}\n              >\n                {children}\n              </Component>\n            </li>\n          );\n        }}\n      </SimpleListContext.Consumer>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gEAAgE;AACnF,SAASC,iBAAiB,QAAQ,cAAc;AA2BhD,OAAM,MAAOC,cAAe,SAAQJ,KAAK,CAACK,SAA8B;EAAxEC,YAAA;;IAEE,KAAAC,GAAG,GAAGP,KAAK,CAACQ,SAAS,EAAO;EAqE9B;EAxDEC,MAAMA,CAAA;IACJ,MAAMC,EAAA,GAcF,IAAI,CAACC,KAAK;MAdR;QACJC,QAAQ;QACRC,SAAS;QACTC,QAAQ;QACRC,SAAS;QACTC,SAAS,EAAEX,SAAS;QACpBY,kBAAkB;QAClBC,cAAc;QACdC,OAAO;QACPC,IAAI;QACJC,IAAI;QACJ;QACAC;MAAM,IAAAZ,EAEM;MADTC,KAAK,GAAAY,MAAA,CAAAb,EAAA,EAbJ,4IAcL,CAAa;IACd,OACEV,KAAA,CAAAwB,aAAA,CAACrB,iBAAiB,CAACsB,QAAQ,QACxBC,IAAA,IAAmD;MAAA,IAAlD;QAAEC,UAAU;QAAEC,gBAAgB;QAAEC;MAAY,CAAE,GAAAH,IAAA;MAC9C,MAAMI,QAAQ,GAAGzB,SAAS,KAAK,QAAQ;MACvC,MAAM0B,aAAa,GACjB,IAAI,CAACxB,GAAG,IAAIoB,UAAU,IAAIE,YAAY,GAAGF,UAAU,CAACK,OAAO,KAAK,IAAI,CAACzB,GAAG,CAACyB,OAAO,GAAGlB,QAAQ,IAAID,SAAS;MAE1G,MAAMoB,wBAAwB,GAAGH,QAAQ,GACrC;QACEV;OACD,GACD;QACEc,QAAQ,EAAE,CAAC;QACXb;OACD;MAEL,OACErB,KAAA,CAAAwB,aAAA,OAAAW,MAAA,CAAAC,MAAA;QAAIrB,SAAS,EAAEd,GAAG,CAACc,SAAS;MAAC,GAAMJ,KAAK,GACtCX,KAAA,CAAAwB,aAAA,CAACnB,SAAS,EAAA8B,MAAA,CAAAC,MAAA;QACRrB,SAAS,EAAEd,GAAG,CACZC,MAAM,CAACmC,kBAAkB,EACzBN,aAAa,IAAI7B,MAAM,CAACoC,SAAS,CAACN,OAAO,EACzCf,kBAAkB,CACnB;QACDE,OAAO,EAAGoB,GAAqB,IAAI;UACjCpB,OAAO,CAACoB,GAAG,CAAC;UACZX,gBAAgB,CAAC,IAAI,CAACrB,GAAG,EAAE,IAAI,CAACI,KAAK,CAAC;QACxC,CAAC;QACDJ,GAAG,EAAE,IAAI,CAACA;MAAG,GACTW,cAAc,EACde,wBAAwB,GAE3BrB,QAAQ,CACC,CACT;IAET,CAAC,CAC0B;EAEjC;;AArEOR,cAAA,CAAAoC,WAAW,GAAG,gBAAgB;AAE9BpC,cAAA,CAAAqC,YAAY,GAAwB;EACzC7B,QAAQ,EAAE,IAAI;EACdG,SAAS,EAAE,EAAE;EACbD,QAAQ,EAAE,KAAK;EACfD,SAAS,EAAE,KAAK;EAChBG,SAAS,EAAE,QAAQ;EACnBC,kBAAkB,EAAE,EAAE;EACtBG,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,EAAE;EACRF,OAAO,EAAEA,CAAA,KAAK,CAAE;CACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}