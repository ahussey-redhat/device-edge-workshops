{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nexport const SimpleListContext = React.createContext({});\nexport class SimpleList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentRef: null\n    };\n    this.handleCurrentUpdate = (newCurrentRef, itemProps) => {\n      this.setState({\n        currentRef: newCurrentRef\n      });\n      const {\n        onSelect\n      } = this.props;\n      onSelect && onSelect(newCurrentRef, itemProps);\n    };\n  }\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n      {\n        children,\n        className,\n        onSelect,\n        isControlled,\n        'aria-label': ariaLabel\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"onSelect\", \"isControlled\", 'aria-label']);\n    let isGrouped = false;\n    if (children) {\n      isGrouped = React.Children.toArray(children)[0].type === SimpleListGroup;\n    }\n    return React.createElement(SimpleListContext.Provider, {\n      value: {\n        currentRef: this.state.currentRef,\n        updateCurrentRef: this.handleCurrentUpdate,\n        isControlled\n      }\n    }, React.createElement(\"div\", Object.assign({\n      className: css(styles.simpleList, className)\n    }, props), isGrouped && children, !isGrouped && React.createElement(\"ul\", {\n      \"aria-label\": ariaLabel\n    }, children)));\n  }\n}\nSimpleList.displayName = 'SimpleList';\nSimpleList.defaultProps = {\n  children: null,\n  className: '',\n  isControlled: true\n};","map":{"version":3,"names":["React","css","styles","SimpleListGroup","SimpleListContext","createContext","SimpleList","Component","constructor","state","currentRef","handleCurrentUpdate","newCurrentRef","itemProps","setState","onSelect","props","render","_a","children","className","isControlled","ariaLabel","__rest","isGrouped","Children","toArray","type","createElement","Provider","value","updateCurrentRef","Object","assign","simpleList","displayName","defaultProps"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\SimpleList\\SimpleList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nimport { SimpleListItemProps } from './SimpleListItem';\n\nexport interface SimpleListProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onSelect'> {\n  /** Content rendered inside the SimpleList */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList container */\n  className?: string;\n  /** Callback when an item is selected */\n  onSelect?: (\n    ref: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  /** Indicates whether component is controlled by its internal state */\n  isControlled?: boolean;\n  /** aria-label for the <ul> element that wraps the SimpleList items. */\n  'aria-label'?: string;\n}\n\nexport interface SimpleListState {\n  /** Ref of the current SimpleListItem */\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n}\n\ninterface SimpleListContextProps {\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n  updateCurrentRef: (\n    id: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  isControlled: boolean;\n}\n\nexport const SimpleListContext = React.createContext<Partial<SimpleListContextProps>>({});\n\nexport class SimpleList extends React.Component<SimpleListProps, SimpleListState> {\n  static displayName = 'SimpleList';\n  state = {\n    currentRef: null as React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>\n  };\n\n  static defaultProps: SimpleListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isControlled: true\n  };\n\n  handleCurrentUpdate = (\n    newCurrentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    itemProps: SimpleListItemProps\n  ) => {\n    this.setState({ currentRef: newCurrentRef });\n    const { onSelect } = this.props;\n    onSelect && onSelect(newCurrentRef, itemProps);\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { children, className, onSelect, isControlled, 'aria-label': ariaLabel, ...props } = this.props;\n\n    let isGrouped = false;\n    if (children) {\n      isGrouped = (React.Children.toArray(children)[0] as React.ReactElement).type === SimpleListGroup;\n    }\n\n    return (\n      <SimpleListContext.Provider\n        value={{\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled\n        }}\n      >\n        <div className={css(styles.simpleList, className)} {...props}>\n          {isGrouped && children}\n          {!isGrouped && <ul aria-label={ariaLabel}>{children}</ul>}\n        </div>\n      </SimpleListContext.Provider>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gEAAgE;AACnF,SAASC,eAAe,QAAQ,mBAAmB;AAiCnD,OAAO,MAAMC,iBAAiB,GAAGJ,KAAK,CAACK,aAAa,CAAkC,EAAE,CAAC;AAEzF,OAAM,MAAOC,UAAW,SAAQN,KAAK,CAACO,SAA2C;EAAjFC,YAAA;;IAEE,KAAAC,KAAK,GAAG;MACNC,UAAU,EAAE;KACb;IAQD,KAAAC,mBAAmB,GAAG,CACpBC,aAAsF,EACtFC,SAA8B,KAC5B;MACF,IAAI,CAACC,QAAQ,CAAC;QAAEJ,UAAU,EAAEE;MAAa,CAAE,CAAC;MAC5C,MAAM;QAAEG;MAAQ,CAAE,GAAG,IAAI,CAACC,KAAK;MAC/BD,QAAQ,IAAIA,QAAQ,CAACH,aAAa,EAAEC,SAAS,CAAC;IAChD,CAAC;EA0BH;EAxBEI,MAAMA,CAAA;IACJ;IACA,MAAMC,EAAA,GAAqF,IAAI,CAACF,KAAK;MAA/F;QAAEG,QAAQ;QAAEC,SAAS;QAAEL,QAAQ;QAAEM,YAAY;QAAE,YAAY,EAAEC;MAAS,IAAAJ,EAAyB;MAApBF,KAAK,GAAAO,MAAA,CAAAL,EAAA,EAAhF,mEAAkF,CAAa;IAErG,IAAIM,SAAS,GAAG,KAAK;IACrB,IAAIL,QAAQ,EAAE;MACZK,SAAS,GAAIxB,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACP,QAAQ,CAAC,CAAC,CAAC,CAAwB,CAACQ,IAAI,KAAKxB,eAAe;;IAGlG,OACEH,KAAA,CAAA4B,aAAA,CAACxB,iBAAiB,CAACyB,QAAQ;MACzBC,KAAK,EAAE;QACLpB,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU;QACjCqB,gBAAgB,EAAE,IAAI,CAACpB,mBAAmB;QAC1CU;;IACD,GAEDrB,KAAA,CAAA4B,aAAA,QAAAI,MAAA,CAAAC,MAAA;MAAKb,SAAS,EAAEnB,GAAG,CAACC,MAAM,CAACgC,UAAU,EAAEd,SAAS;IAAC,GAAMJ,KAAK,GACzDQ,SAAS,IAAIL,QAAQ,EACrB,CAACK,SAAS,IAAIxB,KAAA,CAAA4B,aAAA;MAAA,cAAgBN;IAAS,GAAGH,QAAQ,CAAM,CACrD,CACqB;EAEjC;;AA3COb,UAAA,CAAA6B,WAAW,GAAG,YAAY;AAK1B7B,UAAA,CAAA8B,YAAY,GAAoB;EACrCjB,QAAQ,EAAE,IAAuB;EACjCC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAE;CACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}