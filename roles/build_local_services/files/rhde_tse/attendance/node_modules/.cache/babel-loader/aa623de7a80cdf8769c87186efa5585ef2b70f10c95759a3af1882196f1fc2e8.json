{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport const DataListContent = _a => {\n  var {\n      className = '',\n      children = null,\n      id = '',\n      isHidden = false,\n      'aria-label': ariaLabel,\n      hasNoPadding = false,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      rowid = ''\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"id\", \"isHidden\", 'aria-label', \"hasNoPadding\", \"rowid\"]);\n  return React.createElement(\"section\", Object.assign({\n    id: id,\n    className: css(styles.dataListExpandableContent, className),\n    hidden: isHidden,\n    \"aria-label\": ariaLabel\n  }, props), React.createElement(\"div\", {\n    className: css(styles.dataListExpandableContentBody, hasNoPadding && styles.modifiers.noPadding)\n  }, children));\n};\nDataListContent.displayName = 'DataListContent';","map":{"version":3,"names":["React","css","styles","DataListContent","_a","className","children","id","isHidden","ariaLabel","hasNoPadding","rowid","props","__rest","createElement","Object","assign","dataListExpandableContent","hidden","dataListExpandableContentBody","modifiers","noPadding","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\DataList\\DataListContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\n\nexport interface DataListContentProps extends React.HTMLProps<HTMLElement> {\n  /** Content rendered inside the DataList item */\n  children?: React.ReactNode;\n  /** Additional classes added to the DataList cell */\n  className?: string;\n  /** Identify the DataListContent item */\n  id?: string;\n  /** Id for the row */\n  rowid?: string;\n  /** Flag to show if the expanded content of the DataList item is visible */\n  isHidden?: boolean;\n  /** Flag to remove padding from the expandable content */\n  hasNoPadding?: boolean;\n  /** Adds accessible text to the DataList toggle */\n  'aria-label': string;\n}\n\nexport const DataListContent: React.FunctionComponent<DataListContentProps> = ({\n  className = '',\n  children = null,\n  id = '',\n  isHidden = false,\n  'aria-label': ariaLabel,\n  hasNoPadding = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  rowid = '',\n  ...props\n}: DataListContentProps) => (\n  <section\n    id={id}\n    className={css(styles.dataListExpandableContent, className)}\n    hidden={isHidden}\n    aria-label={ariaLabel}\n    {...props}\n  >\n    <div className={css(styles.dataListExpandableContentBody, hasNoPadding && styles.modifiers.noPadding)}>\n      {children}\n    </div>\n  </section>\n);\nDataListContent.displayName = 'DataListContent';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAmB/E,OAAO,MAAMC,eAAe,GAAmDC,EAUxD,IAAI;MAVoD;MAC7EC,SAAS,GAAG,EAAE;MACdC,QAAQ,GAAG,IAAI;MACfC,EAAE,GAAG,EAAE;MACPC,QAAQ,GAAG,KAAK;MAChB,YAAY,EAAEC,SAAS;MACvBC,YAAY,GAAG,KAAK;MACpB;MACAC,KAAK,GAAG;IAAE,IAAAP,EAEW;IADlBQ,KAAK,GAAAC,MAAA,CAAAT,EAAA,EATqE,kFAU9E,CADS;EACkB,OAC1BJ,KAAA,CAAAc,aAAA,YAAAC,MAAA,CAAAC,MAAA;IACET,EAAE,EAAEA,EAAE;IACNF,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACe,yBAAyB,EAAEZ,SAAS,CAAC;IAC3Da,MAAM,EAAEV,QAAQ;IAAA,cACJC;EAAS,GACjBG,KAAK,GAETZ,KAAA,CAAAc,aAAA;IAAKT,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACiB,6BAA6B,EAAET,YAAY,IAAIR,MAAM,CAACkB,SAAS,CAACC,SAAS;EAAC,GAClGf,QAAQ,CACL,CACE;CACX;AACDH,eAAe,CAACmB,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}