{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport modalStyles from '@patternfly/react-styles/css/components/ModalBox/modal-box';\nimport { css } from '@patternfly/react-styles';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { capitalize } from '../../helpers';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nexport const isVariantIcon = icon => ['success', 'danger', 'warning', 'info', 'default'].includes(icon);\nexport const ModalBoxTitle = _a => {\n  var {\n      className = '',\n      id,\n      title,\n      titleIconVariant,\n      titleLabel = ''\n    } = _a,\n    props = __rest(_a, [\"className\", \"id\", \"title\", \"titleIconVariant\", \"titleLabel\"]);\n  const [hasTooltip, setHasTooltip] = React.useState(false);\n  const h1 = React.useRef(null);\n  const label = titleLabel || (isVariantIcon(titleIconVariant) ? `${capitalize(titleIconVariant)} alert:` : titleLabel);\n  const variantIcons = {\n    success: React.createElement(CheckCircleIcon, null),\n    danger: React.createElement(ExclamationCircleIcon, null),\n    warning: React.createElement(ExclamationTriangleIcon, null),\n    info: React.createElement(InfoCircleIcon, null),\n    default: React.createElement(BellIcon, null)\n  };\n  const CustomIcon = !isVariantIcon(titleIconVariant) && titleIconVariant;\n  useIsomorphicLayoutEffect(() => {\n    setHasTooltip(h1.current && h1.current.offsetWidth < h1.current.scrollWidth);\n  }, []);\n  const content = React.createElement(\"h1\", Object.assign({\n    id: id,\n    ref: h1,\n    className: css(modalStyles.modalBoxTitle, titleIconVariant && modalStyles.modifiers.icon, className)\n  }, props), titleIconVariant && React.createElement(\"span\", {\n    className: css(modalStyles.modalBoxTitleIcon)\n  }, isVariantIcon(titleIconVariant) ? variantIcons[titleIconVariant] : React.createElement(CustomIcon, null)), label && React.createElement(\"span\", {\n    className: css(accessibleStyles.screenReader)\n  }, label), React.createElement(\"span\", {\n    className: css(modalStyles.modalBoxTitleText)\n  }, title));\n  return hasTooltip ? React.createElement(Tooltip, {\n    content: title\n  }, content) : content;\n};\nModalBoxTitle.displayName = 'ModalBoxTitle';","map":{"version":3,"names":["React","modalStyles","css","accessibleStyles","capitalize","Tooltip","CheckCircleIcon","ExclamationCircleIcon","ExclamationTriangleIcon","InfoCircleIcon","BellIcon","useIsomorphicLayoutEffect","isVariantIcon","icon","includes","ModalBoxTitle","_a","className","id","title","titleIconVariant","titleLabel","props","__rest","hasTooltip","setHasTooltip","useState","h1","useRef","label","variantIcons","success","createElement","danger","warning","info","default","CustomIcon","current","offsetWidth","scrollWidth","content","Object","assign","ref","modalBoxTitle","modifiers","modalBoxTitleIcon","screenReader","modalBoxTitleText","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Modal\\ModalBoxTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport modalStyles from '@patternfly/react-styles/css/components/ModalBox/modal-box';\nimport { css } from '@patternfly/react-styles';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { capitalize } from '../../helpers';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\n\nexport const isVariantIcon = (icon: any): icon is string =>\n  ['success', 'danger', 'warning', 'info', 'default'].includes(icon as string);\n\nexport interface ModalBoxTitleProps {\n  /** Additional classes added to the modal box title. */\n  className?: string;\n  /** Id of the modal box title. */\n  id: string;\n  /** Content rendered inside the modal box title. */\n  title: React.ReactNode;\n  /** Optional alert icon (or other) to show before the title. When the predefined alert types\n   * are used the default styling will be automatically applied. */\n  titleIconVariant?: 'success' | 'danger' | 'warning' | 'info' | 'default' | React.ComponentType<any>;\n  /** Optional title label text for screen readers. */\n  titleLabel?: string;\n}\n\nexport const ModalBoxTitle: React.FunctionComponent<ModalBoxTitleProps> = ({\n  className = '',\n  id,\n  title,\n  titleIconVariant,\n  titleLabel = '',\n  ...props\n}: ModalBoxTitleProps) => {\n  const [hasTooltip, setHasTooltip] = React.useState(false);\n  const h1 = React.useRef<HTMLHeadingElement>(null);\n  const label = titleLabel || (isVariantIcon(titleIconVariant) ? `${capitalize(titleIconVariant)} alert:` : titleLabel);\n  const variantIcons = {\n    success: <CheckCircleIcon />,\n    danger: <ExclamationCircleIcon />,\n    warning: <ExclamationTriangleIcon />,\n    info: <InfoCircleIcon />,\n    default: <BellIcon />\n  };\n  const CustomIcon = !isVariantIcon(titleIconVariant) && titleIconVariant;\n\n  useIsomorphicLayoutEffect(() => {\n    setHasTooltip(h1.current && h1.current.offsetWidth < h1.current.scrollWidth);\n  }, []);\n\n  const content = (\n    <h1\n      id={id}\n      ref={h1}\n      className={css(modalStyles.modalBoxTitle, titleIconVariant && modalStyles.modifiers.icon, className)}\n      {...props}\n    >\n      {titleIconVariant && (\n        <span className={css(modalStyles.modalBoxTitleIcon)}>\n          {isVariantIcon(titleIconVariant) ? variantIcons[titleIconVariant] : <CustomIcon />}\n        </span>\n      )}\n      {label && <span className={css(accessibleStyles.screenReader)}>{label}</span>}\n      <span className={css(modalStyles.modalBoxTitleText)}>{title}</span>\n    </h1>\n  );\n\n  return hasTooltip ? <Tooltip content={title}>{content}</Tooltip> : content;\n};\nModalBoxTitle.displayName = 'ModalBoxTitle';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}