{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nconst variantStyle = {\n  default: '',\n  indeterminate: styles.modifiers.indeterminate,\n  warning: styles.modifiers.warning,\n  success: styles.modifiers.success,\n  error: styles.modifiers.error\n};\nexport const HelperTextItem = _a => {\n  var {\n      children,\n      className,\n      component = 'div',\n      variant = 'default',\n      icon,\n      isDynamic = false,\n      hasIcon = isDynamic,\n      id,\n      screenReaderText = `${variant} status`\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"variant\", \"icon\", \"isDynamic\", \"hasIcon\", \"id\", \"screenReaderText\"]);\n  const Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.helperTextItem, variantStyle[variant], isDynamic && styles.modifiers.dynamic, className),\n    id: id\n  }, props), icon && React.createElement(\"span\", {\n    className: css(styles.helperTextItemIcon),\n    \"aria-hidden\": true\n  }, icon), hasIcon && !icon && React.createElement(\"span\", {\n    className: css(styles.helperTextItemIcon),\n    \"aria-hidden\": true\n  }, (variant === 'default' || variant === 'indeterminate') && React.createElement(MinusIcon, null), variant === 'warning' && React.createElement(ExclamationTriangleIcon, null), variant === 'success' && React.createElement(CheckCircleIcon, null), variant === 'error' && React.createElement(ExclamationCircleIcon, null)), React.createElement(\"span\", {\n    className: css(styles.helperTextItemText)\n  }, children, isDynamic && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, \": \", screenReaderText, \";\")));\n};\nHelperTextItem.displayName = 'HelperTextItem';","map":{"version":3,"names":["React","styles","css","MinusIcon","ExclamationTriangleIcon","CheckCircleIcon","ExclamationCircleIcon","variantStyle","default","indeterminate","modifiers","warning","success","error","HelperTextItem","_a","children","className","component","variant","icon","isDynamic","hasIcon","id","screenReaderText","props","__rest","Component","createElement","Object","assign","helperTextItem","dynamic","helperTextItemIcon","helperTextItemText","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\HelperText\\HelperTextItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nexport interface HelperTextItemProps extends React.HTMLProps<HTMLDivElement | HTMLLIElement> {\n  /** Content rendered inside the helper text item. */\n  children?: React.ReactNode;\n  /** Additional classes applied to the helper text item. */\n  className?: string;\n  /** Sets the component type of the helper text item. */\n  component?: 'div' | 'li';\n  /** Variant styling of the helper text item. */\n  variant?: 'default' | 'indeterminate' | 'warning' | 'success' | 'error';\n  /** Custom icon prefixing the helper text. This property will override the default icon paired with each helper text variant. */\n  icon?: React.ReactNode;\n  /** Flag indicating the helper text item is dynamic. This prop should be used when the\n   * text content of the helper text item will never change, but the icon and styling will\n   * be dynamically updated via the `variant` prop.\n   */\n  isDynamic?: boolean;\n  /** Flag indicating the helper text should have an icon. Dynamic helper texts include icons by default while static helper texts do not. */\n  hasIcon?: boolean;\n  /** ID for the helper text item. The value of this prop can be passed into a form component's\n   * aria-describedby prop when you intend for only specific helper text items to be announced to\n   * assistive technologies.\n   */\n  id?: string;\n  /** Text that is only accessible to screen readers in order to announce the status of a helper text item.\n   * This prop can only be used when the isDynamic prop is also passed in.\n   */\n  screenReaderText?: string;\n}\n\nconst variantStyle = {\n  default: '',\n  indeterminate: styles.modifiers.indeterminate,\n  warning: styles.modifiers.warning,\n  success: styles.modifiers.success,\n  error: styles.modifiers.error\n};\n\nexport const HelperTextItem: React.FunctionComponent<HelperTextItemProps> = ({\n  children,\n  className,\n  component = 'div',\n  variant = 'default',\n  icon,\n  isDynamic = false,\n  hasIcon = isDynamic,\n  id,\n  screenReaderText = `${variant} status`,\n  ...props\n}: HelperTextItemProps) => {\n  const Component = component as any;\n  return (\n    <Component\n      className={css(styles.helperTextItem, variantStyle[variant], isDynamic && styles.modifiers.dynamic, className)}\n      id={id}\n      {...props}\n    >\n      {icon && (\n        <span className={css(styles.helperTextItemIcon)} aria-hidden>\n          {icon}\n        </span>\n      )}\n      {hasIcon && !icon && (\n        <span className={css(styles.helperTextItemIcon)} aria-hidden>\n          {(variant === 'default' || variant === 'indeterminate') && <MinusIcon />}\n          {variant === 'warning' && <ExclamationTriangleIcon />}\n          {variant === 'success' && <CheckCircleIcon />}\n          {variant === 'error' && <ExclamationCircleIcon />}\n        </span>\n      )}\n\n      <span className={css(styles.helperTextItemText)}>\n        {children}\n        {isDynamic && <span className=\"pf-u-screen-reader\">: {screenReaderText};</span>}\n      </span>\n    </Component>\n  );\n};\nHelperTextItem.displayName = 'HelperTextItem';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,gEAAgE;AACnF,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,SAAS,MAAM,mDAAmD;AACzE,OAAOC,uBAAuB,MAAM,kEAAkE;AACtG,OAAOC,eAAe,MAAM,0DAA0D;AACtF,OAAOC,qBAAqB,MAAM,gEAAgE;AA+BlG,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,aAAa,EAAER,MAAM,CAACS,SAAS,CAACD,aAAa;EAC7CE,OAAO,EAAEV,MAAM,CAACS,SAAS,CAACC,OAAO;EACjCC,OAAO,EAAEX,MAAM,CAACS,SAAS,CAACE,OAAO;EACjCC,KAAK,EAAEZ,MAAM,CAACS,SAAS,CAACG;CACzB;AAED,OAAO,MAAMC,cAAc,GAAkDC,EAWvD,IAAI;MAXmD;MAC3EC,QAAQ;MACRC,SAAS;MACTC,SAAS,GAAG,KAAK;MACjBC,OAAO,GAAG,SAAS;MACnBC,IAAI;MACJC,SAAS,GAAG,KAAK;MACjBC,OAAO,GAAGD,SAAS;MACnBE,EAAE;MACFC,gBAAgB,GAAG,GAAGL,OAAO;IAAS,IAAAJ,EAElB;IADjBU,KAAK,GAAAC,MAAA,CAAAX,EAAA,EAVmE,2GAW5E,CADS;EAER,MAAMY,SAAS,GAAGT,SAAgB;EAClC,OACElB,KAAA,CAAA4B,aAAA,CAACD,SAAS,EAAAE,MAAA,CAAAC,MAAA;IACRb,SAAS,EAAEf,GAAG,CAACD,MAAM,CAAC8B,cAAc,EAAExB,YAAY,CAACY,OAAO,CAAC,EAAEE,SAAS,IAAIpB,MAAM,CAACS,SAAS,CAACsB,OAAO,EAAEf,SAAS,CAAC;IAC9GM,EAAE,EAAEA;EAAE,GACFE,KAAK,GAERL,IAAI,IACHpB,KAAA,CAAA4B,aAAA;IAAMX,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACgC,kBAAkB,CAAC;IAAA;EAAA,GAC5Cb,IAAI,CAER,EACAE,OAAO,IAAI,CAACF,IAAI,IACfpB,KAAA,CAAA4B,aAAA;IAAMX,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACgC,kBAAkB,CAAC;IAAA;EAAA,GAC5C,CAACd,OAAO,KAAK,SAAS,IAAIA,OAAO,KAAK,eAAe,KAAKnB,KAAA,CAAA4B,aAAA,CAACzB,SAAS,OAAG,EACvEgB,OAAO,KAAK,SAAS,IAAInB,KAAA,CAAA4B,aAAA,CAACxB,uBAAuB,OAAG,EACpDe,OAAO,KAAK,SAAS,IAAInB,KAAA,CAAA4B,aAAA,CAACvB,eAAe,OAAG,EAC5Cc,OAAO,KAAK,OAAO,IAAInB,KAAA,CAAA4B,aAAA,CAACtB,qBAAqB,OAAG,CAEpD,EAEDN,KAAA,CAAA4B,aAAA;IAAMX,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACiC,kBAAkB;EAAC,GAC5ClB,QAAQ,EACRK,SAAS,IAAIrB,KAAA,CAAA4B,aAAA;IAAMX,SAAS,EAAC;EAAoB,G,MAAIO,gBAAgB,E,IAAS,CAC1E,CACG;AAEhB,CAAC;AACDV,cAAc,CAACqB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}