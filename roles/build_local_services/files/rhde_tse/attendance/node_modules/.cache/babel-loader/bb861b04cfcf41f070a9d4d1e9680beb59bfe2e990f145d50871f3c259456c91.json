{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\nclass MenuBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuRef = React.createRef();\n    this.activeMenu = null;\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Menu.displayName),\n      searchInputValue: '',\n      transitionMoveTarget: null,\n      flyoutRef: null,\n      disableHover: false,\n      currentDrilldownMenuId: this.props.id\n    };\n    this.handleDrilldownTransition = event => {\n      const current = this.menuRef.current;\n      if (!current || current !== event.target.closest('.pf-c-menu') && !Array.from(current.getElementsByClassName('pf-c-menu')).includes(event.target.closest('.pf-c-menu'))) {\n        return;\n      }\n      if (this.state.transitionMoveTarget) {\n        this.state.transitionMoveTarget.focus();\n        this.setState({\n          transitionMoveTarget: null\n        });\n      } else {\n        const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n        const nextMenuChildren = Array.from(nextMenu.getElementsByTagName('UL')[0].children);\n        if (!this.state.currentDrilldownMenuId || nextMenu.id !== this.state.currentDrilldownMenuId) {\n          this.setState({\n            currentDrilldownMenuId: nextMenu.id\n          });\n        } else {\n          // if the drilldown transition ends on the same menu, do not focus the first item\n          return;\n        }\n        const nextTarget = nextMenuChildren.filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')))[0].firstChild;\n        nextTarget.focus();\n        nextTarget.tabIndex = 0;\n      }\n    };\n    this.handleExtraKeys = event => {\n      const isDrilldown = this.props.containsDrilldown;\n      const activeElement = document.activeElement;\n      if (event.target.closest('.pf-c-menu') !== this.activeMenu && !event.target.classList.contains('pf-c-breadcrumb__link')) {\n        this.activeMenu = event.target.closest('.pf-c-menu');\n        this.setState({\n          disableHover: true\n        });\n      }\n      if (event.target.tagName === 'INPUT') {\n        return;\n      }\n      const parentMenu = this.activeMenu;\n      const key = event.key;\n      const isFromBreadcrumb = activeElement.classList.contains('pf-c-breadcrumb__link') || activeElement.classList.contains('pf-c-dropdown__toggle');\n      if (key === ' ' || key === 'Enter') {\n        event.preventDefault();\n        if (isDrilldown && !isFromBreadcrumb) {\n          const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n          if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n            activeElement.tabIndex = -1;\n            parentMenu.parentElement.firstChild.tabIndex = 0;\n            this.setState({\n              transitionMoveTarget: parentMenu.parentElement.firstChild\n            });\n          } else {\n            if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains('pf-c-menu')) {\n              const childItems = Array.from(activeElement.nextElementSibling.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n              activeElement.tabIndex = -1;\n              childItems[0].firstChild.tabIndex = 0;\n              this.setState({\n                transitionMoveTarget: childItems[0].firstChild\n              });\n            }\n          }\n        }\n        document.activeElement.click();\n      }\n    };\n    this.createNavigableElements = () => {\n      const isDrilldown = this.props.containsDrilldown;\n      if (isDrilldown) {\n        return this.activeMenu ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))) : [];\n      } else {\n        return this.menuRef.current ? Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))) : [];\n      }\n    };\n    if (props.innerRef) {\n      this.menuRef = props.innerRef;\n    }\n  }\n  allowTabFirstItem() {\n    // Allow tabbing to first menu item\n    const current = this.menuRef.current;\n    if (current) {\n      const first = current.querySelector('ul button:not(:disabled), ul a:not(:disabled)');\n      if (first) {\n        first.tabIndex = 0;\n      }\n    }\n  }\n  componentDidMount() {\n    if (this.context) {\n      this.setState({\n        disableHover: this.context.disableHover\n      });\n    }\n    if (canUseDOM) {\n      window.addEventListener('transitionend', this.props.isRootMenu ? this.handleDrilldownTransition : null);\n    }\n    this.allowTabFirstItem();\n  }\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('transitionend', this.handleDrilldownTransition);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.allowTabFirstItem();\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        'aria-label': ariaLabel,\n        id,\n        children,\n        className,\n        onSelect,\n        selected = null,\n        onActionClick,\n        ouiaId,\n        ouiaSafe,\n        containsFlyout,\n        isNavFlyout,\n        containsDrilldown,\n        isMenuDrilledIn,\n        isPlain,\n        isScrollable,\n        drilldownItemPath,\n        drilledInMenus,\n        onDrillIn,\n        onDrillOut,\n        onGetMenuHeight,\n        parentMenu = null,\n        activeItemId = null,\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        innerRef,\n        isRootMenu,\n        activeMenu,\n        role\n      } = _a,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      props = __rest(_a, ['aria-label', \"id\", \"children\", \"className\", \"onSelect\", \"selected\", \"onActionClick\", \"ouiaId\", \"ouiaSafe\", \"containsFlyout\", \"isNavFlyout\", \"containsDrilldown\", \"isMenuDrilledIn\", \"isPlain\", \"isScrollable\", \"drilldownItemPath\", \"drilledInMenus\", \"onDrillIn\", \"onDrillOut\", \"onGetMenuHeight\", \"parentMenu\", \"activeItemId\", \"innerRef\", \"isRootMenu\", \"activeMenu\", \"role\"]);\n    const _isMenuDrilledIn = isMenuDrilledIn || drilledInMenus && drilledInMenus.includes(id) || false;\n    return React.createElement(MenuContext.Provider, {\n      value: {\n        menuId: id,\n        parentMenu: parentMenu || id,\n        onSelect,\n        onActionClick,\n        activeItemId,\n        selected,\n        drilledInMenus,\n        drilldownItemPath,\n        onDrillIn,\n        onDrillOut,\n        onGetMenuHeight,\n        flyoutRef: this.state.flyoutRef,\n        setFlyoutRef: flyoutRef => this.setState({\n          flyoutRef\n        }),\n        disableHover: this.state.disableHover,\n        role\n      }\n    }, isRootMenu && React.createElement(KeyboardHandler, {\n      containerRef: this.menuRef || null,\n      additionalKeyHandler: this.handleExtraKeys,\n      createNavigableElements: this.createNavigableElements,\n      isActiveElement: element => document.activeElement.closest('li') === element ||\n      // if element is a basic MenuItem\n      document.activeElement.parentElement === element || document.activeElement.closest('.pf-c-menu__search') === element ||\n      // if element is a MenuInput\n      document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element,\n      getFocusableElement: navigableElement => navigableElement.tagName === 'DIV' && navigableElement.querySelector('input') ||\n      // for MenuInput\n      navigableElement.firstChild.tagName === 'LABEL' && navigableElement.querySelector('input') ||\n      // for MenuItem checkboxes\n      navigableElement.firstChild,\n      noHorizontalArrowHandling: document.activeElement && (document.activeElement.classList.contains('pf-c-breadcrumb__link') || document.activeElement.classList.contains('pf-c-dropdown__toggle')),\n      noEnterHandling: true,\n      noSpaceHandling: true\n    }), React.createElement(\"div\", Object.assign({\n      id: id,\n      className: css(styles.menu, isPlain && styles.modifiers.plain, isScrollable && styles.modifiers.scrollable, containsFlyout && styles.modifiers.flyout, isNavFlyout && styles.modifiers.nav, containsDrilldown && styles.modifiers.drilldown, _isMenuDrilledIn && styles.modifiers.drilledIn, className),\n      \"aria-label\": ariaLabel,\n      ref: this.menuRef\n    }, getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children));\n  }\n}\nMenuBase.displayName = 'Menu';\nMenuBase.contextType = MenuContext;\nMenuBase.defaultProps = {\n  ouiaSafe: true,\n  isRootMenu: true,\n  isPlain: false,\n  isScrollable: false,\n  role: 'menu'\n};\nexport const Menu = React.forwardRef((props, ref) => React.createElement(MenuBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nMenu.displayName = 'Menu';","map":{"version":3,"names":["React","styles","css","getOUIAProps","getDefaultOUIAId","MenuContext","canUseDOM","KeyboardHandler","MenuBase","Component","constructor","props","menuRef","createRef","activeMenu","state","ouiaStateId","Menu","displayName","searchInputValue","transitionMoveTarget","flyoutRef","disableHover","currentDrilldownMenuId","id","handleDrilldownTransition","event","current","target","closest","Array","from","getElementsByClassName","includes","focus","setState","nextMenu","querySelector","nextMenuChildren","getElementsByTagName","children","nextTarget","filter","el","classList","contains","firstChild","tabIndex","handleExtraKeys","isDrilldown","containsDrilldown","activeElement","document","tagName","parentMenu","key","isFromBreadcrumb","preventDefault","isDrillingOut","parentElement","nextElementSibling","childItems","click","createNavigableElements","innerRef","allowTabFirstItem","first","componentDidMount","context","window","addEventListener","isRootMenu","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","_a","ariaLabel","className","onSelect","selected","onActionClick","ouiaId","ouiaSafe","containsFlyout","isNavFlyout","isMenuDrilledIn","isPlain","isScrollable","drilldownItemPath","drilledInMenus","onDrillIn","onDrillOut","onGetMenuHeight","activeItemId","role","__rest","_isMenuDrilledIn","createElement","Provider","value","menuId","setFlyoutRef","containerRef","additionalKeyHandler","isActiveElement","element","getFocusableElement","navigableElement","noHorizontalArrowHandling","noEnterHandling","noSpaceHandling","Object","assign","menu","modifiers","plain","scrollable","flyout","nav","drilldown","drilledIn","ref","undefined","contextType","defaultProps","forwardRef"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Menu\\Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\nexport interface MenuProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'ref' | 'onSelect'>, OUIAProps {\n  /** Anything that can be rendered inside of the Menu */\n  children?: React.ReactNode;\n  /** Additional classes added to the Menu */\n  className?: string;\n  /** ID of the menu */\n  id?: string;\n  /** Callback for updating when item selection changes. You can also specify onClick on the MenuItem. */\n  onSelect?: (event?: React.MouseEvent, itemId?: string | number) => void;\n  /** Single itemId for single select menus, or array of itemIds for multi select. You can also specify isSelected on the MenuItem. */\n  selected?: any | any[];\n  /** Callback called when an MenuItems's action button is clicked. You can also specify it within a MenuItemAction. */\n  onActionClick?: (event?: any, itemId?: any, actionId?: any) => void;\n  /** Search input of menu */\n  hasSearchInput?: boolean;\n  /** A callback for when the input value changes. */\n  onSearchInputChange?: (\n    event: React.FormEvent<HTMLInputElement> | React.SyntheticEvent<HTMLButtonElement>,\n    value: string\n  ) => void;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** @beta Indicates if menu contains a flyout menu */\n  containsFlyout?: boolean;\n  /** @beta Indicating that the menu should have nav flyout styling */\n  isNavFlyout?: boolean;\n  /** @beta Indicates if menu contains a drilldown menu */\n  containsDrilldown?: boolean;\n  /** @beta Indicates if a menu is drilled into */\n  isMenuDrilledIn?: boolean;\n  /** @beta Indicates the path of drilled in menu itemIds */\n  drilldownItemPath?: string[];\n  /** @beta Array of menus that are drilled in */\n  drilledInMenus?: string[];\n  /** @beta Callback for drilling into a submenu */\n  onDrillIn?: (\n    event: React.KeyboardEvent | React.MouseEvent,\n    fromItemId: string,\n    toItemId: string,\n    itemId: string\n  ) => void;\n  /** @beta Callback for drilling out of a submenu */\n  onDrillOut?: (event: React.KeyboardEvent | React.MouseEvent, toItemId: string, itemId: string) => void;\n  /** @beta Callback for collecting menu heights */\n  onGetMenuHeight?: (menuId: string, height: number) => void;\n  /** @beta ID of parent menu for drilldown menus */\n  parentMenu?: string;\n  /** @beta ID of the currently active menu for the drilldown variant */\n  activeMenu?: string;\n  /** @beta itemId of the currently active item. You can also specify isActive on the MenuItem. */\n  activeItemId?: string | number;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLDivElement>;\n  /** Internal flag indicating if the Menu is the root of a menu tree */\n  isRootMenu?: boolean;\n  /** Indicates if the menu should be without the outer box-shadow */\n  isPlain?: boolean;\n  /** Indicates if the menu should be srollable */\n  isScrollable?: boolean;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n  /** @beta Determines the accessible role of the menu. For a non-checkbox menu that can have\n   * one or more items selected, pass in \"listbox\". */\n  role?: string;\n}\n\nexport interface MenuState {\n  searchInputValue: string | null;\n  ouiaStateId: string;\n  transitionMoveTarget: HTMLElement;\n  flyoutRef: React.Ref<HTMLLIElement> | null;\n  disableHover: boolean;\n  currentDrilldownMenuId: string;\n}\n\nclass MenuBase extends React.Component<MenuProps, MenuState> {\n  static displayName = 'Menu';\n  static contextType = MenuContext;\n  context!: React.ContextType<typeof MenuContext>;\n  private menuRef = React.createRef<HTMLDivElement>();\n  private activeMenu = null as Element;\n  static defaultProps: MenuProps = {\n    ouiaSafe: true,\n    isRootMenu: true,\n    isPlain: false,\n    isScrollable: false,\n    role: 'menu'\n  };\n\n  constructor(props: MenuProps) {\n    super(props);\n    if (props.innerRef) {\n      this.menuRef = props.innerRef as React.RefObject<HTMLDivElement>;\n    }\n  }\n\n  state: MenuState = {\n    ouiaStateId: getDefaultOUIAId(Menu.displayName),\n    searchInputValue: '',\n    transitionMoveTarget: null,\n    flyoutRef: null,\n    disableHover: false,\n    currentDrilldownMenuId: this.props.id\n  };\n\n  allowTabFirstItem() {\n    // Allow tabbing to first menu item\n    const current = this.menuRef.current;\n    if (current) {\n      const first = current.querySelector('ul button:not(:disabled), ul a:not(:disabled)') as\n        | HTMLButtonElement\n        | HTMLAnchorElement;\n      if (first) {\n        first.tabIndex = 0;\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.context) {\n      this.setState({ disableHover: this.context.disableHover });\n    }\n    if (canUseDOM) {\n      window.addEventListener('transitionend', this.props.isRootMenu ? this.handleDrilldownTransition : null);\n    }\n\n    this.allowTabFirstItem();\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('transitionend', this.handleDrilldownTransition);\n    }\n  }\n\n  componentDidUpdate(prevProps: MenuProps) {\n    if (prevProps.children !== this.props.children) {\n      this.allowTabFirstItem();\n    }\n  }\n\n  handleDrilldownTransition = (event: TransitionEvent) => {\n    const current = this.menuRef.current;\n\n    if (\n      !current ||\n      (current !== (event.target as HTMLElement).closest('.pf-c-menu') &&\n        !Array.from(current.getElementsByClassName('pf-c-menu')).includes(\n          (event.target as HTMLElement).closest('.pf-c-menu')\n        ))\n    ) {\n      return;\n    }\n\n    if (this.state.transitionMoveTarget) {\n      this.state.transitionMoveTarget.focus();\n      this.setState({ transitionMoveTarget: null });\n    } else {\n      const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n      const nextMenuChildren = Array.from(nextMenu.getElementsByTagName('UL')[0].children);\n\n      if (!this.state.currentDrilldownMenuId || nextMenu.id !== this.state.currentDrilldownMenuId) {\n        this.setState({ currentDrilldownMenuId: nextMenu.id });\n      } else {\n        // if the drilldown transition ends on the same menu, do not focus the first item\n        return;\n      }\n\n      const nextTarget = nextMenuChildren.filter(\n        el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))\n      )[0].firstChild;\n\n      (nextTarget as HTMLElement).focus();\n      (nextTarget as HTMLElement).tabIndex = 0;\n    }\n  };\n\n  handleExtraKeys = (event: KeyboardEvent) => {\n    const isDrilldown = this.props.containsDrilldown;\n    const activeElement = document.activeElement;\n\n    if (\n      (event.target as HTMLElement).closest('.pf-c-menu') !== this.activeMenu &&\n      !(event.target as HTMLElement).classList.contains('pf-c-breadcrumb__link')\n    ) {\n      this.activeMenu = (event.target as HTMLElement).closest('.pf-c-menu');\n      this.setState({ disableHover: true });\n    }\n\n    if ((event.target as HTMLElement).tagName === 'INPUT') {\n      return;\n    }\n\n    const parentMenu = this.activeMenu;\n    const key = event.key;\n    const isFromBreadcrumb =\n      activeElement.classList.contains('pf-c-breadcrumb__link') ||\n      activeElement.classList.contains('pf-c-dropdown__toggle');\n\n    if (key === ' ' || key === 'Enter') {\n      event.preventDefault();\n      if (isDrilldown && !isFromBreadcrumb) {\n        const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n        if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n          (activeElement as HTMLElement).tabIndex = -1;\n          (parentMenu.parentElement.firstChild as HTMLElement).tabIndex = 0;\n          this.setState({ transitionMoveTarget: parentMenu.parentElement.firstChild as HTMLElement });\n        } else {\n          if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains('pf-c-menu')) {\n            const childItems = Array.from(\n              activeElement.nextElementSibling.getElementsByTagName('UL')[0].children\n            ).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n\n            (activeElement as HTMLElement).tabIndex = -1;\n            (childItems[0].firstChild as HTMLElement).tabIndex = 0;\n            this.setState({ transitionMoveTarget: childItems[0].firstChild as HTMLElement });\n          }\n        }\n      }\n      (document.activeElement as HTMLElement).click();\n    }\n  };\n\n  createNavigableElements = () => {\n    const isDrilldown = this.props.containsDrilldown;\n\n    if (isDrilldown) {\n      return this.activeMenu\n        ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(\n            el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))\n          )\n        : [];\n    } else {\n      return this.menuRef.current\n        ? Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(\n            el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))\n          )\n        : [];\n    }\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      id,\n      children,\n      className,\n      onSelect,\n      selected = null,\n      onActionClick,\n      ouiaId,\n      ouiaSafe,\n      containsFlyout,\n      isNavFlyout,\n      containsDrilldown,\n      isMenuDrilledIn,\n      isPlain,\n      isScrollable,\n      drilldownItemPath,\n      drilledInMenus,\n      onDrillIn,\n      onDrillOut,\n      onGetMenuHeight,\n      parentMenu = null,\n      activeItemId = null,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      innerRef,\n      isRootMenu,\n      activeMenu,\n      role,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...props\n    } = this.props;\n    const _isMenuDrilledIn = isMenuDrilledIn || (drilledInMenus && drilledInMenus.includes(id)) || false;\n    return (\n      <MenuContext.Provider\n        value={{\n          menuId: id,\n          parentMenu: parentMenu || id,\n          onSelect,\n          onActionClick,\n          activeItemId,\n          selected,\n          drilledInMenus,\n          drilldownItemPath,\n          onDrillIn,\n          onDrillOut,\n          onGetMenuHeight,\n          flyoutRef: this.state.flyoutRef,\n          setFlyoutRef: flyoutRef => this.setState({ flyoutRef }),\n          disableHover: this.state.disableHover,\n          role\n        }}\n      >\n        {isRootMenu && (\n          <KeyboardHandler\n            containerRef={(this.menuRef as React.RefObject<HTMLDivElement>) || null}\n            additionalKeyHandler={this.handleExtraKeys}\n            createNavigableElements={this.createNavigableElements}\n            isActiveElement={(element: Element) =>\n              document.activeElement.closest('li') === element || // if element is a basic MenuItem\n              document.activeElement.parentElement === element ||\n              document.activeElement.closest('.pf-c-menu__search') === element || // if element is a MenuInput\n              (document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element)\n            }\n            getFocusableElement={(navigableElement: Element) =>\n              (navigableElement.tagName === 'DIV' && navigableElement.querySelector('input')) || // for MenuInput\n              ((navigableElement.firstChild as Element).tagName === 'LABEL' &&\n                navigableElement.querySelector('input')) || // for MenuItem checkboxes\n              (navigableElement.firstChild as Element)\n            }\n            noHorizontalArrowHandling={\n              document.activeElement &&\n              (document.activeElement.classList.contains('pf-c-breadcrumb__link') ||\n                document.activeElement.classList.contains('pf-c-dropdown__toggle'))\n            }\n            noEnterHandling\n            noSpaceHandling\n          />\n        )}\n        <div\n          id={id}\n          className={css(\n            styles.menu,\n            isPlain && styles.modifiers.plain,\n            isScrollable && styles.modifiers.scrollable,\n            containsFlyout && styles.modifiers.flyout,\n            isNavFlyout && styles.modifiers.nav,\n            containsDrilldown && styles.modifiers.drilldown,\n            _isMenuDrilledIn && styles.modifiers.drilledIn,\n            className\n          )}\n          aria-label={ariaLabel}\n          ref={this.menuRef}\n          {...getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          {...props}\n        >\n          {children}\n        </div>\n      </MenuContext.Provider>\n    );\n  }\n}\n\nexport const Menu = React.forwardRef((props: MenuProps, ref: React.Ref<HTMLDivElement>) => (\n  <MenuBase {...props} innerRef={ref} />\n));\nMenu.displayName = 'Menu';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}