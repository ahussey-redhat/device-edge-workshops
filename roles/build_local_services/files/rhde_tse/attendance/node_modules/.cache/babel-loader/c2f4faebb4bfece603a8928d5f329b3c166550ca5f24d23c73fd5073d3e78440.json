{"ast":null,"code":"// @ts-nocheck\nimport format from './format';\nimport { modifierPhases } from '../enums';\nconst INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nconst MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nconst VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\n/**\n * @param modifiers\n */\nexport default function validateModifiers(modifiers) {\n  modifiers.forEach(modifier => {\n    Object.keys(modifier).forEach(key => {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', `\"${String(modifier.name)}\"`));\n          }\n          break;\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', `\"${String(modifier.enabled)}\"`));\n          }\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', `either ${modifierPhases.join(', ')}`, `\"${String(modifier.phase)}\"`));\n          }\n          break;\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', `\"${String(modifier.fn)}\"`));\n          }\n          break;\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', `\"${String(modifier.fn)}\"`));\n          }\n          break;\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', `\"${String(modifier.requires)}\"`));\n          }\n          break;\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', `\"${String(modifier.requiresIfExists)}\"`));\n          }\n          break;\n        case 'options':\n        case 'data':\n          break;\n        default:\n          console.error(`PopperJS: an invalid property has been provided to the \"${modifier.name}\" modifier, valid properties are ${VALID_PROPERTIES.map(s => `\"${s}\"`).join(', ')}; but \"${key}\" was provided.`);\n      }\n      modifier.requires && modifier.requires.forEach(requirement => {\n        if (modifiers.find(mod => mod.name === requirement) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}","map":{"version":3,"names":["format","modifierPhases","INVALID_MODIFIER_ERROR","MISSING_DEPENDENCY_ERROR","VALID_PROPERTIES","validateModifiers","modifiers","forEach","modifier","Object","keys","key","name","console","error","String","enabled","indexOf","phase","join","fn","effect","Array","isArray","requires","requiresIfExists","map","s","requirement","find","mod"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\helpers\\Popper\\thirdparty\\popper-core\\utils\\validateModifiers.ts"],"sourcesContent":["// @ts-nocheck\nimport format from './format';\nimport { modifierPhases } from '../enums';\n\nconst INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nconst MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nconst VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\n\n/**\n * @param modifiers\n */\nexport default function validateModifiers(modifiers: any[]): void {\n  modifiers.forEach(modifier => {\n    Object.keys(modifier).forEach(key => {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', `\"${String(modifier.name)}\"`)\n            );\n          }\n\n          break;\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', `\"${String(modifier.enabled)}\"`)\n            );\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(\n              format(\n                INVALID_MODIFIER_ERROR,\n                modifier.name,\n                '\"phase\"',\n                `either ${modifierPhases.join(', ')}`,\n                `\"${String(modifier.phase)}\"`\n              )\n            );\n          }\n\n          break;\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', `\"${String(modifier.fn)}\"`)\n            );\n          }\n\n          break;\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', `\"${String(modifier.fn)}\"`)\n            );\n          }\n\n          break;\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', `\"${String(modifier.requires)}\"`)\n            );\n          }\n\n          break;\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(\n              format(\n                INVALID_MODIFIER_ERROR,\n                modifier.name,\n                '\"requiresIfExists\"',\n                '\"array\"',\n                `\"${String(modifier.requiresIfExists)}\"`\n              )\n            );\n          }\n\n          break;\n        case 'options':\n        case 'data':\n          break;\n        default:\n          console.error(\n            `PopperJS: an invalid property has been provided to the \"${\n              modifier.name\n            }\" modifier, valid properties are ${VALID_PROPERTIES.map(s => `\"${s}\"`).join(\n              ', '\n            )}; but \"${key}\" was provided.`\n          );\n      }\n\n      modifier.requires &&\n        modifier.requires.forEach(requirement => {\n          if (modifiers.find(mod => mod.name === requirement) == null) {\n            console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n          }\n        });\n    });\n  });\n}\n"],"mappings":"AAAA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,cAAc,QAAQ,UAAU;AAEzC,MAAMC,sBAAsB,GAAG,+EAA+E;AAC9G,MAAMC,wBAAwB,GAAG,yEAAyE;AAC1G,MAAMC,gBAAgB,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC;AAE5F;;;AAGA,eAAc,SAAUC,iBAAiBA,CAACC,SAAgB;EACxDA,SAAS,CAACC,OAAO,CAACC,QAAQ,IAAG;IAC3BC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAACD,OAAO,CAACI,GAAG,IAAG;MAClC,QAAQA,GAAG;QACT,KAAK,MAAM;UACT,IAAI,OAAOH,QAAQ,CAACI,IAAI,KAAK,QAAQ,EAAE;YACrCC,OAAO,CAACC,KAAK,CACXd,MAAM,CAACE,sBAAsB,EAAEa,MAAM,CAACP,QAAQ,CAACI,IAAI,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAIG,MAAM,CAACP,QAAQ,CAACI,IAAI,CAAC,GAAG,CAAC,CAC1G;;UAGH;QACF,KAAK,SAAS;UACZ,IAAI,OAAOJ,QAAQ,CAACQ,OAAO,KAAK,SAAS,EAAE;YACzCH,OAAO,CAACC,KAAK,CACXd,MAAM,CAACE,sBAAsB,EAAEM,QAAQ,CAACI,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,IAAIG,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAAC,GAAG,CAAC,CACzG;;QAGL,KAAK,OAAO;UACV,IAAIf,cAAc,CAACgB,OAAO,CAACT,QAAQ,CAACU,KAAK,CAAC,GAAG,CAAC,EAAE;YAC9CL,OAAO,CAACC,KAAK,CACXd,MAAM,CACJE,sBAAsB,EACtBM,QAAQ,CAACI,IAAI,EACb,SAAS,EACT,UAAUX,cAAc,CAACkB,IAAI,CAAC,IAAI,CAAC,EAAE,EACrC,IAAIJ,MAAM,CAACP,QAAQ,CAACU,KAAK,CAAC,GAAG,CAC9B,CACF;;UAGH;QACF,KAAK,IAAI;UACP,IAAI,OAAOV,QAAQ,CAACY,EAAE,KAAK,UAAU,EAAE;YACrCP,OAAO,CAACC,KAAK,CACXd,MAAM,CAACE,sBAAsB,EAAEM,QAAQ,CAACI,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,IAAIG,MAAM,CAACP,QAAQ,CAACY,EAAE,CAAC,GAAG,CAAC,CAChG;;UAGH;QACF,KAAK,QAAQ;UACX,IAAI,OAAOZ,QAAQ,CAACa,MAAM,KAAK,UAAU,EAAE;YACzCR,OAAO,CAACC,KAAK,CACXd,MAAM,CAACE,sBAAsB,EAAEM,QAAQ,CAACI,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,IAAIG,MAAM,CAACP,QAAQ,CAACY,EAAE,CAAC,GAAG,CAAC,CACpG;;UAGH;QACF,KAAK,UAAU;UACb,IAAI,CAACE,KAAK,CAACC,OAAO,CAACf,QAAQ,CAACgB,QAAQ,CAAC,EAAE;YACrCX,OAAO,CAACC,KAAK,CACXd,MAAM,CAACE,sBAAsB,EAAEM,QAAQ,CAACI,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,IAAIG,MAAM,CAACP,QAAQ,CAACgB,QAAQ,CAAC,GAAG,CAAC,CACzG;;UAGH;QACF,KAAK,kBAAkB;UACrB,IAAI,CAACF,KAAK,CAACC,OAAO,CAACf,QAAQ,CAACiB,gBAAgB,CAAC,EAAE;YAC7CZ,OAAO,CAACC,KAAK,CACXd,MAAM,CACJE,sBAAsB,EACtBM,QAAQ,CAACI,IAAI,EACb,oBAAoB,EACpB,SAAS,EACT,IAAIG,MAAM,CAACP,QAAQ,CAACiB,gBAAgB,CAAC,GAAG,CACzC,CACF;;UAGH;QACF,KAAK,SAAS;QACd,KAAK,MAAM;UACT;QACF;UACEZ,OAAO,CAACC,KAAK,CACX,2DACEN,QAAQ,CAACI,IACX,oCAAoCR,gBAAgB,CAACsB,GAAG,CAACC,CAAC,IAAI,IAAIA,CAAC,GAAG,CAAC,CAACR,IAAI,CAC1E,IAAI,CACL,UAAUR,GAAG,iBAAiB,CAChC;MAAC;MAGNH,QAAQ,CAACgB,QAAQ,IACfhB,QAAQ,CAACgB,QAAQ,CAACjB,OAAO,CAACqB,WAAW,IAAG;QACtC,IAAItB,SAAS,CAACuB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAClB,IAAI,KAAKgB,WAAW,CAAC,IAAI,IAAI,EAAE;UAC3Df,OAAO,CAACC,KAAK,CAACd,MAAM,CAACG,wBAAwB,EAAEY,MAAM,CAACP,QAAQ,CAACI,IAAI,CAAC,EAAEgB,WAAW,EAAEA,WAAW,CAAC,CAAC;;MAEpG,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}