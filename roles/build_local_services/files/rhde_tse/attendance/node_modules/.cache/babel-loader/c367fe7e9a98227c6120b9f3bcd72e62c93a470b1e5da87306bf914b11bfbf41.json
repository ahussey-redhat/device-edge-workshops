{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nclass SelectToggleBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDocClick = event => {\n      const {\n        parentRef,\n        menuRef,\n        footerRef,\n        isOpen,\n        onToggle,\n        onClose\n      } = this.props;\n      const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      const clickedWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      const clickedWithinFooter = footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target);\n      if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n        onToggle(false, event);\n        onClose();\n      }\n    };\n    this.handleGlobalKeys = event => {\n      const {\n        parentRef,\n        menuRef,\n        hasFooter,\n        footerRef,\n        isOpen,\n        variant,\n        onToggle,\n        onClose,\n        moveFocusToLastMenuItem\n      } = this.props;\n      const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      const escFromWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      if (isOpen && event.key === KeyTypes.Tab && (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)) {\n        this.props.handleTypeaheadKeys('tab', event.shiftKey);\n        event.preventDefault();\n        return;\n      }\n      if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n        const tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n        // If no tabbable item in footer close select\n        if (tabbableItems.length <= 0) {\n          onToggle(false, event);\n          onClose();\n          this.toggle.current.focus();\n          return;\n        } else {\n          // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n          const currentElementIndex = tabbableItems.findIndex(item => item === document.activeElement);\n          if (currentElementIndex === -1) {\n            if (event.shiftKey) {\n              if (variant !== 'checkbox') {\n                // only close non checkbox variation on shift clicked\n                onToggle(false, event);\n                onClose();\n                this.toggle.current.focus();\n              }\n            } else {\n              // tab to footer\n              tabbableItems[0].focus();\n              return;\n            }\n          }\n          // Current element is in footer.\n          if (event.shiftKey) {\n            // Move focus back to menu if current tab index is 0\n            if (currentElementIndex === 0) {\n              moveFocusToLastMenuItem();\n              event.preventDefault();\n            }\n            return;\n          }\n          // Tab to next element in footer or close if there are none\n          if (currentElementIndex + 1 < tabbableItems.length) {\n            tabbableItems[currentElementIndex + 1].focus();\n          } else {\n            // no more footer items close menu\n            onToggle(false, event);\n            onClose();\n            this.toggle.current.focus();\n          }\n          event.preventDefault();\n          return;\n        }\n      }\n      if (isOpen && (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) && (escFromToggle || escFromWithinMenu)) {\n        onToggle(false, event);\n        onClose();\n        this.toggle.current.focus();\n      }\n    };\n    this.onKeyDown = event => {\n      const {\n        isOpen,\n        onToggle,\n        variant,\n        onClose,\n        onEnter,\n        handleTypeaheadKeys\n      } = this.props;\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n        if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n          handleTypeaheadKeys(event.key === KeyTypes.ArrowDown && 'down' || event.key === KeyTypes.ArrowUp && 'up');\n          event.preventDefault();\n        } else if (event.key === KeyTypes.Enter) {\n          if (isOpen) {\n            handleTypeaheadKeys('enter');\n          } else {\n            onToggle(!isOpen, event);\n          }\n        }\n      }\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || event.key === KeyTypes.Tab && !isOpen || event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space) {\n        return;\n      }\n      event.preventDefault();\n      if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n        onToggle(!isOpen, event);\n        onClose();\n        this.toggle.current.focus();\n      } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n        onToggle(!isOpen, event);\n        onEnter();\n      }\n    };\n    const {\n      variant\n    } = props;\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    if (this.props.innerRef) {\n      this.toggle = this.props.innerRef;\n    } else {\n      this.toggle = isTypeahead ? React.createRef() : React.createRef();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick, {\n      capture: true\n    });\n    document.addEventListener('touchstart', this.onDocClick);\n    document.addEventListener('keydown', this.handleGlobalKeys);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick);\n    document.removeEventListener('touchstart', this.onDocClick);\n    document.removeEventListener('keydown', this.handleGlobalKeys);\n  }\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const _a = this.props,\n      {\n        className,\n        children,\n        isOpen,\n        isActive,\n        isPlain,\n        isDisabled,\n        hasPlaceholderStyle,\n        variant,\n        onToggle,\n        onEnter,\n        onClose,\n        onBlur,\n        onClickTypeaheadToggleButton,\n        handleTypeaheadKeys,\n        moveFocusToLastMenuItem,\n        parentRef,\n        menuRef,\n        id,\n        type,\n        hasClearButton,\n        'aria-labelledby': ariaLabelledBy,\n        'aria-label': ariaLabel,\n        hasFooter,\n        footerRef,\n        toggleIndicator,\n        innerRef\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isActive\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"variant\", \"onToggle\", \"onEnter\", \"onClose\", \"onBlur\", \"onClickTypeaheadToggleButton\", \"handleTypeaheadKeys\", \"moveFocusToLastMenuItem\", \"parentRef\", \"menuRef\", \"id\", \"type\", \"hasClearButton\", 'aria-labelledby', 'aria-label', \"hasFooter\", \"footerRef\", \"toggleIndicator\", \"innerRef\"]);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n    const toggleProps = {\n      id,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-expanded': isOpen,\n      'aria-haspopup': variant !== SelectVariant.checkbox && 'listbox' || null\n    };\n    return React.createElement(React.Fragment, null, !isTypeahead && React.createElement(\"button\", Object.assign({}, props, toggleProps, {\n      ref: this.toggle,\n      type: type,\n      className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isActive && styles.modifiers.active, className),\n      \"aria-label\": ariaLabel,\n      onBlur: onBlur,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onClick: event => {\n        onToggle(!isOpen, event);\n        if (isOpen) {\n          onClose();\n        }\n      },\n      onKeyDown: this.onKeyDown,\n      disabled: isDisabled\n    }), children, React.createElement(\"span\", {\n      className: css(styles.selectToggleArrow)\n    }, toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, null))), isTypeahead && React.createElement(\"div\", Object.assign({}, props, {\n      ref: this.toggle,\n      className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isTypeahead && styles.modifiers.typeahead, className),\n      onBlur: onBlur,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onClick: event => {\n        if (!isDisabled) {\n          onToggle(!isOpen, event);\n          if (isOpen) {\n            onClose();\n          }\n        }\n      },\n      onKeyDown: this.onKeyDown\n    }), children, React.createElement(\"button\", Object.assign({}, toggleProps, {\n      type: type,\n      className: css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain),\n      \"aria-label\": ariaLabel,\n      onClick: event => {\n        onToggle(!isOpen, event);\n        if (isOpen) {\n          onClose();\n        }\n        onClickTypeaheadToggleButton();\n      }\n    }, (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n      tabIndex: -1\n    }, {\n      disabled: isDisabled\n    }), toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, {\n      className: css(styles.selectToggleArrow)\n    }))));\n  }\n}\nSelectToggleBase.displayName = 'SelectToggle';\nSelectToggleBase.defaultProps = {\n  className: '',\n  isOpen: false,\n  isActive: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  hasClearButton: false,\n  hasFooter: false,\n  variant: 'single',\n  'aria-labelledby': '',\n  'aria-label': '',\n  type: 'button',\n  onToggle: () => {},\n  onEnter: () => {},\n  onClose: () => {},\n  onClickTypeaheadToggleButton: () => {}\n};\nexport const SelectToggle = React.forwardRef((props, ref) => React.createElement(SelectToggleBase, Object.assign({\n  innerRef: ref\n}, props)));","map":{"version":3,"names":["React","styles","buttonStyles","css","CaretDownIcon","SelectVariant","SelectFooterTabbableItems","findTabbableElements","KeyTypes","SelectToggleBase","Component","constructor","props","onDocClick","event","parentRef","menuRef","footerRef","isOpen","onToggle","onClose","clickedOnToggle","current","contains","target","clickedWithinMenu","clickedWithinFooter","handleGlobalKeys","hasFooter","variant","moveFocusToLastMenuItem","escFromToggle","escFromWithinMenu","key","Tab","typeahead","typeaheadMulti","handleTypeaheadKeys","shiftKey","preventDefault","tabbableItems","length","toggle","focus","currentElementIndex","findIndex","item","document","activeElement","Escape","onKeyDown","onEnter","ArrowDown","ArrowUp","Enter","Space","isTypeahead","innerRef","createRef","componentDidMount","addEventListener","capture","componentWillUnmount","removeEventListener","render","_a","className","children","isActive","isPlain","isDisabled","hasPlaceholderStyle","onBlur","onClickTypeaheadToggleButton","id","type","hasClearButton","ariaLabelledBy","ariaLabel","toggleIndicator","__rest","toggleProps","checkbox","createElement","Fragment","Object","assign","ref","selectToggle","modifiers","placeholder","disabled","plain","active","onClick","selectToggleArrow","button","selectToggleButton","tabIndex","displayName","defaultProps","SelectToggle","forwardRef"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Select\\SelectToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\n\nexport interface SelectToggleProps extends Omit<React.HTMLProps<HTMLElement>, 'ref'> {\n  /** HTML ID of dropdown toggle */\n  id: string;\n  /** Anything which can be rendered as dropdown toggle */\n  children: React.ReactNode;\n  /** Classes applied to root element of dropdown toggle */\n  className?: string;\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Callback called when toggle is clicked */\n  onToggle?: (isExpanded: boolean, event: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => void;\n  /** Callback for toggle open on keyboard entry */\n  onEnter?: () => void;\n  /** Callback for toggle close */\n  onClose?: () => void;\n  /** Callback for toggle blur */\n  onBlur?: (event?: any) => void;\n  /** @hide Internal callback for toggle keyboard navigation */\n  handleTypeaheadKeys?: (position: string, shiftKey?: boolean) => void;\n  /** @hide Internal callback to move focus to last menu item */\n  moveFocusToLastMenuItem?: () => void;\n  /** Element which wraps toggle */\n  parentRef: React.RefObject<HTMLDivElement>;\n  /** Custom icon for the dropdown replacing the CaretDownIcon */\n  toggleIndicator?: React.ReactElement;\n  /** The menu element */\n  menuRef?: React.RefObject<HTMLElement>;\n  /** The menu footer element */\n  footerRef?: React.RefObject<HTMLDivElement>;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Flag indicating if select is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if placeholder styles should be applied */\n  hasPlaceholderStyle?: boolean;\n  /** Type of the toggle button, defaults to 'button' */\n  type?: 'reset' | 'button' | 'submit' | undefined;\n  /** Id of label for the Select aria-labelledby */\n  'aria-labelledby'?: string;\n  /** Label for toggle of select variants */\n  'aria-label'?: string;\n  /** Flag for variant, determines toggle rules and interaction */\n  variant?: 'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti';\n  /** Flag indicating if select toggle has an clear button */\n  hasClearButton?: boolean;\n  /** Flag indicating if select menu has a footer */\n  hasFooter?: boolean;\n  /** @hide Internal callback for handling focus when typeahead toggle button clicked. */\n  onClickTypeaheadToggleButton?: () => void;\n  /** @hide Internal ref for the select toggle */\n  innerRef?: React.Ref<any>;\n}\n\nclass SelectToggleBase extends React.Component<SelectToggleProps> {\n  static displayName = 'SelectToggle';\n  private toggle: React.RefObject<HTMLDivElement> | React.RefObject<HTMLButtonElement>;\n\n  static defaultProps: PickOptional<SelectToggleProps> = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    hasClearButton: false,\n    hasFooter: false,\n    variant: 'single',\n    'aria-labelledby': '',\n    'aria-label': '',\n    type: 'button',\n    onToggle: () => {},\n    onEnter: () => {},\n    onClose: () => {},\n    onClickTypeaheadToggleButton: () => {}\n  };\n\n  constructor(props: SelectToggleProps) {\n    super(props);\n    const { variant } = props;\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    if (this.props.innerRef) {\n      this.toggle = this.props.innerRef as React.RefObject<HTMLButtonElement> | React.RefObject<HTMLDivElement>;\n    } else {\n      this.toggle = isTypeahead ? React.createRef<HTMLDivElement>() : React.createRef<HTMLButtonElement>();\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick, { capture: true });\n    document.addEventListener('touchstart', this.onDocClick);\n    document.addEventListener('keydown', this.handleGlobalKeys);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick);\n    document.removeEventListener('touchstart', this.onDocClick);\n    document.removeEventListener('keydown', this.handleGlobalKeys);\n  }\n\n  onDocClick = (event: Event) => {\n    const { parentRef, menuRef, footerRef, isOpen, onToggle, onClose } = this.props;\n    const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target as Node);\n    const clickedWithinMenu =\n      menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target as Node);\n    const clickedWithinFooter =\n      footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target as Node);\n\n    if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n      onToggle(false, event);\n      onClose();\n    }\n  };\n\n  handleGlobalKeys = (event: KeyboardEvent) => {\n    const {\n      parentRef,\n      menuRef,\n      hasFooter,\n      footerRef,\n      isOpen,\n      variant,\n      onToggle,\n      onClose,\n      moveFocusToLastMenuItem\n    } = this.props;\n    const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target as Node);\n    const escFromWithinMenu =\n      menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target as Node);\n    if (\n      isOpen &&\n      event.key === KeyTypes.Tab &&\n      (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)\n    ) {\n      this.props.handleTypeaheadKeys('tab', event.shiftKey);\n      event.preventDefault();\n      return;\n    }\n\n    if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n      const tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n\n      // If no tabbable item in footer close select\n      if (tabbableItems.length <= 0) {\n        onToggle(false, event);\n        onClose();\n        this.toggle.current.focus();\n        return;\n      } else {\n        // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n        const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n        if (currentElementIndex === -1) {\n          if (event.shiftKey) {\n            if (variant !== 'checkbox') {\n              // only close non checkbox variation on shift clicked\n              onToggle(false, event);\n              onClose();\n              this.toggle.current.focus();\n            }\n          } else {\n            // tab to footer\n            tabbableItems[0].focus();\n            return;\n          }\n        }\n        // Current element is in footer.\n        if (event.shiftKey) {\n          // Move focus back to menu if current tab index is 0\n          if (currentElementIndex === 0) {\n            moveFocusToLastMenuItem();\n            event.preventDefault();\n          }\n          return;\n        }\n        // Tab to next element in footer or close if there are none\n        if (currentElementIndex + 1 < tabbableItems.length) {\n          tabbableItems[currentElementIndex + 1].focus();\n        } else {\n          // no more footer items close menu\n          onToggle(false, event);\n          onClose();\n          this.toggle.current.focus();\n        }\n        event.preventDefault();\n        return;\n      }\n    }\n\n    if (\n      isOpen &&\n      (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) &&\n      (escFromToggle || escFromWithinMenu)\n    ) {\n      onToggle(false, event);\n      onClose();\n      this.toggle.current.focus();\n    }\n  };\n\n  onKeyDown = (event: React.KeyboardEvent) => {\n    const { isOpen, onToggle, variant, onClose, onEnter, handleTypeaheadKeys } = this.props;\n\n    if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n      if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n        handleTypeaheadKeys((event.key === KeyTypes.ArrowDown && 'down') || (event.key === KeyTypes.ArrowUp && 'up'));\n        event.preventDefault();\n      } else if (event.key === KeyTypes.Enter) {\n        if (isOpen) {\n          handleTypeaheadKeys('enter');\n        } else {\n          onToggle(!isOpen, event);\n        }\n      }\n    }\n\n    if (\n      variant === SelectVariant.typeahead ||\n      variant === SelectVariant.typeaheadMulti ||\n      (event.key === KeyTypes.Tab && !isOpen) ||\n      (event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space)\n    ) {\n      return;\n    }\n    event.preventDefault();\n    if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n      onToggle(!isOpen, event);\n      onClose();\n      this.toggle.current.focus();\n    } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n      onToggle(!isOpen, event);\n      onEnter();\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      children,\n      isOpen,\n      isActive,\n      isPlain,\n      isDisabled,\n      hasPlaceholderStyle,\n      variant,\n      onToggle,\n      onEnter,\n      onClose,\n      onBlur,\n      onClickTypeaheadToggleButton,\n      handleTypeaheadKeys,\n      moveFocusToLastMenuItem,\n      parentRef,\n      menuRef,\n      id,\n      type,\n      hasClearButton,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-label': ariaLabel,\n      hasFooter,\n      footerRef,\n      toggleIndicator,\n      innerRef,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const isTypeahead =\n      variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n    const toggleProps: {\n      id: string;\n      'aria-labelledby': string;\n      'aria-expanded': boolean;\n      'aria-haspopup': 'listbox' | null;\n    } = {\n      id,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-expanded': isOpen,\n      'aria-haspopup': (variant !== SelectVariant.checkbox && 'listbox') || null\n    };\n    return (\n      <React.Fragment>\n        {!isTypeahead && (\n          <button\n            {...props}\n            {...toggleProps}\n            ref={this.toggle as React.RefObject<HTMLButtonElement>}\n            type={type}\n            className={css(\n              styles.selectToggle,\n              hasPlaceholderStyle && styles.modifiers.placeholder,\n              isDisabled && styles.modifiers.disabled,\n              isPlain && styles.modifiers.plain,\n              isActive && styles.modifiers.active,\n              className\n            )}\n            aria-label={ariaLabel}\n            onBlur={onBlur}\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onClick={event => {\n              onToggle(!isOpen, event);\n              if (isOpen) {\n                onClose();\n              }\n            }}\n            onKeyDown={this.onKeyDown}\n            disabled={isDisabled}\n          >\n            {children}\n            <span className={css(styles.selectToggleArrow)}>{toggleIndicator ?? <CaretDownIcon />}</span>\n          </button>\n        )}\n        {isTypeahead && (\n          <div\n            {...props}\n            ref={this.toggle as React.RefObject<HTMLDivElement>}\n            className={css(\n              styles.selectToggle,\n              hasPlaceholderStyle && styles.modifiers.placeholder,\n              isDisabled && styles.modifiers.disabled,\n              isPlain && styles.modifiers.plain,\n              isTypeahead && styles.modifiers.typeahead,\n              className\n            )}\n            onBlur={onBlur}\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onClick={event => {\n              if (!isDisabled) {\n                onToggle(!isOpen, event);\n                if (isOpen) {\n                  onClose();\n                }\n              }\n            }}\n            onKeyDown={this.onKeyDown}\n          >\n            {children}\n            <button\n              {...toggleProps}\n              type={type}\n              className={css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain)}\n              aria-label={ariaLabel}\n              onClick={event => {\n                onToggle(!isOpen, event);\n                if (isOpen) {\n                  onClose();\n                }\n                onClickTypeaheadToggleButton();\n              }}\n              {...((variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n                tabIndex: -1\n              })}\n              disabled={isDisabled}\n            >\n              {toggleIndicator ?? <CaretDownIcon className={css(styles.selectToggleArrow)} />}\n            </button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const SelectToggle = React.forwardRef((props: SelectToggleProps, ref: React.Ref<any>) => (\n  <SelectToggleBase innerRef={ref} {...props} />\n));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}