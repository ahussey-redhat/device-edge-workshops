{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverContext } from './PopoverContext';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverBody } from './PopoverBody';\nimport { PopoverHeader } from './PopoverHeader';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverCloseButton } from './PopoverCloseButton';\nimport { PopoverArrow } from './PopoverArrow';\nimport popoverMaxWidth from '@patternfly/react-tokens/dist/esm/c_popover_MaxWidth';\nimport popoverMinWidth from '@patternfly/react-tokens/dist/esm/c_popover_MinWidth';\nimport { FocusTrap } from '../../helpers';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nimport { getUniqueId } from '../../helpers/util';\nexport var PopoverPosition;\n(function (PopoverPosition) {\n  PopoverPosition[\"auto\"] = \"auto\";\n  PopoverPosition[\"top\"] = \"top\";\n  PopoverPosition[\"bottom\"] = \"bottom\";\n  PopoverPosition[\"left\"] = \"left\";\n  PopoverPosition[\"right\"] = \"right\";\n  PopoverPosition[\"topStart\"] = \"top-start\";\n  PopoverPosition[\"topEnd\"] = \"top-end\";\n  PopoverPosition[\"bottomStart\"] = \"bottom-start\";\n  PopoverPosition[\"bottomEnd\"] = \"bottom-end\";\n  PopoverPosition[\"leftStart\"] = \"left-start\";\n  PopoverPosition[\"leftEnd\"] = \"left-end\";\n  PopoverPosition[\"rightStart\"] = \"right-start\";\n  PopoverPosition[\"rightEnd\"] = \"right-end\";\n})(PopoverPosition || (PopoverPosition = {}));\nconst alertStyle = {\n  default: styles.modifiers.default,\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\nexport const Popover = _a => {\n  var {\n      children,\n      position = 'top',\n      enableFlip = true,\n      className = '',\n      isVisible = null,\n      shouldClose = () => null,\n      shouldOpen = () => null,\n      'aria-label': ariaLabel = '',\n      bodyContent,\n      headerContent = null,\n      headerComponent = 'h6',\n      headerIcon = null,\n      alertSeverityVariant,\n      alertSeverityScreenReaderText,\n      footerContent = null,\n      appendTo = () => document.body,\n      hideOnOutsideClick = true,\n      onHide = () => null,\n      onHidden = () => null,\n      onShow = () => null,\n      onShown = () => null,\n      onMount = () => null,\n      zIndex = 9999,\n      minWidth = popoverMinWidth && popoverMinWidth.value,\n      maxWidth = popoverMaxWidth && popoverMaxWidth.value,\n      closeBtnAriaLabel = 'Close',\n      showClose = true,\n      distance = 25,\n      flipBehavior = ['top', 'bottom', 'left', 'right', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'left-start', 'left-end', 'right-start', 'right-end'],\n      animationDuration = 300,\n      id,\n      withFocusTrap: propWithFocusTrap,\n      boundary,\n      tippyProps,\n      reference,\n      hasNoPadding = false,\n      hasAutoWidth = false,\n      removeFindDomNode = false\n    } = _a,\n    rest = __rest(_a, [\"children\", \"position\", \"enableFlip\", \"className\", \"isVisible\", \"shouldClose\", \"shouldOpen\", 'aria-label', \"bodyContent\", \"headerContent\", \"headerComponent\", \"headerIcon\", \"alertSeverityVariant\", \"alertSeverityScreenReaderText\", \"footerContent\", \"appendTo\", \"hideOnOutsideClick\", \"onHide\", \"onHidden\", \"onShow\", \"onShown\", \"onMount\", \"zIndex\", \"minWidth\", \"maxWidth\", \"closeBtnAriaLabel\", \"showClose\", \"distance\", \"flipBehavior\", \"animationDuration\", \"id\", \"withFocusTrap\", \"boundary\", \"tippyProps\", \"reference\", \"hasNoPadding\", \"hasAutoWidth\", \"removeFindDomNode\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined && console.warn('The Popover boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.');\n    tippyProps !== undefined && console.warn('The Popover tippyProps prop has been deprecated and is no longer used.');\n  }\n  // could make this a prop in the future (true | false | 'toggle')\n  // const hideOnClick = true;\n  const uniqueId = id || getUniqueId();\n  const triggerManually = isVisible !== null;\n  const [visible, setVisible] = React.useState(false);\n  const [opacity, setOpacity] = React.useState(0);\n  const [focusTrapActive, setFocusTrapActive] = React.useState(Boolean(propWithFocusTrap));\n  const transitionTimerRef = React.useRef(null);\n  const showTimerRef = React.useRef(null);\n  const hideTimerRef = React.useRef(null);\n  React.useEffect(() => {\n    onMount();\n  }, []);\n  React.useEffect(() => {\n    if (triggerManually) {\n      if (isVisible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  }, [isVisible, triggerManually]);\n  const show = withFocusTrap => {\n    onShow();\n    if (transitionTimerRef.current) {\n      clearTimeout(transitionTimerRef.current);\n    }\n    if (hideTimerRef.current) {\n      clearTimeout(hideTimerRef.current);\n    }\n    showTimerRef.current = setTimeout(() => {\n      setVisible(true);\n      setOpacity(1);\n      propWithFocusTrap !== false && withFocusTrap && setFocusTrapActive(true);\n      onShown();\n    }, 0);\n  };\n  const hide = () => {\n    onHide();\n    if (showTimerRef.current) {\n      clearTimeout(showTimerRef.current);\n    }\n    hideTimerRef.current = setTimeout(() => {\n      setVisible(false);\n      setOpacity(0);\n      setFocusTrapActive(false);\n      transitionTimerRef.current = setTimeout(() => {\n        onHidden();\n      }, animationDuration);\n    }, 0);\n  };\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMinWidth = minWidth !== popoverMinWidth.value;\n  const hasCustomMaxWidth = maxWidth !== popoverMaxWidth.value;\n  const onDocumentKeyDown = event => {\n    if (event.key === KeyTypes.Escape && visible) {\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onDocumentClick = (event, triggerElement, popperElement) => {\n    if (hideOnOutsideClick && visible) {\n      // check if we clicked within the popper, if so don't do anything\n      const isChild = popperElement && popperElement.contains(event.target);\n      if (isChild) {\n        // clicked within the popper\n        return;\n      }\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onTriggerClick = event => {\n    if (triggerManually) {\n      if (visible) {\n        shouldClose(null, hide, event);\n      } else {\n        shouldOpen(show, event);\n      }\n    } else {\n      if (visible) {\n        hide();\n      } else {\n        show(true);\n      }\n    }\n  };\n  const onContentMouseDown = () => {\n    if (focusTrapActive) {\n      setFocusTrapActive(false);\n    }\n  };\n  const closePopover = event => {\n    event.stopPropagation();\n    if (triggerManually) {\n      shouldClose(null, hide, event);\n    } else {\n      hide();\n    }\n  };\n  const content = React.createElement(FocusTrap, Object.assign({\n    active: focusTrapActive,\n    focusTrapOptions: {\n      returnFocusOnDeactivate: true,\n      clickOutsideDeactivates: true,\n      tabbableOptions: {\n        displayCheck: 'none'\n      },\n      fallbackFocus: () => {\n        // If the popover's trigger is focused but scrolled out of view,\n        // FocusTrap will throw an error when the Enter button is used on the trigger.\n        // That is because the Popover is hidden when its trigger is out of view.\n        // Provide a fallback in that case.\n        let node = null;\n        if (document && document.activeElement) {\n          node = document.activeElement;\n        }\n        return node;\n      }\n    },\n    preventScrollOnDeactivate: true,\n    className: css(styles.popover, alertSeverityVariant && alertStyle[alertSeverityVariant], hasNoPadding && styles.modifiers.noPadding, hasAutoWidth && styles.modifiers.widthAuto, className),\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": headerContent ? undefined : ariaLabel,\n    \"aria-labelledby\": headerContent ? `popover-${uniqueId}-header` : undefined,\n    \"aria-describedby\": `popover-${uniqueId}-body`,\n    onMouseDown: onContentMouseDown,\n    style: {\n      minWidth: hasCustomMinWidth ? minWidth : null,\n      maxWidth: hasCustomMaxWidth ? maxWidth : null,\n      opacity,\n      transition: getOpacityTransition(animationDuration)\n    }\n  }, rest), React.createElement(PopoverArrow, null), React.createElement(PopoverContent, null, showClose && React.createElement(PopoverCloseButton, {\n    onClose: closePopover,\n    \"aria-label\": closeBtnAriaLabel\n  }), headerContent && React.createElement(PopoverHeader, {\n    id: `popover-${uniqueId}-header`,\n    icon: headerIcon,\n    alertSeverityVariant: alertSeverityVariant,\n    alertSeverityScreenReaderText: alertSeverityScreenReaderText || `${alertSeverityVariant} alert:`,\n    titleHeadingLevel: headerComponent\n  }, typeof headerContent === 'function' ? headerContent(hide) : headerContent), React.createElement(PopoverBody, {\n    id: `popover-${uniqueId}-body`\n  }, typeof bodyContent === 'function' ? bodyContent(hide) : bodyContent), footerContent && React.createElement(PopoverFooter, {\n    id: `popover-${uniqueId}-footer`\n  }, typeof footerContent === 'function' ? footerContent(hide) : footerContent)));\n  return React.createElement(PopoverContext.Provider, {\n    value: {\n      headerComponent\n    }\n  }, React.createElement(Popper, {\n    trigger: children,\n    reference: reference,\n    popper: content,\n    popperMatchesTriggerWidth: false,\n    appendTo: appendTo,\n    isVisible: visible,\n    positionModifiers: positionModifiers,\n    distance: distance,\n    placement: position,\n    onTriggerClick: onTriggerClick,\n    onDocumentClick: onDocumentClick,\n    onDocumentKeyDown: onDocumentKeyDown,\n    enableFlip: enableFlip,\n    zIndex: zIndex,\n    flipBehavior: flipBehavior,\n    removeFindDomNode: removeFindDomNode\n  }));\n};\nPopover.displayName = 'Popover';","map":{"version":3,"names":["React","KeyTypes","styles","css","PopoverContext","PopoverContent","PopoverBody","PopoverHeader","PopoverFooter","PopoverCloseButton","PopoverArrow","popoverMaxWidth","popoverMinWidth","FocusTrap","Popper","getOpacityTransition","getUniqueId","PopoverPosition","alertStyle","default","modifiers","info","success","warning","danger","Popover","_a","children","position","enableFlip","className","isVisible","shouldClose","shouldOpen","ariaLabel","bodyContent","headerContent","headerComponent","headerIcon","alertSeverityVariant","alertSeverityScreenReaderText","footerContent","appendTo","document","body","hideOnOutsideClick","onHide","onHidden","onShow","onShown","onMount","zIndex","minWidth","value","maxWidth","closeBtnAriaLabel","showClose","distance","flipBehavior","animationDuration","id","withFocusTrap","propWithFocusTrap","boundary","tippyProps","reference","hasNoPadding","hasAutoWidth","removeFindDomNode","rest","__rest","process","env","NODE_ENV","undefined","console","warn","uniqueId","triggerManually","visible","setVisible","useState","opacity","setOpacity","focusTrapActive","setFocusTrapActive","Boolean","transitionTimerRef","useRef","showTimerRef","hideTimerRef","useEffect","show","hide","current","clearTimeout","setTimeout","positionModifiers","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","leftTop","leftBottom","rightTop","rightBottom","hasCustomMinWidth","hasCustomMaxWidth","onDocumentKeyDown","event","key","Escape","onDocumentClick","triggerElement","popperElement","isChild","contains","target","onTriggerClick","onContentMouseDown","closePopover","stopPropagation","content","createElement","Object","assign","active","focusTrapOptions","returnFocusOnDeactivate","clickOutsideDeactivates","tabbableOptions","displayCheck","fallbackFocus","node","activeElement","preventScrollOnDeactivate","popover","noPadding","widthAuto","role","onMouseDown","style","transition","onClose","icon","titleHeadingLevel","Provider","trigger","popper","popperMatchesTriggerWidth","placement","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Popover\\Popover.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverContext } from './PopoverContext';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverBody } from './PopoverBody';\nimport { PopoverHeader } from './PopoverHeader';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverCloseButton } from './PopoverCloseButton';\nimport { PopoverArrow } from './PopoverArrow';\nimport popoverMaxWidth from '@patternfly/react-tokens/dist/esm/c_popover_MaxWidth';\nimport popoverMinWidth from '@patternfly/react-tokens/dist/esm/c_popover_MinWidth';\nimport { ReactElement } from 'react';\nimport { FocusTrap } from '../../helpers';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nimport { getUniqueId } from '../../helpers/util';\nimport { Instance as TippyInstance, Props as TippyProps } from '../../helpers/Popper/DeprecatedTippyTypes';\n\nexport enum PopoverPosition {\n  auto = 'auto',\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n  topStart = 'top-start',\n  topEnd = 'top-end',\n  bottomStart = 'bottom-start',\n  bottomEnd = 'bottom-end',\n  leftStart = 'left-start',\n  leftEnd = 'left-end',\n  rightStart = 'right-start',\n  rightEnd = 'right-end'\n}\n\n/** The main popover component. The following properties can also be passed into another component\n * that has a property specifically for passing in popover properties.\n */\n\nexport interface PopoverProps {\n  /** Text announced by screen reader when alert severity variant is set to indicate\n   * severity level.\n   */\n  alertSeverityScreenReaderText?: string;\n  /** Severity variants for an alert popover. This modifies the color of the header to\n   * match the severity.\n   */\n  alertSeverityVariant?: 'default' | 'info' | 'warning' | 'success' | 'danger';\n  /** The duration of the CSS fade transition animation. */\n  animationDuration?: number;\n  /** The element to append the popover to. Defaults to \"document.body\". */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Accessible label for the popover, required when header is not present. */\n  'aria-label'?: string;\n  /**\n   * Body content of the popover. If you want to close the popover after an action within the\n   * body content, you can use the isVisible prop for manual control, or you can provide a\n   * function which will receive a callback as an argument to hide the popover, i.e.\n   * bodyContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  bodyContent: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /** @deprecated - no longer used. if you want to constrain the popper to a specific element\n   * use the appendTo prop instead.\n   */\n  boundary?: 'scrollParent' | 'window' | 'viewport' | HTMLElement;\n  /**\n   * The reference element to which the popover is relatively placed to. If you cannot wrap\n   * the reference with the Popover, you can use the reference prop instead.\n   * Usage: <Popover><Button>Reference</Button></Popover>\n   */\n  children?: ReactElement<any>;\n  /** Additional classes added to the popover. */\n  className?: string;\n  /** Accessible label for the close button. */\n  closeBtnAriaLabel?: string;\n  /** Distance of the popover to its target. Defaults to 25. */\n  distance?: number;\n  /**\n   * If true, tries to keep the popover in view by flipping it if necessary.\n   * If the position is set to 'auto', this prop is ignored.\n   */\n  enableFlip?: boolean;\n  /**\n   * The desired position to flip the popover to if the initial position is not possible.\n   * By setting this prop to 'flip' it attempts to flip the popover to the opposite side if\n   * there is no space.\n   * You can also pass an array of positions that determines the flip order. It should contain\n   * the initial position followed by alternative positions if that position is unavailable.\n   * Example: Initial position is 'top'. Button with popover is in the top right corner.\n   * 'flipBehavior' is set to ['top', 'right', 'left']. Since there is no space to the top, it\n   * checks if right is available. There's also no space to the right, so it finally shows the\n   * popover on the left.\n   */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n  /**\n   * Footer content of the popover. If you want to close the popover after an action within the\n   * footer content, you can use the isVisible prop for manual control, or you can provide a\n   * function which will receive a callback as an argument to hide the popover, i.e.\n   * footerContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  footerContent?: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /** Removes fixed-width and allows width to be defined by contents. */\n  hasAutoWidth?: boolean;\n  /** Allows content to touch edges of popover container. */\n  hasNoPadding?: boolean;\n  /** Sets the heading level to use for the popover header. Defaults to h6. */\n  headerComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /**\n   * Simple header content to be placed within a title. If you want to close the popover after\n   * an action within the header content, you can use the isVisible prop for manual control,\n   * or you can provide a function which will receive a callback as an argument to hide the\n   * popover, i.e. headerContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  headerContent?: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /** Icon to be displayed in the popover header. **/\n  headerIcon?: React.ReactNode;\n  /** Hides the popover when a click occurs outside (only works if isVisible is not controlled\n   * by the user).\n   */\n  hideOnOutsideClick?: boolean;\n  /** Id used as part of the various popover elements (popover-${id}-header/body/footer). */\n  id?: string;\n  /**\n   * True to show the popover programmatically. Used in conjunction with the shouldClose prop.\n   * By default, the popover child element handles click events automatically. If you want to\n   * control this programmatically, the popover will not auto-close if the close button is\n   * clicked, the escape key is used, or if a click occurs outside the popover. Instead, the\n   * consumer is responsible for closing the popover themselves by adding a callback listener\n   * for the shouldClose prop.\n   */\n  isVisible?: boolean;\n  /** Maximum width of the popover (default 18.75rem). */\n  maxWidth?: string;\n  /** Minimum width of the popover (default 6.25rem). */\n  minWidth?: string;\n  /**\n   * Lifecycle function invoked when the popover has fully transitioned out.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onHidden?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover begins to transition out.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onHide?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover has been mounted to the DOM.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onMount?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover begins to transition in.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onShow?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover has fully transitioned in.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onShown?: (tip?: TippyInstance) => void;\n  /**\n   * Popover position. Note: With the enableFlip property set to true, it will change the\n   * position if there is not enough space for the starting position. The behavior of where it\n   * flips to can be controlled through the flipBehavior property.\n   */\n  position?:\n    | PopoverPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /**\n   * The reference element to which the popover is relatively placed to. If you can wrap the\n   * reference with the popover, you can use the children prop instead.\n   * Usage: <Popover reference={() => document.getElementById('reference-element')} />\n   */\n  reference?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** @beta Opt-in for updated popper that does not use findDOMNode. */\n  removeFindDomNode?: boolean;\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the\n   * popover close button is clicked, the enter key was used on it, or the escape key is used.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  shouldClose?: (tip?: TippyInstance, hideFunction?: () => void, event?: MouseEvent | KeyboardEvent) => void;\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the\n   * enter key is used on the focused trigger.\n   */\n  shouldOpen?: (showFunction?: () => void, event?: MouseEvent | KeyboardEvent) => void;\n  /** Flag indicating whether the close button should be shown. */\n  showClose?: boolean;\n  /** @deprecated - no longer used. */\n  tippyProps?: Partial<TippyProps>;\n  /** Whether to trap focus in the popover. */\n  withFocusTrap?: boolean;\n  /** The z-index of the popover. */\n  zIndex?: number;\n}\n\nconst alertStyle = {\n  default: styles.modifiers.default,\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\n\nexport const Popover: React.FunctionComponent<PopoverProps> = ({\n  children,\n  position = 'top',\n  enableFlip = true,\n  className = '',\n  isVisible = null as boolean,\n  shouldClose = (): void => null,\n  shouldOpen = (): void => null,\n  'aria-label': ariaLabel = '',\n  bodyContent,\n  headerContent = null,\n  headerComponent = 'h6',\n  headerIcon = null,\n  alertSeverityVariant,\n  alertSeverityScreenReaderText,\n  footerContent = null,\n  appendTo = () => document.body,\n  hideOnOutsideClick = true,\n  onHide = (): void => null,\n  onHidden = (): void => null,\n  onShow = (): void => null,\n  onShown = (): void => null,\n  onMount = (): void => null,\n  zIndex = 9999,\n  minWidth = popoverMinWidth && popoverMinWidth.value,\n  maxWidth = popoverMaxWidth && popoverMaxWidth.value,\n  closeBtnAriaLabel = 'Close',\n  showClose = true,\n  distance = 25,\n  flipBehavior = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'top-start',\n    'top-end',\n    'bottom-start',\n    'bottom-end',\n    'left-start',\n    'left-end',\n    'right-start',\n    'right-end'\n  ],\n  animationDuration = 300,\n  id,\n  withFocusTrap: propWithFocusTrap,\n  boundary,\n  tippyProps,\n  reference,\n  hasNoPadding = false,\n  hasAutoWidth = false,\n  removeFindDomNode = false,\n  ...rest\n}: PopoverProps) => {\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined &&\n      console.warn(\n        'The Popover boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.'\n      );\n    tippyProps !== undefined && console.warn('The Popover tippyProps prop has been deprecated and is no longer used.');\n  }\n  // could make this a prop in the future (true | false | 'toggle')\n  // const hideOnClick = true;\n  const uniqueId = id || getUniqueId();\n  const triggerManually = isVisible !== null;\n  const [visible, setVisible] = React.useState(false);\n  const [opacity, setOpacity] = React.useState(0);\n  const [focusTrapActive, setFocusTrapActive] = React.useState(Boolean(propWithFocusTrap));\n  const transitionTimerRef = React.useRef(null);\n  const showTimerRef = React.useRef(null);\n  const hideTimerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    onMount();\n  }, []);\n  React.useEffect(() => {\n    if (triggerManually) {\n      if (isVisible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  }, [isVisible, triggerManually]);\n  const show = (withFocusTrap?: boolean) => {\n    onShow();\n    if (transitionTimerRef.current) {\n      clearTimeout(transitionTimerRef.current);\n    }\n    if (hideTimerRef.current) {\n      clearTimeout(hideTimerRef.current);\n    }\n    showTimerRef.current = setTimeout(() => {\n      setVisible(true);\n      setOpacity(1);\n      propWithFocusTrap !== false && withFocusTrap && setFocusTrapActive(true);\n      onShown();\n    }, 0);\n  };\n  const hide = () => {\n    onHide();\n    if (showTimerRef.current) {\n      clearTimeout(showTimerRef.current);\n    }\n    hideTimerRef.current = setTimeout(() => {\n      setVisible(false);\n      setOpacity(0);\n      setFocusTrapActive(false);\n      transitionTimerRef.current = setTimeout(() => {\n        onHidden();\n      }, animationDuration);\n    }, 0);\n  };\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMinWidth = minWidth !== popoverMinWidth.value;\n  const hasCustomMaxWidth = maxWidth !== popoverMaxWidth.value;\n  const onDocumentKeyDown = (event: KeyboardEvent) => {\n    if (event.key === KeyTypes.Escape && visible) {\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onDocumentClick = (event: MouseEvent, triggerElement: HTMLElement, popperElement: HTMLElement) => {\n    if (hideOnOutsideClick && visible) {\n      // check if we clicked within the popper, if so don't do anything\n      const isChild = popperElement && popperElement.contains(event.target as Node);\n      if (isChild) {\n        // clicked within the popper\n        return;\n      }\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onTriggerClick = (event: MouseEvent) => {\n    if (triggerManually) {\n      if (visible) {\n        shouldClose(null, hide, event);\n      } else {\n        shouldOpen(show, event);\n      }\n    } else {\n      if (visible) {\n        hide();\n      } else {\n        show(true);\n      }\n    }\n  };\n  const onContentMouseDown = () => {\n    if (focusTrapActive) {\n      setFocusTrapActive(false);\n    }\n  };\n  const closePopover = (event: any) => {\n    event.stopPropagation();\n    if (triggerManually) {\n      shouldClose(null, hide, event);\n    } else {\n      hide();\n    }\n  };\n  const content = (\n    <FocusTrap\n      active={focusTrapActive}\n      focusTrapOptions={{\n        returnFocusOnDeactivate: true,\n        clickOutsideDeactivates: true,\n        tabbableOptions: { displayCheck: 'none' },\n        fallbackFocus: () => {\n          // If the popover's trigger is focused but scrolled out of view,\n          // FocusTrap will throw an error when the Enter button is used on the trigger.\n          // That is because the Popover is hidden when its trigger is out of view.\n          // Provide a fallback in that case.\n          let node = null;\n          if (document && document.activeElement) {\n            node = document.activeElement as HTMLElement;\n          }\n          return node;\n        }\n      }}\n      preventScrollOnDeactivate\n      className={css(\n        styles.popover,\n        alertSeverityVariant && alertStyle[alertSeverityVariant],\n        hasNoPadding && styles.modifiers.noPadding,\n        hasAutoWidth && styles.modifiers.widthAuto,\n        className\n      )}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={headerContent ? undefined : ariaLabel}\n      aria-labelledby={headerContent ? `popover-${uniqueId}-header` : undefined}\n      aria-describedby={`popover-${uniqueId}-body`}\n      onMouseDown={onContentMouseDown}\n      style={{\n        minWidth: hasCustomMinWidth ? minWidth : null,\n        maxWidth: hasCustomMaxWidth ? maxWidth : null,\n        opacity,\n        transition: getOpacityTransition(animationDuration)\n      }}\n      {...rest}\n    >\n      <PopoverArrow />\n      <PopoverContent>\n        {showClose && <PopoverCloseButton onClose={closePopover} aria-label={closeBtnAriaLabel} />}\n        {headerContent && (\n          <PopoverHeader\n            id={`popover-${uniqueId}-header`}\n            icon={headerIcon}\n            alertSeverityVariant={alertSeverityVariant}\n            alertSeverityScreenReaderText={alertSeverityScreenReaderText || `${alertSeverityVariant} alert:`}\n            titleHeadingLevel={headerComponent}\n          >\n            {typeof headerContent === 'function' ? headerContent(hide) : headerContent}\n          </PopoverHeader>\n        )}\n        <PopoverBody id={`popover-${uniqueId}-body`}>\n          {typeof bodyContent === 'function' ? bodyContent(hide) : bodyContent}\n        </PopoverBody>\n        {footerContent && (\n          <PopoverFooter id={`popover-${uniqueId}-footer`}>\n            {typeof footerContent === 'function' ? footerContent(hide) : footerContent}\n          </PopoverFooter>\n        )}\n      </PopoverContent>\n    </FocusTrap>\n  );\n\n  return (\n    <PopoverContext.Provider value={{ headerComponent }}>\n      <Popper\n        trigger={children}\n        reference={reference}\n        popper={content}\n        popperMatchesTriggerWidth={false}\n        appendTo={appendTo}\n        isVisible={visible}\n        positionModifiers={positionModifiers}\n        distance={distance}\n        placement={position}\n        onTriggerClick={onTriggerClick}\n        onDocumentClick={onDocumentClick}\n        onDocumentKeyDown={onDocumentKeyDown}\n        enableFlip={enableFlip}\n        zIndex={zIndex}\n        flipBehavior={flipBehavior}\n        removeFindDomNode={removeFindDomNode}\n      />\n    </PopoverContext.Provider>\n  );\n};\nPopover.displayName = 'Popover';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}