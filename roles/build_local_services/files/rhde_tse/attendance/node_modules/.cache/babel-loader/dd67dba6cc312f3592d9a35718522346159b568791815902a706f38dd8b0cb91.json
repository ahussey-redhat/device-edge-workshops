{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class FormSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.props.onChange(event.currentTarget.value, event);\n    };\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        className,\n        value,\n        validated,\n        isDisabled,\n        isRequired,\n        isIconSprite,\n        ouiaId,\n        ouiaSafe\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"value\", \"validated\", \"isDisabled\", \"isRequired\", \"isIconSprite\", \"ouiaId\", \"ouiaSafe\"]);\n    /* find selected option and get placeholder flag */\n    const selectedOption = React.Children.toArray(children).find(option => option.props.value === value);\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    return React.createElement(\"select\", Object.assign({}, props, {\n      className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, className, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, isSelectedPlaceholder && styles.modifiers.placeholder),\n      \"aria-invalid\": validated === ValidatedOptions.error\n    }, getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n      onChange: this.handleChange,\n      disabled: isDisabled,\n      required: isRequired,\n      value: value\n    }), children);\n  }\n}\nFormSelect.displayName = 'FormSelect';\nFormSelect.defaultProps = {\n  className: '',\n  value: '',\n  validated: 'default',\n  isDisabled: false,\n  isRequired: false,\n  isIconSprite: false,\n  onBlur: () => undefined,\n  onFocus: () => undefined,\n  onChange: () => undefined,\n  ouiaSafe: true\n};","map":{"version":3,"names":["React","styles","css","ValidatedOptions","getOUIAProps","getDefaultOUIAId","FormSelect","Component","constructor","props","handleChange","event","onChange","currentTarget","value","id","console","error","state","ouiaStateId","displayName","validated","render","_a","children","className","isDisabled","isRequired","isIconSprite","ouiaId","ouiaSafe","__rest","selectedOption","Children","toArray","find","option","isSelectedPlaceholder","isPlaceholder","createElement","Object","assign","formControl","modifiers","iconSprite","success","warning","placeholder","undefined","disabled","required","defaultProps","onBlur","onFocus"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\FormSelect\\FormSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface FormSelectProps\n  extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'onBlur' | 'onFocus' | 'disabled'>,\n    OUIAProps {\n  /** content rendered inside the FormSelect */\n  children: React.ReactNode;\n  /** additional classes added to the FormSelect control */\n  className?: string;\n  /** value of selected option */\n  value?: any;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** Flag indicating the FormSelect is disabled */\n  isDisabled?: boolean;\n  /** Sets the FormSelect required. */\n  isRequired?: boolean;\n  /** Use the external file instead of a data URI */\n  isIconSprite?: boolean;\n  /** Optional callback for updating when selection loses focus */\n  onBlur?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection gets focus */\n  onFocus?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection changes */\n  onChange?: (value: string, event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Custom flag to show that the FormSelect requires an associated id or aria-label. */\n  'aria-label'?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport class FormSelect extends React.Component<FormSelectProps, { ouiaStateId: string }> {\n  static displayName = 'FormSelect';\n  constructor(props: FormSelectProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n  }\n\n  static defaultProps: PickOptional<FormSelectProps> = {\n    className: '',\n    value: '',\n    validated: 'default',\n    isDisabled: false,\n    isRequired: false,\n    isIconSprite: false,\n    onBlur: (): any => undefined,\n    onFocus: (): any => undefined,\n    onChange: (): any => undefined,\n    ouiaSafe: true\n  };\n\n  handleChange = (event: any) => {\n    this.props.onChange(event.currentTarget.value, event);\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      value,\n      validated,\n      isDisabled,\n      isRequired,\n      isIconSprite,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n    /* find selected option and get placeholder flag */\n    const selectedOption = React.Children.toArray(children).find((option: any) => option.props.value === value) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    return (\n      <select\n        {...props}\n        className={css(\n          styles.formControl,\n          isIconSprite && styles.modifiers.iconSprite,\n          className,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          isSelectedPlaceholder && styles.modifiers.placeholder\n        )}\n        aria-invalid={validated === ValidatedOptions.error}\n        {...getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        onChange={this.handleChange}\n        disabled={isDisabled}\n        required={isRequired}\n        value={value}\n      >\n        {children}\n      </select>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}