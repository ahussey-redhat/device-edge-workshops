{"ast":null,"code":"import { modifierPhases } from '../enums';\n// source: https://stackoverflow.com/questions/49875255\n/**\n * @param modifiers\n */\nfunction order(modifiers) {\n  const map = new Map();\n  const visited = new Set();\n  const result = [];\n  modifiers.forEach(modifier => {\n    map.set(modifier.name, modifier);\n  });\n  // On visiting object, check for its dependencies and visit them recursively\n  /**\n   * @param modifier\n   */\n  function sort(modifier) {\n    visited.add(modifier.name);\n    const requires = [...(modifier.requires || []), ...(modifier.requiresIfExists || [])];\n    requires.forEach(dep => {\n      if (!visited.has(dep)) {\n        const depModifier = map.get(dep);\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n  modifiers.forEach(modifier => {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n/**\n * @param modifiers\n */\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  const orderedModifiers = order(modifiers);\n  // order based on phase\n  return modifierPhases.reduce((acc, phase) => acc.concat(orderedModifiers.filter(modifier => modifier.phase === phase)), []);\n}","map":{"version":3,"names":["modifierPhases","order","modifiers","map","Map","visited","Set","result","forEach","modifier","set","name","sort","add","requires","requiresIfExists","dep","has","depModifier","get","push","orderModifiers","orderedModifiers","reduce","acc","phase","concat","filter"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\helpers\\Popper\\thirdparty\\popper-core\\utils\\orderModifiers.ts"],"sourcesContent":["// @ts-nocheck\nimport { Modifier } from '../types';\nimport { modifierPhases } from '../enums';\n\n// source: https://stackoverflow.com/questions/49875255\n/**\n * @param modifiers\n */\nfunction order(modifiers) {\n  const map = new Map();\n  const visited = new Set();\n  const result = [];\n\n  modifiers.forEach(modifier => {\n    map.set(modifier.name, modifier);\n  });\n\n  // On visiting object, check for its dependencies and visit them recursively\n  /**\n   * @param modifier\n   */\n  function sort(modifier: Modifier<any, any>) {\n    visited.add(modifier.name);\n\n    const requires = [...(modifier.requires || []), ...(modifier.requiresIfExists || [])];\n\n    requires.forEach(dep => {\n      if (!visited.has(dep)) {\n        const depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n\n    result.push(modifier);\n  }\n\n  modifiers.forEach(modifier => {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n\n  return result;\n}\n\n/**\n * @param modifiers\n */\nexport default function orderModifiers(modifiers: Modifier<any, any>[]): Modifier<any, any>[] {\n  // order based on dependencies\n  const orderedModifiers = order(modifiers);\n\n  // order based on phase\n  return modifierPhases.reduce(\n    (acc, phase) => acc.concat(orderedModifiers.filter(modifier => modifier.phase === phase)),\n    []\n  );\n}\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,UAAU;AAEzC;AACA;;;AAGA,SAASC,KAAKA,CAACC,SAAS;EACtB,MAAMC,GAAG,GAAG,IAAIC,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAG,IAAIC,GAAG,EAAE;EACzB,MAAMC,MAAM,GAAG,EAAE;EAEjBL,SAAS,CAACM,OAAO,CAACC,QAAQ,IAAG;IAC3BN,GAAG,CAACO,GAAG,CAACD,QAAQ,CAACE,IAAI,EAAEF,QAAQ,CAAC;EAClC,CAAC,CAAC;EAEF;EACA;;;EAGA,SAASG,IAAIA,CAACH,QAA4B;IACxCJ,OAAO,CAACQ,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;IAE1B,MAAMG,QAAQ,GAAG,CAAC,IAAIL,QAAQ,CAACK,QAAQ,IAAI,EAAE,CAAC,EAAE,IAAIL,QAAQ,CAACM,gBAAgB,IAAI,EAAE,CAAC,CAAC;IAErFD,QAAQ,CAACN,OAAO,CAACQ,GAAG,IAAG;MACrB,IAAI,CAACX,OAAO,CAACY,GAAG,CAACD,GAAG,CAAC,EAAE;QACrB,MAAME,WAAW,GAAGf,GAAG,CAACgB,GAAG,CAACH,GAAG,CAAC;QAEhC,IAAIE,WAAW,EAAE;UACfN,IAAI,CAACM,WAAW,CAAC;;;IAGvB,CAAC,CAAC;IAEFX,MAAM,CAACa,IAAI,CAACX,QAAQ,CAAC;EACvB;EAEAP,SAAS,CAACM,OAAO,CAACC,QAAQ,IAAG;IAC3B,IAAI,CAACJ,OAAO,CAACY,GAAG,CAACR,QAAQ,CAACE,IAAI,CAAC,EAAE;MAC/B;MACAC,IAAI,CAACH,QAAQ,CAAC;;EAElB,CAAC,CAAC;EAEF,OAAOF,MAAM;AACf;AAEA;;;AAGA,eAAc,SAAUc,cAAcA,CAACnB,SAA+B;EACpE;EACA,MAAMoB,gBAAgB,GAAGrB,KAAK,CAACC,SAAS,CAAC;EAEzC;EACA,OAAOF,cAAc,CAACuB,MAAM,CAC1B,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,CAACE,MAAM,CAACJ,gBAAgB,CAACK,MAAM,CAAClB,QAAQ,IAAIA,QAAQ,CAACgB,KAAK,KAAKA,KAAK,CAAC,CAAC,EACzF,EAAE,CACH;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}