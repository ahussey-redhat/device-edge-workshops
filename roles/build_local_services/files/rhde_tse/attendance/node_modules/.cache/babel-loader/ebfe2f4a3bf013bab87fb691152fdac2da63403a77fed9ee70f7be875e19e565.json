{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nexport const MenuList = _a => {\n  var {\n      children = null,\n      className,\n      isAriaMultiselectable = false\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"isAriaMultiselectable\"]);\n  const {\n    role\n  } = React.useContext(MenuContext);\n  return React.createElement(\"ul\", Object.assign({\n    role: role\n  }, role === 'listbox' && {\n    'aria-multiselectable': isAriaMultiselectable\n  }, {\n    className: css(styles.menuList, className)\n  }, props), children);\n};\nMenuList.displayName = 'MenuList';","map":{"version":3,"names":["React","styles","css","MenuContext","MenuList","_a","children","className","isAriaMultiselectable","props","__rest","role","useContext","createElement","Object","assign","menuList","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Menu\\MenuList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\n\nexport interface MenuListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Anything that can be rendered inside of menu list */\n  children: React.ReactNode;\n  /** Additional classes added to the menu list */\n  className?: string;\n  /** @beta Indicates to assistive technologies whether more than one item can be selected\n   * for a non-checkbox menu. Only applies when the menu's role is \"listbox\".\n   */\n  isAriaMultiselectable?: boolean;\n}\n\nexport const MenuList: React.FunctionComponent<MenuListProps> = ({\n  children = null,\n  className,\n  isAriaMultiselectable = false,\n  ...props\n}: MenuListProps) => {\n  const { role } = React.useContext(MenuContext);\n\n  return (\n    <ul\n      role={role}\n      {...(role === 'listbox' && { 'aria-multiselectable': isAriaMultiselectable })}\n      className={css(styles.menuList, className)}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n};\nMenuList.displayName = 'MenuList';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,WAAW,QAAQ,eAAe;AAa3C,OAAO,MAAMC,QAAQ,GAA4CC,EAKjD,IAAI;MAL6C;MAC/DC,QAAQ,GAAG,IAAI;MACfC,SAAS;MACTC,qBAAqB,GAAG;IAAK,IAAAH,EAEf;IADXI,KAAK,GAAAC,MAAA,CAAAL,EAAA,EAJuD,kDAKhE,CADS;EAER,MAAM;IAAEM;EAAI,CAAE,GAAGX,KAAK,CAACY,UAAU,CAACT,WAAW,CAAC;EAE9C,OACEH,KAAA,CAAAa,aAAA,OAAAC,MAAA,CAAAC,MAAA;IACEJ,IAAI,EAAEA;EAAI,GACLA,IAAI,KAAK,SAAS,IAAI;IAAE,sBAAsB,EAAEH;EAAqB,CAAE,EAAC;IAC7ED,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACe,QAAQ,EAAET,SAAS;EAAC,GACtCE,KAAK,GAERH,QAAQ,CACN;AAET,CAAC;AACDF,QAAQ,CAACa,WAAW,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}