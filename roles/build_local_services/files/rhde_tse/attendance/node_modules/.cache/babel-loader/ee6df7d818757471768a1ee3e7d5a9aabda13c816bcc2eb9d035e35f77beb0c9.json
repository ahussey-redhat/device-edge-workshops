{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport const DataListItemRow = _a => {\n  var {\n      children,\n      className = '',\n      rowid = '',\n      wrapModifier = null\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"rowid\", \"wrapModifier\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListItemRow, className, wrapModifier && styles.modifiers[wrapModifier])\n  }, props), React.Children.map(children, child => React.isValidElement(child) && React.cloneElement(child, {\n    rowid\n  })));\n};\nDataListItemRow.displayName = 'DataListItemRow';","map":{"version":3,"names":["React","css","styles","DataListItemRow","_a","children","className","rowid","wrapModifier","props","__rest","createElement","Object","assign","dataListItemRow","modifiers","Children","map","child","isValidElement","cloneElement","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\DataList\\DataListItemRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { DataListWrapModifier } from './DataList';\n\nexport interface DataListItemRowProps extends Omit<React.HTMLProps<HTMLDivElement>, 'children'> {\n  /** Content rendered inside the DataListItemRow  */\n  children: React.ReactNode;\n  /** Additional classes added to the DataListItemRow */\n  className?: string;\n  /** Id for the row item */\n  rowid?: string;\n  /** Determines which wrapping modifier to apply to the DataListItemRow */\n  wrapModifier?: DataListWrapModifier | 'nowrap' | 'truncate' | 'breakWord';\n}\n\nexport const DataListItemRow: React.FunctionComponent<DataListItemRowProps> = ({\n  children,\n  className = '',\n  rowid = '',\n  wrapModifier = null,\n  ...props\n}: DataListItemRowProps) => (\n  <div className={css(styles.dataListItemRow, className, wrapModifier && styles.modifiers[wrapModifier])} {...props}>\n    {React.Children.map(\n      children,\n      child =>\n        React.isValidElement(child) &&\n        React.cloneElement(child as React.ReactElement<any>, {\n          rowid\n        })\n    )}\n  </div>\n);\nDataListItemRow.displayName = 'DataListItemRow';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAc/E,OAAO,MAAMC,eAAe,GAAmDC,EAMxD,IAAI;MANoD;MAC7EC,QAAQ;MACRC,SAAS,GAAG,EAAE;MACdC,KAAK,GAAG,EAAE;MACVC,YAAY,GAAG;IAAI,IAAAJ,EAEE;IADlBK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EALqE,kDAM9E,CADS;EACkB,OAC1BJ,KAAA,CAAAW,aAAA,QAAAC,MAAA,CAAAC,MAAA;IAAKP,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACY,eAAe,EAAER,SAAS,EAAEE,YAAY,IAAIN,MAAM,CAACa,SAAS,CAACP,YAAY,CAAC;EAAC,GAAMC,KAAK,GAC9GT,KAAK,CAACgB,QAAQ,CAACC,GAAG,CACjBZ,QAAQ,EACRa,KAAK,IACHlB,KAAK,CAACmB,cAAc,CAACD,KAAK,CAAC,IAC3BlB,KAAK,CAACoB,YAAY,CAACF,KAAgC,EAAE;IACnDX;GACD,CAAC,CACL,CACG;CACP;AACDJ,eAAe,CAACkB,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}