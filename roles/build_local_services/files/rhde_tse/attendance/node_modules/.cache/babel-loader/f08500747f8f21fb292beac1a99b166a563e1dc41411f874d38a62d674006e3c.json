{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { MenuContext, MenuItemContext } from './MenuContext';\nconst MenuItemActionBase = _a => {\n  var {\n      className = '',\n      icon,\n      onClick,\n      'aria-label': ariaLabel,\n      isFavorited = null,\n      isDisabled,\n      actionId,\n      innerRef\n    } = _a,\n    props = __rest(_a, [\"className\", \"icon\", \"onClick\", 'aria-label', \"isFavorited\", \"isDisabled\", \"actionId\", \"innerRef\"]);\n  return React.createElement(MenuContext.Consumer, null, _ref => {\n    let {\n      onActionClick\n    } = _ref;\n    return React.createElement(MenuItemContext.Consumer, null, _ref2 => {\n      let {\n        itemId,\n        isDisabled: isDisabledContext\n      } = _ref2;\n      const onClickButton = event => {\n        // event specified on the MenuItemAction\n        onClick && onClick(event);\n        // event specified on the Menu\n        onActionClick && onActionClick(event, itemId, actionId);\n      };\n      return React.createElement(\"button\", Object.assign({\n        className: css(styles.menuItemAction, isFavorited !== null && styles.modifiers.favorite, isFavorited && styles.modifiers.favorited, className),\n        \"aria-label\": ariaLabel,\n        onClick: onClickButton\n      }, (isDisabled === true || isDisabledContext === true) && {\n        disabled: true\n      }, {\n        ref: innerRef,\n        tabIndex: -1\n      }, props), React.createElement(\"span\", {\n        className: css(styles.menuItemActionIcon)\n      }, icon === 'favorites' || isFavorited !== null ? React.createElement(StarIcon, {\n        \"aria-hidden\": true\n      }) : icon));\n    });\n  });\n};\nexport const MenuItemAction = React.forwardRef((props, ref) => React.createElement(MenuItemActionBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nMenuItemAction.displayName = 'MenuItemAction';","map":{"version":3,"names":["React","styles","css","StarIcon","MenuContext","MenuItemContext","MenuItemActionBase","_a","className","icon","onClick","ariaLabel","isFavorited","isDisabled","actionId","innerRef","props","__rest","createElement","Consumer","_ref","onActionClick","_ref2","itemId","isDisabledContext","onClickButton","event","Object","assign","menuItemAction","modifiers","favorite","favorited","disabled","ref","tabIndex","menuItemActionIcon","MenuItemAction","forwardRef","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Menu\\MenuItemAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { MenuContext, MenuItemContext } from './MenuContext';\n\nexport interface MenuItemActionProps extends Omit<React.HTMLProps<HTMLButtonElement>, 'type' | 'ref'> {\n  /** Additional classes added to the action button */\n  className?: string;\n  /** The action icon to use */\n  icon?: 'favorites' | React.ReactNode;\n  /** Callback on action click, can also specify onActionClick on the Menu instead */\n  onClick?: (event?: any) => void;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** Flag indicating if the item is favorited */\n  isFavorited?: boolean;\n  /** Disables action, can also be specified on the MenuItem instead */\n  isDisabled?: boolean;\n  /** Identifies the action item in the onActionClick on the Menu */\n  actionId?: any;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst MenuItemActionBase: React.FunctionComponent<MenuItemActionProps> = ({\n  className = '',\n  icon,\n  onClick,\n  'aria-label': ariaLabel,\n  isFavorited = null,\n  isDisabled,\n  actionId,\n  innerRef,\n  ...props\n}: MenuItemActionProps) => (\n  <MenuContext.Consumer>\n    {({ onActionClick }) => (\n      <MenuItemContext.Consumer>\n        {({ itemId, isDisabled: isDisabledContext }) => {\n          const onClickButton = (event: any) => {\n            // event specified on the MenuItemAction\n            onClick && onClick(event);\n            // event specified on the Menu\n            onActionClick && onActionClick(event, itemId, actionId);\n          };\n          return (\n            <button\n              className={css(\n                styles.menuItemAction,\n                isFavorited !== null && styles.modifiers.favorite,\n                isFavorited && styles.modifiers.favorited,\n                className\n              )}\n              aria-label={ariaLabel}\n              onClick={onClickButton}\n              {...((isDisabled === true || isDisabledContext === true) && { disabled: true })}\n              ref={innerRef}\n              tabIndex={-1}\n              {...props}\n            >\n              <span className={css(styles.menuItemActionIcon)}>\n                {icon === 'favorites' || isFavorited !== null ? <StarIcon aria-hidden /> : icon}\n              </span>\n            </button>\n          );\n        }}\n      </MenuItemContext.Consumer>\n    )}\n  </MenuContext.Consumer>\n);\n\nexport const MenuItemAction = React.forwardRef((props: MenuItemActionProps, ref: React.Ref<HTMLButtonElement>) => (\n  <MenuItemActionBase {...props} innerRef={ref} />\n));\nMenuItemAction.displayName = 'MenuItemAction';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,mDAAmD;AACtE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,QAAQ,MAAM,kDAAkD;AACvE,SAASC,WAAW,EAAEC,eAAe,QAAQ,eAAe;AAqB5D,MAAMC,kBAAkB,GAAkDC,EAUpD,IAAI;MAVgD;MACxEC,SAAS,GAAG,EAAE;MACdC,IAAI;MACJC,OAAO;MACP,YAAY,EAAEC,SAAS;MACvBC,WAAW,GAAG,IAAI;MAClBC,UAAU;MACVC,QAAQ;MACRC;IAAQ,IAAAR,EAEY;IADjBS,KAAK,GAAAC,MAAA,CAAAV,EAAA,EATgE,mGAUzE,CADS;EACiB,OACzBP,KAAA,CAAAkB,aAAA,CAACd,WAAW,CAACe,QAAQ,QAClBC,IAAA;IAAA,IAAC;MAAEC;IAAa,CAAE,GAAAD,IAAA;IAAA,OACjBpB,KAAA,CAAAkB,aAAA,CAACb,eAAe,CAACc,QAAQ,QACtBG,KAAA,IAA8C;MAAA,IAA7C;QAAEC,MAAM;QAAEV,UAAU,EAAEW;MAAiB,CAAE,GAAAF,KAAA;MACzC,MAAMG,aAAa,GAAIC,KAAU,IAAI;QACnC;QACAhB,OAAO,IAAIA,OAAO,CAACgB,KAAK,CAAC;QACzB;QACAL,aAAa,IAAIA,aAAa,CAACK,KAAK,EAAEH,MAAM,EAAET,QAAQ,CAAC;MACzD,CAAC;MACD,OACEd,KAAA,CAAAkB,aAAA,WAAAS,MAAA,CAAAC,MAAA;QACEpB,SAAS,EAAEN,GAAG,CACZD,MAAM,CAAC4B,cAAc,EACrBjB,WAAW,KAAK,IAAI,IAAIX,MAAM,CAAC6B,SAAS,CAACC,QAAQ,EACjDnB,WAAW,IAAIX,MAAM,CAAC6B,SAAS,CAACE,SAAS,EACzCxB,SAAS,CACV;QAAA,cACWG,SAAS;QACrBD,OAAO,EAAEe;MAAa,GACjB,CAACZ,UAAU,KAAK,IAAI,IAAIW,iBAAiB,KAAK,IAAI,KAAK;QAAES,QAAQ,EAAE;MAAI,CAAE,EAAC;QAC/EC,GAAG,EAAEnB,QAAQ;QACboB,QAAQ,EAAE,CAAC;MAAC,GACRnB,KAAK,GAEThB,KAAA,CAAAkB,aAAA;QAAMV,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACmC,kBAAkB;MAAC,GAC5C3B,IAAI,KAAK,WAAW,IAAIG,WAAW,KAAK,IAAI,GAAGZ,KAAA,CAAAkB,aAAA,CAACf,QAAQ;QAAA;MAAA,EAAe,GAAGM,IAAI,CAC1E,CACA;IAEb,CAAC,CACwB;EAAA,CAC5B,CACoB;CACxB;AAED,OAAO,MAAM4B,cAAc,GAAGrC,KAAK,CAACsC,UAAU,CAAC,CAACtB,KAA0B,EAAEkB,GAAiC,KAC3GlC,KAAA,CAAAkB,aAAA,CAACZ,kBAAkB,EAAAqB,MAAA,CAAAC,MAAA,KAAKZ,KAAK;EAAED,QAAQ,EAAEmB;AAAG,GAC7C,CAAC;AACFG,cAAc,CAACE,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}