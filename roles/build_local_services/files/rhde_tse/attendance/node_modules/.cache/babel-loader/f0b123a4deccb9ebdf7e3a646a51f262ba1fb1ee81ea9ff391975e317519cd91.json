{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_alert__title_max_lines';\nimport { Tooltip } from '../Tooltip';\nimport { AlertToggleExpandButton } from './AlertToggleExpandButton';\nexport var AlertVariant;\n(function (AlertVariant) {\n  AlertVariant[\"success\"] = \"success\";\n  AlertVariant[\"danger\"] = \"danger\";\n  AlertVariant[\"warning\"] = \"warning\";\n  AlertVariant[\"info\"] = \"info\";\n  AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\nexport const Alert = _a => {\n  var {\n      variant = AlertVariant.default,\n      isInline = false,\n      isPlain = false,\n      isLiveRegion = false,\n      variantLabel = `${capitalize(variant)} alert:`,\n      'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n      actionClose,\n      actionLinks,\n      title,\n      titleHeadingLevel,\n      component = 'h4',\n      children = '',\n      className = '',\n      ouiaId,\n      ouiaSafe = true,\n      timeout = false,\n      timeoutAnimation = 3000,\n      onTimeout = () => {},\n      truncateTitle = 0,\n      tooltipPosition,\n      customIcon,\n      isExpandable = false,\n      toggleAriaLabel = `${capitalize(variant)} alert details`,\n      onMouseEnter = () => {},\n      onMouseLeave = () => {},\n      id\n    } = _a,\n    props = __rest(_a, [\"variant\", \"isInline\", \"isPlain\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"titleHeadingLevel\", \"component\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"timeoutAnimation\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\", \"customIcon\", \"isExpandable\", \"toggleAriaLabel\", \"onMouseEnter\", \"onMouseLeave\", \"id\"]);\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: css(accessibleStyles.screenReader)\n  }, variantLabel), title);\n  const titleRef = React.useRef(null);\n  const TitleComponent = titleHeadingLevel || component;\n  if (titleHeadingLevel !== undefined) {\n    // eslint-disable-next-line no-console\n    console.warn('Alert: titleHeadingLevel is deprecated, please use the newer component prop instead to set the alert title element.');\n  }\n  const divRef = React.useRef();\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const [timedOut, setTimedOut] = useState(false);\n  const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState();\n  const [containsFocus, setContainsFocus] = useState();\n  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(() => {\n    const calculatedTimeout = timeout === true ? 8000 : Number(timeout);\n    if (calculatedTimeout > 0) {\n      const timer = setTimeout(() => setTimedOut(true), calculatedTimeout);\n      return () => clearTimeout(timer);\n    }\n  }, [timeout]);\n  React.useEffect(() => {\n    const onDocumentFocus = () => {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n    document.addEventListener('focus', onDocumentFocus, true);\n    return () => document.removeEventListener('focus', onDocumentFocus, true);\n  }, [containsFocus]);\n  React.useEffect(() => {\n    if (containsFocus === false || isMouseOver === false) {\n      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n      return () => clearTimeout(timer);\n    }\n  }, [containsFocus, isMouseOver, timeoutAnimation]);\n  React.useEffect(() => {\n    dismissed && onTimeout();\n  }, [dismissed, onTimeout]);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const onToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const myOnMouseEnter = ev => {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n  const myOnMouseLeave = ev => {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n  if (dismissed) {\n    return null;\n  }\n  const Title = React.createElement(TitleComponent, Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)\n  }), getHeadingContent);\n  return React.createElement(\"div\", Object.assign({\n    ref: divRef,\n    className: css(styles.alert, isInline && styles.modifiers.inline, isPlain && styles.modifiers.plain, isExpandable && styles.modifiers.expandable, isExpanded && styles.modifiers.expanded, styles.modifiers[variant], className),\n    \"aria-label\": ariaLabel\n  }, ouiaProps, isLiveRegion && {\n    'aria-live': 'polite',\n    'aria-atomic': 'false'\n  }, {\n    onMouseEnter: myOnMouseEnter,\n    onMouseLeave: myOnMouseLeave,\n    id: id\n  }, props), isExpandable && React.createElement(AlertContext.Provider, {\n    value: {\n      title,\n      variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertToggle)\n  }, React.createElement(AlertToggleExpandButton, {\n    isExpanded: isExpanded,\n    onToggleExpand: onToggleExpand,\n    \"aria-label\": toggleAriaLabel\n  }))), React.createElement(AlertIcon, {\n    variant: variant,\n    customIcon: customIcon\n  }), isTooltipVisible ? React.createElement(Tooltip, {\n    content: getHeadingContent,\n    position: tooltipPosition\n  }, Title) : Title, actionClose && React.createElement(AlertContext.Provider, {\n    value: {\n      title,\n      variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertAction)\n  }, actionClose)), children && (!isExpandable || isExpandable && isExpanded) && React.createElement(\"div\", {\n    className: css(styles.alertDescription)\n  }, children), actionLinks && React.createElement(\"div\", {\n    className: css(styles.alertActionGroup)\n  }, actionLinks));\n};\nAlert.displayName = 'Alert';","map":{"version":3,"names":["React","useState","css","styles","accessibleStyles","AlertIcon","capitalize","useOUIAProps","AlertContext","maxLines","Tooltip","AlertToggleExpandButton","AlertVariant","Alert","_a","variant","default","isInline","isPlain","isLiveRegion","variantLabel","ariaLabel","actionClose","actionLinks","title","titleHeadingLevel","component","children","className","ouiaId","ouiaSafe","timeout","timeoutAnimation","onTimeout","truncateTitle","tooltipPosition","customIcon","isExpandable","toggleAriaLabel","onMouseEnter","onMouseLeave","id","props","__rest","ouiaProps","displayName","getHeadingContent","createElement","Fragment","screenReader","titleRef","useRef","TitleComponent","undefined","console","warn","divRef","isTooltipVisible","setIsTooltipVisible","useEffect","current","style","setProperty","name","toString","showTooltip","offsetHeight","scrollHeight","timedOut","setTimedOut","timedOutAnimation","setTimedOutAnimation","isMouseOver","setIsMouseOver","containsFocus","setContainsFocus","dismissed","calculatedTimeout","Number","timer","setTimeout","clearTimeout","onDocumentFocus","contains","document","activeElement","addEventListener","removeEventListener","isExpanded","setIsExpanded","onToggleExpand","myOnMouseEnter","ev","myOnMouseLeave","Title","Object","assign","tabIndex","ref","alertTitle","modifiers","truncate","alert","inline","plain","expandable","expanded","Provider","value","alertToggle","content","position","alertAction","alertDescription","alertActionGroup"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Alert\\Alert.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps, OUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_alert__title_max_lines';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport { AlertToggleExpandButton } from './AlertToggleExpandButton';\n\nexport enum AlertVariant {\n  success = 'success',\n  danger = 'danger',\n  warning = 'warning',\n  info = 'info',\n  default = 'default'\n}\n\n/** The main alert component. */\n\nexport interface AlertProps extends Omit<React.HTMLProps<HTMLDivElement>, 'action' | 'title'>, OUIAProps {\n  /** Close button; use the alert action close button component.  */\n  actionClose?: React.ReactNode;\n  /** Action links; use a single alert action link component or multiple wrapped in an array\n   * or React.Fragment.\n   */\n  actionLinks?: React.ReactNode;\n  /** Adds accessible text to the alert. */\n  'aria-label'?: string;\n  /** Content rendered inside the alert. */\n  children?: React.ReactNode;\n  /** Additional classes to add to the alert.  */\n  className?: string;\n  /** Set a custom icon to the alert. If not set the icon is set according to the variant. */\n  customIcon?: React.ReactNode;\n  /** Uniquely identifies the alert. */\n  id?: string;\n  /** Flag indicating that the alert is expandable. */\n  isExpandable?: boolean;\n  /** Flag to indicate if the alert is inline. */\n  isInline?: boolean;\n  /** Flag to indicate if the alert is in a live region. */\n  isLiveRegion?: boolean;\n  /** Flag to indicate if the alert is plain. */\n  isPlain?: boolean;\n  /** Function to be executed on alert timeout. Relevant when the timeout prop is set. */\n  onTimeout?: () => void;\n  /** If set to true, the timeout is 8000 milliseconds. If a number is provided, alert will\n   * be dismissed after that amount of time in milliseconds.\n   */\n  timeout?: number | boolean;\n  /** If the user hovers over the alert and `timeout` expires, this is how long to wait\n   * before finally dismissing the alert.\n   */\n  timeoutAnimation?: number;\n  /** Title of the alert.  */\n  title: React.ReactNode;\n  /** @deprecated Sets the heading level to use for the alert title. Default is h4. */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Sets the element to use as the alert title. Default is h4. */\n  component?: keyof JSX.IntrinsicElements;\n  /** Adds accessible text to the alert toggle. */\n  toggleAriaLabel?: string;\n  /** Position of the tooltip which is displayed if text is truncated. */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Truncate title to number of lines. */\n  truncateTitle?: number;\n  /** Adds alert variant styles.  */\n  variant?: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  /** Variant label text for screen readers. */\n  variantLabel?: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nexport const Alert: React.FunctionComponent<AlertProps> = ({\n  variant = AlertVariant.default,\n  isInline = false,\n  isPlain = false,\n  isLiveRegion = false,\n  variantLabel = `${capitalize(variant)} alert:`,\n  'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n  actionClose,\n  actionLinks,\n  title,\n  titleHeadingLevel,\n  component = 'h4',\n  children = '',\n  className = '',\n  ouiaId,\n  ouiaSafe = true,\n  timeout = false,\n  timeoutAnimation = 3000,\n  onTimeout = () => {},\n  truncateTitle = 0,\n  tooltipPosition,\n  customIcon,\n  isExpandable = false,\n  toggleAriaLabel = `${capitalize(variant)} alert details`,\n  onMouseEnter = () => {},\n  onMouseLeave = () => {},\n  id,\n  ...props\n}: AlertProps) => {\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = (\n    <React.Fragment>\n      <span className={css(accessibleStyles.screenReader)}>{variantLabel}</span>\n      {title}\n    </React.Fragment>\n  );\n\n  const titleRef = React.useRef(null);\n  const TitleComponent = (titleHeadingLevel || component) as any;\n  if (titleHeadingLevel !== undefined) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Alert: titleHeadingLevel is deprecated, please use the newer component prop instead to set the alert title element.'\n    );\n  }\n\n  const divRef = React.useRef<HTMLDivElement>();\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n\n  const [timedOut, setTimedOut] = useState(false);\n  const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState<boolean | undefined>();\n  const [containsFocus, setContainsFocus] = useState<boolean | undefined>();\n  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(() => {\n    const calculatedTimeout = timeout === true ? 8000 : Number(timeout);\n    if (calculatedTimeout > 0) {\n      const timer = setTimeout(() => setTimedOut(true), calculatedTimeout);\n      return () => clearTimeout(timer);\n    }\n  }, [timeout]);\n  React.useEffect(() => {\n    const onDocumentFocus = () => {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n\n    document.addEventListener('focus', onDocumentFocus, true);\n\n    return () => document.removeEventListener('focus', onDocumentFocus, true);\n  }, [containsFocus]);\n  React.useEffect(() => {\n    if (containsFocus === false || isMouseOver === false) {\n      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n      return () => clearTimeout(timer);\n    }\n  }, [containsFocus, isMouseOver, timeoutAnimation]);\n  React.useEffect(() => {\n    dismissed && onTimeout();\n  }, [dismissed, onTimeout]);\n\n  const [isExpanded, setIsExpanded] = useState(false);\n  const onToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const myOnMouseEnter = (ev: React.MouseEvent<HTMLDivElement>) => {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n\n  const myOnMouseLeave = (ev: React.MouseEvent<HTMLDivElement>) => {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n\n  if (dismissed) {\n    return null;\n  }\n  const Title = (\n    <TitleComponent\n      {...(isTooltipVisible && { tabIndex: 0 })}\n      ref={titleRef}\n      className={css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)}\n    >\n      {getHeadingContent}\n    </TitleComponent>\n  );\n\n  return (\n    <div\n      ref={divRef}\n      className={css(\n        styles.alert,\n        isInline && styles.modifiers.inline,\n        isPlain && styles.modifiers.plain,\n        isExpandable && styles.modifiers.expandable,\n        isExpanded && styles.modifiers.expanded,\n        styles.modifiers[variant as 'success' | 'danger' | 'warning' | 'info'],\n        className\n      )}\n      aria-label={ariaLabel}\n      {...ouiaProps}\n      {...(isLiveRegion && {\n        'aria-live': 'polite',\n        'aria-atomic': 'false'\n      })}\n      onMouseEnter={myOnMouseEnter}\n      onMouseLeave={myOnMouseLeave}\n      id={id}\n      {...props}\n    >\n      {isExpandable && (\n        <AlertContext.Provider value={{ title, variantLabel }}>\n          <div className={css(styles.alertToggle)}>\n            <AlertToggleExpandButton\n              isExpanded={isExpanded}\n              onToggleExpand={onToggleExpand}\n              aria-label={toggleAriaLabel}\n            />\n          </div>\n        </AlertContext.Provider>\n      )}\n      <AlertIcon variant={variant} customIcon={customIcon} />\n      {isTooltipVisible ? (\n        <Tooltip content={getHeadingContent} position={tooltipPosition}>\n          {Title}\n        </Tooltip>\n      ) : (\n        Title\n      )}\n      {actionClose && (\n        <AlertContext.Provider value={{ title, variantLabel }}>\n          <div className={css(styles.alertAction)}>{actionClose}</div>\n        </AlertContext.Provider>\n      )}\n      {children && (!isExpandable || (isExpandable && isExpanded)) && (\n        <div className={css(styles.alertDescription)}>{children}</div>\n      )}\n      {actionLinks && <div className={css(styles.alertActionGroup)}>{actionLinks}</div>}\n    </div>\n  );\n};\nAlert.displayName = 'Alert';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}