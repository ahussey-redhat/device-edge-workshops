{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Tooltip } from '../Tooltip';\nexport const DataListText = _a => {\n  var {\n      children = null,\n      className = '',\n      component = 'span',\n      wrapModifier = null,\n      tooltip: tooltipProp = '',\n      onMouseEnter: onMouseEnterProp = () => {}\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"wrapModifier\", \"tooltip\", \"onMouseEnter\"]);\n  const Component = component;\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n  const text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.dataListText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, {\n    content: tooltip,\n    isVisible: true\n  }, text) : text;\n};\nDataListText.displayName = 'DataListText';","map":{"version":3,"names":["React","css","styles","Tooltip","DataListText","_a","children","className","component","wrapModifier","tooltip","tooltipProp","onMouseEnter","onMouseEnterProp","props","__rest","Component","setTooltip","useState","event","target","offsetWidth","scrollWidth","innerHTML","text","createElement","Object","assign","modifiers","dataListText","content","isVisible","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\DataList\\DataListText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Tooltip } from '../Tooltip';\nimport { DataListWrapModifier } from './DataList';\n\nexport interface DataListTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered within the data list text */\n  children?: React.ReactNode;\n  /** Additional classes added to the data list text */\n  className?: string;\n  /** Determines which element to render as a data list text. Usually div or span */\n  component?: React.ReactNode;\n  /** Determines which wrapping modifier to apply to the data list text */\n  wrapModifier?: DataListWrapModifier | 'nowrap' | 'truncate' | 'breakWord';\n  /** text to display on the tooltip */\n  tooltip?: string;\n  /** callback used to create the tooltip if text is truncated */\n  onMouseEnter?: (event: any) => void;\n}\n\nexport const DataListText: React.FunctionComponent<DataListTextProps> = ({\n  children = null,\n  className = '',\n  component = 'span',\n  wrapModifier = null,\n  tooltip: tooltipProp = '',\n  onMouseEnter: onMouseEnterProp = () => {},\n  ...props\n}: DataListTextProps) => {\n  const Component = component as any;\n\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n\n  const text = (\n    <Component\n      onMouseEnter={onMouseEnter}\n      className={css(className, wrapModifier && styles.modifiers[wrapModifier], styles.dataListText)}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n\n  return tooltip !== '' ? (\n    <Tooltip content={tooltip} isVisible>\n      {text}\n    </Tooltip>\n  ) : (\n    text\n  );\n};\nDataListText.displayName = 'DataListText';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,SAASC,OAAO,QAAQ,YAAY;AAkBpC,OAAO,MAAMC,YAAY,GAAgDC,EAQrD,IAAI;MARiD;MACvEC,QAAQ,GAAG,IAAI;MACfC,SAAS,GAAG,EAAE;MACdC,SAAS,GAAG,MAAM;MAClBC,YAAY,GAAG,IAAI;MACnBC,OAAO,EAAEC,WAAW,GAAG,EAAE;MACzBC,YAAY,EAAEC,gBAAgB,GAAGA,CAAA,KAAK,CAAE;IAAC,IAAAR,EAEvB;IADfS,KAAK,GAAAC,MAAA,CAAAV,EAAA,EAP+D,iFAQxE,CADS;EAER,MAAMW,SAAS,GAAGR,SAAgB;EAElC,MAAM,CAACE,OAAO,EAAEO,UAAU,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMN,YAAY,GAAIO,KAAU,IAAI;IAClC,IAAIA,KAAK,CAACC,MAAM,CAACC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,WAAW,EAAE;MACvDL,UAAU,CAACN,WAAW,IAAIQ,KAAK,CAACC,MAAM,CAACG,SAAS,CAAC;KAClD,MAAM;MACLN,UAAU,CAAC,EAAE,CAAC;;IAEhBJ,gBAAgB,CAACM,KAAK,CAAC;EACzB,CAAC;EAED,MAAMK,IAAI,GACRxB,KAAA,CAAAyB,aAAA,CAACT,SAAS,EAAAU,MAAA,CAAAC,MAAA;IACRf,YAAY,EAAEA,YAAY;IAC1BL,SAAS,EAAEN,GAAG,CAACM,SAAS,EAAEE,YAAY,IAAIP,MAAM,CAAC0B,SAAS,CAACnB,YAAY,CAAC,EAAEP,MAAM,CAAC2B,YAAY;EAAC,GAC1Ff,KAAK,GAERR,QAAQ,CAEZ;EAED,OAAOI,OAAO,KAAK,EAAE,GACnBV,KAAA,CAAAyB,aAAA,CAACtB,OAAO;IAAC2B,OAAO,EAAEpB,OAAO;IAAEqB,SAAS;EAAA,GACjCP,IAAI,CACG,GAEVA,IACD;AACH,CAAC;AACDpB,YAAY,CAAC4B,WAAW,GAAG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}