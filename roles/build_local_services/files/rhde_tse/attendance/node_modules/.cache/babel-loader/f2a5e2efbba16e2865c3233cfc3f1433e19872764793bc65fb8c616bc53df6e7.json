{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { AlertContext } from './AlertContext';\nexport const AlertActionCloseButton = _a => {\n  var {\n      className,\n      onClose = () => undefined,\n      'aria-label': ariaLabel = '',\n      variantLabel\n    } = _a,\n    props = __rest(_a, [\"className\", \"onClose\", 'aria-label', \"variantLabel\"]);\n  return React.createElement(AlertContext.Consumer, null, _ref => {\n    let {\n      title,\n      variantLabel: alertVariantLabel\n    } = _ref;\n    return React.createElement(Button, Object.assign({\n      variant: ButtonVariant.plain,\n      onClick: onClose,\n      \"aria-label\": ariaLabel === '' ? `Close ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel,\n      className: className\n    }, props), React.createElement(TimesIcon, null));\n  });\n};\nAlertActionCloseButton.displayName = 'AlertActionCloseButton';","map":{"version":3,"names":["React","Button","ButtonVariant","TimesIcon","AlertContext","AlertActionCloseButton","_a","className","onClose","undefined","ariaLabel","variantLabel","props","__rest","createElement","Consumer","_ref","title","alertVariantLabel","Object","assign","variant","plain","onClick","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Alert\\AlertActionCloseButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, ButtonVariant, ButtonProps } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { AlertContext } from './AlertContext';\n\n/** Renders a close button for a dismissable alert when this sub-component is passed into\n * the alert's actionClose property.\n */\n\nexport interface AlertActionCloseButtonProps extends ButtonProps {\n  /** Accessible label for the close button */\n  'aria-label'?: string;\n  /** Additional classes added to the alert action close button. */\n  className?: string;\n  /** A callback for when the close button is clicked. */\n  onClose?: () => void;\n  /** Variant Label for the close button. */\n  variantLabel?: string;\n}\n\nexport const AlertActionCloseButton: React.FunctionComponent<AlertActionCloseButtonProps> = ({\n  className,\n  onClose = () => undefined as any,\n  'aria-label': ariaLabel = '',\n  variantLabel,\n  ...props\n}: AlertActionCloseButtonProps) => (\n  <AlertContext.Consumer>\n    {({ title, variantLabel: alertVariantLabel }) => (\n      <Button\n        variant={ButtonVariant.plain}\n        onClick={onClose}\n        aria-label={ariaLabel === '' ? `Close ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel}\n        className={className}\n        {...props}\n      >\n        <TimesIcon />\n      </Button>\n    )}\n  </AlertContext.Consumer>\n);\nAlertActionCloseButton.displayName = 'AlertActionCloseButton';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,aAAa,QAAqB,WAAW;AAC9D,OAAOC,SAAS,MAAM,mDAAmD;AACzE,SAASC,YAAY,QAAQ,gBAAgB;AAiB7C,OAAO,MAAMC,sBAAsB,GAA0DC,EAM/D,IAAI;MAN2D;MAC3FC,SAAS;MACTC,OAAO,GAAGA,CAAA,KAAMC,SAAgB;MAChC,YAAY,EAAEC,SAAS,GAAG,EAAE;MAC5BC;IAAY,IAAAL,EAEgB;IADzBM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EALmF,sDAM5F,CADS;EACyB,OACjCN,KAAA,CAAAc,aAAA,CAACV,YAAY,CAACW,QAAQ,QACnBC,IAAA;IAAA,IAAC;MAAEC,KAAK;MAAEN,YAAY,EAAEO;IAAiB,CAAE,GAAAF,IAAA;IAAA,OAC1ChB,KAAA,CAAAc,aAAA,CAACb,MAAM,EAAAkB,MAAA,CAAAC,MAAA;MACLC,OAAO,EAAEnB,aAAa,CAACoB,KAAK;MAC5BC,OAAO,EAAEf,OAAO;MAAA,cACJE,SAAS,KAAK,EAAE,GAAG,SAASC,YAAY,IAAIO,iBAAiB,WAAWD,KAAK,EAAE,GAAGP,SAAS;MACvGH,SAAS,EAAEA;IAAS,GAChBK,KAAK,GAETZ,KAAA,CAAAc,aAAA,CAACX,SAAS,OAAG,CACN;EAAA,CACV,CACqB;CACzB;AACDE,sBAAsB,CAACmB,WAAW,GAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}