{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { PageContext } from '../Page/PageContext';\nexport var ToolbarGroupVariant;\n(function (ToolbarGroupVariant) {\n  ToolbarGroupVariant[\"filter-group\"] = \"filter-group\";\n  ToolbarGroupVariant[\"icon-button-group\"] = \"icon-button-group\";\n  ToolbarGroupVariant[\"button-group\"] = \"button-group\";\n})(ToolbarGroupVariant || (ToolbarGroupVariant = {}));\nclass ToolbarGroupWithRef extends React.Component {\n  render() {\n    const _a = this.props,\n      {\n        visibility,\n        visiblity,\n        alignment,\n        spacer,\n        spaceItems,\n        className,\n        variant,\n        children,\n        innerRef\n      } = _a,\n      props = __rest(_a, [\"visibility\", \"visiblity\", \"alignment\", \"spacer\", \"spaceItems\", \"className\", \"variant\", \"children\", \"innerRef\"]);\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('The ToolbarGroup visiblity prop has been deprecated. ' + 'Please use the correctly spelled visibility prop instead.');\n    }\n    return React.createElement(PageContext.Consumer, null, _ref => {\n      let {\n        width,\n        getBreakpoint\n      } = _ref;\n      return React.createElement(\"div\", Object.assign({\n        className: css(styles.toolbarGroup, variant && styles.modifiers[toCamel(variant)], formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)), formatBreakpointMods(alignment, styles, '', getBreakpoint(width)), formatBreakpointMods(spacer, styles, '', getBreakpoint(width)), formatBreakpointMods(spaceItems, styles, '', getBreakpoint(width)), className)\n      }, props, {\n        ref: innerRef\n      }), children);\n    });\n  }\n}\nexport const ToolbarGroup = React.forwardRef((props, ref) => React.createElement(ToolbarGroupWithRef, Object.assign({}, props, {\n  innerRef: ref\n})));","map":{"version":3,"names":["React","styles","css","formatBreakpointMods","toCamel","PageContext","ToolbarGroupVariant","ToolbarGroupWithRef","Component","render","_a","props","visibility","visiblity","alignment","spacer","spaceItems","className","variant","children","innerRef","__rest","undefined","console","warn","createElement","Consumer","_ref","width","getBreakpoint","Object","assign","toolbarGroup","modifiers","ref","ToolbarGroup","forwardRef"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Toolbar\\ToolbarGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { PageContext } from '../Page/PageContext';\n\nexport enum ToolbarGroupVariant {\n  'filter-group' = 'filter-group',\n  'icon-button-group' = 'icon-button-group',\n  'button-group' = 'button-group'\n}\n\nexport interface ToolbarGroupProps extends Omit<React.HTMLProps<HTMLDivElement>, 'ref'> {\n  /** Classes applied to root element of the data toolbar group */\n  className?: string;\n  /** A type modifier which modifies spacing specifically depending on the type of group */\n  variant?: ToolbarGroupVariant | 'filter-group' | 'icon-button-group' | 'button-group';\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** @deprecated prop misspelled */\n  visiblity?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Alignment at various breakpoints. */\n  alignment?: {\n    default?: 'alignRight' | 'alignLeft';\n    md?: 'alignRight' | 'alignLeft';\n    lg?: 'alignRight' | 'alignLeft';\n    xl?: 'alignRight' | 'alignLeft';\n    '2xl'?: 'alignRight' | 'alignLeft';\n  };\n  /** Spacers at various breakpoints. */\n  spacer?: {\n    default?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    md?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    lg?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    xl?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    '2xl'?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n  };\n  /** Space items at various breakpoints. */\n  spaceItems?: {\n    default?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    md?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    lg?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    xl?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    '2xl'?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n  };\n  /** Content to be rendered inside the data toolbar group */\n  children?: React.ReactNode;\n  /** Reference to pass to this group if it has .pf-m-chip-container modifier */\n  innerRef?: React.RefObject<any>;\n}\n\nclass ToolbarGroupWithRef extends React.Component<ToolbarGroupProps> {\n  render() {\n    const {\n      visibility,\n      visiblity,\n      alignment,\n      spacer,\n      spaceItems,\n      className,\n      variant,\n      children,\n      innerRef,\n      ...props\n    } = this.props;\n\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The ToolbarGroup visiblity prop has been deprecated. ' +\n          'Please use the correctly spelled visibility prop instead.'\n      );\n    }\n\n    return (\n      <PageContext.Consumer>\n        {({ width, getBreakpoint }) => (\n          <div\n            className={css(\n              styles.toolbarGroup,\n              variant && styles.modifiers[toCamel(variant) as 'filterGroup' | 'iconButtonGroup' | 'buttonGroup'],\n              formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(alignment, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(spacer, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(spaceItems, styles, '', getBreakpoint(width)),\n              className\n            )}\n            {...props}\n            ref={innerRef}\n          >\n            {children}\n          </div>\n        )}\n      </PageContext.Consumer>\n    );\n  }\n}\n\nexport const ToolbarGroup = React.forwardRef((props: ToolbarGroupProps, ref: any) => (\n  <ToolbarGroupWithRef {...props} innerRef={ref} />\n));\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,yDAAyD;AAC5E,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,oBAAoB,EAAEC,OAAO,QAAQ,oBAAoB;AAClE,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,WAAYC,mBAIX;AAJD,WAAYA,mBAAmB;EAC7BA,mBAAA,iCAA+B;EAC/BA,mBAAA,2CAAyC;EACzCA,mBAAA,iCAA+B;AACjC,CAAC,EAJWA,mBAAmB,KAAnBA,mBAAmB;AAyD/B,MAAMC,mBAAoB,SAAQP,KAAK,CAACQ,SAA4B;EAClEC,MAAMA,CAAA;IACJ,MAAMC,EAAA,GAWF,IAAI,CAACC,KAAK;MAXR;QACJC,UAAU;QACVC,SAAS;QACTC,SAAS;QACTC,MAAM;QACNC,UAAU;QACVC,SAAS;QACTC,OAAO;QACPC,QAAQ;QACRC;MAAQ,IAAAV,EAEI;MADTC,KAAK,GAAAU,MAAA,CAAAX,EAAA,EAVJ,gHAWL,CAAa;IAEd,IAAIG,SAAS,KAAKS,SAAS,EAAE;MAC3B;MACAC,OAAO,CAACC,IAAI,CACV,uDAAuD,GACrD,2DAA2D,CAC9D;;IAGH,OACExB,KAAA,CAAAyB,aAAA,CAACpB,WAAW,CAACqB,QAAQ,QAClBC,IAAA;MAAA,IAAC;QAAEC,KAAK;QAAEC;MAAa,CAAE,GAAAF,IAAA;MAAA,OACxB3B,KAAA,CAAAyB,aAAA,QAAAK,MAAA,CAAAC,MAAA;QACEd,SAAS,EAAEf,GAAG,CACZD,MAAM,CAAC+B,YAAY,EACnBd,OAAO,IAAIjB,MAAM,CAACgC,SAAS,CAAC7B,OAAO,CAACc,OAAO,CAAsD,CAAC,EAClGf,oBAAoB,CAACS,UAAU,IAAIC,SAAS,EAAEZ,MAAM,EAAE,EAAE,EAAE4B,aAAa,CAACD,KAAK,CAAC,CAAC,EAC/EzB,oBAAoB,CAACW,SAAS,EAAEb,MAAM,EAAE,EAAE,EAAE4B,aAAa,CAACD,KAAK,CAAC,CAAC,EACjEzB,oBAAoB,CAACY,MAAM,EAAEd,MAAM,EAAE,EAAE,EAAE4B,aAAa,CAACD,KAAK,CAAC,CAAC,EAC9DzB,oBAAoB,CAACa,UAAU,EAAEf,MAAM,EAAE,EAAE,EAAE4B,aAAa,CAACD,KAAK,CAAC,CAAC,EAClEX,SAAS;MACV,GACGN,KAAK;QACTuB,GAAG,EAAEd;MAAQ,IAEZD,QAAQ,CACL;IAAA,CACP,CACoB;EAE3B;;AAGF,OAAO,MAAMgB,YAAY,GAAGnC,KAAK,CAACoC,UAAU,CAAC,CAACzB,KAAwB,EAAEuB,GAAQ,KAC9ElC,KAAA,CAAAyB,aAAA,CAAClB,mBAAmB,EAAAuB,MAAA,CAAAC,MAAA,KAAKpB,KAAK;EAAES,QAAQ,EAAEc;AAAG,GAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}