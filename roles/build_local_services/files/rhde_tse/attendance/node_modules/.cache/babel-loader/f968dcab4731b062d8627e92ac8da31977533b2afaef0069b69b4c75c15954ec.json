{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport { Toggle } from './Toggle';\nexport const KebabToggle = _a => {\n  var {\n      id = '',\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      children = null,\n      className = '',\n      isOpen = false,\n      'aria-label': ariaLabel = 'Actions',\n      parentRef = null,\n      getMenuRef = null,\n      isActive = false,\n      isPlain = false,\n      isDisabled = false,\n      bubbleEvent = false,\n      onToggle = () => undefined,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ref\n    } = _a,\n    // Types of Ref are different for React.FunctionComponent vs React.Component\n    props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n  return React.createElement(Toggle, Object.assign({\n    id: id,\n    className: className,\n    isOpen: isOpen,\n    \"aria-label\": ariaLabel,\n    parentRef: parentRef,\n    getMenuRef: getMenuRef,\n    isActive: isActive,\n    isPlain: isPlain,\n    isDisabled: isDisabled,\n    onToggle: onToggle,\n    bubbleEvent: bubbleEvent\n  }, props), React.createElement(EllipsisVIcon, null));\n};\nKebabToggle.displayName = 'KebabToggle';","map":{"version":3,"names":["React","EllipsisVIcon","Toggle","KebabToggle","_a","id","children","className","isOpen","ariaLabel","parentRef","getMenuRef","isActive","isPlain","isDisabled","bubbleEvent","onToggle","undefined","ref","props","__rest","createElement","Object","assign","displayName"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Dropdown\\KebabToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DropdownToggleProps } from './DropdownToggle';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport { Toggle } from './Toggle';\n\nexport interface KebabToggleProps extends DropdownToggleProps {\n  /** HTML ID of dropdown toggle */\n  id?: string;\n  /** Anything which can be rendered as dropdown toggle */\n  children?: React.ReactNode;\n  /** Classess applied to root element of dropdown toggle */\n  className?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** Label Toggle button */\n  'aria-label'?: string;\n  /** Callback called when toggle is clicked */\n  onToggle?: (value: boolean, event: any) => void;\n  /** Element which wraps toggle */\n  parentRef?: any;\n  /** The menu element */\n  getMenuRef?: () => HTMLElement;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Disables the dropdown toggle */\n  isDisabled?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Type to put on the button */\n  type?: 'button' | 'submit' | 'reset';\n  /** Allows selecting toggle to select parent */\n  bubbleEvent?: boolean;\n}\n\nexport const KebabToggle: React.FunctionComponent<KebabToggleProps> = ({\n  id = '',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  children = null,\n  className = '',\n  isOpen = false,\n  'aria-label': ariaLabel = 'Actions',\n  parentRef = null,\n  getMenuRef = null,\n  isActive = false,\n  isPlain = false,\n  isDisabled = false,\n  bubbleEvent = false,\n  onToggle = () => undefined as void,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n  ...props\n}: KebabToggleProps) => (\n  <Toggle\n    id={id}\n    className={className}\n    isOpen={isOpen}\n    aria-label={ariaLabel}\n    parentRef={parentRef}\n    getMenuRef={getMenuRef}\n    isActive={isActive}\n    isPlain={isPlain}\n    isDisabled={isDisabled}\n    onToggle={onToggle}\n    bubbleEvent={bubbleEvent}\n    {...props}\n  >\n    <EllipsisVIcon />\n  </Toggle>\n);\nKebabToggle.displayName = 'KebabToggle';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,aAAa,MAAM,wDAAwD;AAClF,SAASC,MAAM,QAAQ,UAAU;AA+BjC,OAAO,MAAMC,WAAW,GAA+CC,EAiBpD,IAAI;MAjBgD;MACrEC,EAAE,GAAG,EAAE;MACP;MACAC,QAAQ,GAAG,IAAI;MACfC,SAAS,GAAG,EAAE;MACdC,MAAM,GAAG,KAAK;MACd,YAAY,EAAEC,SAAS,GAAG,SAAS;MACnCC,SAAS,GAAG,IAAI;MAChBC,UAAU,GAAG,IAAI;MACjBC,QAAQ,GAAG,KAAK;MAChBC,OAAO,GAAG,KAAK;MACfC,UAAU,GAAG,KAAK;MAClBC,WAAW,GAAG,KAAK;MACnBC,QAAQ,GAAGA,CAAA,KAAMC,SAAiB;MAClC;MACAC;IAAG,IAAAd,EAEc;IAFZ;IACFe,KAAK,GAAAC,MAAA,CAAAhB,EAAA,EAhB6D,yJAiBtE,CADS;EACc,OACtBJ,KAAA,CAAAqB,aAAA,CAACnB,MAAM,EAAAoB,MAAA,CAAAC,MAAA;IACLlB,EAAE,EAAEA,EAAE;IACNE,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA,MAAM;IAAA,cACFC,SAAS;IACrBC,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,QAAQ,EAAEA,QAAQ;IAClBC,OAAO,EAAEA,OAAO;IAChBC,UAAU,EAAEA,UAAU;IACtBE,QAAQ,EAAEA,QAAQ;IAClBD,WAAW,EAAEA;EAAW,GACpBI,KAAK,GAETnB,KAAA,CAAAqB,aAAA,CAACpB,aAAa,OAAG,CACV;CACV;AACDE,WAAW,CAACqB,WAAW,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}