{"ast":null,"code":"import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const WizardNav = _ref => {\n  let {\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    isOpen = false,\n    returnList = false,\n    ouiaId,\n    ouiaSafe = true\n  } = _ref;\n  const ouiaProps = useOUIAProps(WizardNav.displayName, ouiaId, ouiaSafe);\n  const innerList = React.createElement(\"ol\", {\n    className: css(styles.wizardNavList)\n  }, children);\n  if (returnList) {\n    return innerList;\n  }\n  return React.createElement(\"nav\", Object.assign({\n    className: css(styles.wizardNav, isOpen && styles.modifiers.expanded),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, ouiaProps), React.createElement(\"ol\", {\n    className: css(styles.wizardNavList)\n  }, children));\n};\nWizardNav.displayName = 'WizardNav';","map":{"version":3,"names":["React","styles","css","useOUIAProps","WizardNav","_ref","children","ariaLabel","ariaLabelledBy","isOpen","returnList","ouiaId","ouiaSafe","ouiaProps","displayName","innerList","createElement","className","wizardNavList","Object","assign","wizardNav","modifiers","expanded"],"sources":["C:\\work\\Demo\\device-edge-workshops\\roles\\build_local_services\\files\\rhde_tse\\attendance\\node_modules\\@patternfly\\react-core\\src\\components\\Wizard\\WizardNav.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface WizardNavProps extends OUIAProps {\n  /** children should be WizardNavItem components */\n  children?: any;\n  /** Aria-label applied to the nav element */\n  'aria-label'?: string;\n  /** Sets the aria-labelledby attribute on the nav element */\n  'aria-labelledby'?: string;\n  /** Whether the nav is expanded */\n  isOpen?: boolean;\n  /** True to return the inner list without the wrapping nav element */\n  returnList?: boolean;\n}\n\nexport const WizardNav: React.FunctionComponent<WizardNavProps> = ({\n  children,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  isOpen = false,\n  returnList = false,\n  ouiaId,\n  ouiaSafe = true\n}: WizardNavProps) => {\n  const ouiaProps = useOUIAProps(WizardNav.displayName, ouiaId, ouiaSafe);\n\n  const innerList = <ol className={css(styles.wizardNavList)}>{children}</ol>;\n\n  if (returnList) {\n    return innerList;\n  }\n\n  return (\n    <nav\n      className={css(styles.wizardNav, isOpen && styles.modifiers.expanded)}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n      {...ouiaProps}\n    >\n      <ol className={css(styles.wizardNavList)}>{children}</ol>\n    </nav>\n  );\n};\nWizardNav.displayName = 'WizardNav';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,uDAAuD;AAC1E,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,YAAY,QAAmB,eAAe;AAevD,OAAO,MAAMC,SAAS,GAA4CC,IAAA,IAQ7C;EAAA,IAR8C;IACjEC,QAAQ;IACR,YAAY,EAAEC,SAAS;IACvB,iBAAiB,EAAEC,cAAc;IACjCC,MAAM,GAAG,KAAK;IACdC,UAAU,GAAG,KAAK;IAClBC,MAAM;IACNC,QAAQ,GAAG;EAAI,CACA,GAAAP,IAAA;EACf,MAAMQ,SAAS,GAAGV,YAAY,CAACC,SAAS,CAACU,WAAW,EAAEH,MAAM,EAAEC,QAAQ,CAAC;EAEvE,MAAMG,SAAS,GAAGf,KAAA,CAAAgB,aAAA;IAAIC,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACiB,aAAa;EAAC,GAAGZ,QAAQ,CAAM;EAE3E,IAAII,UAAU,EAAE;IACd,OAAOK,SAAS;;EAGlB,OACEf,KAAA,CAAAgB,aAAA,QAAAG,MAAA,CAAAC,MAAA;IACEH,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACoB,SAAS,EAAEZ,MAAM,IAAIR,MAAM,CAACqB,SAAS,CAACC,QAAQ,CAAC;IAAA,cACzDhB,SAAS;IAAA,mBACJC;EAAc,GAC3BK,SAAS,GAEbb,KAAA,CAAAgB,aAAA;IAAIC,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACiB,aAAa;EAAC,GAAGZ,QAAQ,CAAM,CACrD;AAEV,CAAC;AACDF,SAAS,CAACU,WAAW,GAAG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}